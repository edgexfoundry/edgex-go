// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"
import models "github.com/edgexfoundry/go-mod-core-contracts/models"

// DBClient is an autogenerated mock type for the DBClient type
type DBClient struct {
	mock.Mock
}

// CloseSession provides a mock function with given fields:
func (_m *DBClient) CloseSession() {
	_m.Called()
}

// GetAllCommands provides a mock function with given fields:
func (_m *DBClient) GetAllCommands() ([]models.Command, error) {
	ret := _m.Called()

	var r0 []models.Command
	if rf, ok := ret.Get(0).(func() []models.Command); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]models.Command)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetCommandById provides a mock function with given fields: id
func (_m *DBClient) GetCommandById(id string) (models.Command, error) {
	ret := _m.Called(id)

	var r0 models.Command
	if rf, ok := ret.Get(0).(func(string) models.Command); ok {
		r0 = rf(id)
	} else {
		r0 = ret.Get(0).(models.Command)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetCommandByNameAndDeviceId provides a mock function with given fields: cname, did
func (_m *DBClient) GetCommandByNameAndDeviceId(cname string, did string) (models.Command, error) {
	ret := _m.Called(cname, did)

	var r0 models.Command
	if rf, ok := ret.Get(0).(func(string, string) models.Command); ok {
		r0 = rf(cname, did)
	} else {
		r0 = ret.Get(0).(models.Command)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, string) error); ok {
		r1 = rf(cname, did)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetCommandsByDeviceId provides a mock function with given fields: id
func (_m *DBClient) GetCommandsByDeviceId(id string) ([]models.Command, error) {
	ret := _m.Called(id)

	var r0 []models.Command
	if rf, ok := ret.Get(0).(func(string) []models.Command); ok {
		r0 = rf(id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]models.Command)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetCommandsByName provides a mock function with given fields: id
func (_m *DBClient) GetCommandsByName(id string) ([]models.Command, error) {
	ret := _m.Called(id)

	var r0 []models.Command
	if rf, ok := ret.Get(0).(func(string) []models.Command); ok {
		r0 = rf(id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]models.Command)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
