// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// MessagingRouter is an autogenerated mock type for the MessagingRouter type
type MessagingRouter struct {
	mock.Mock
}

// ResponseTopic provides a mock function with given fields: requestId
func (_m *MessagingRouter) ResponseTopic(requestId string) (string, bool, error) {
	ret := _m.Called(requestId)

	var r0 string
	if rf, ok := ret.Get(0).(func(string) string); ok {
		r0 = rf(requestId)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 bool
	if rf, ok := ret.Get(1).(func(string) bool); ok {
		r1 = rf(requestId)
	} else {
		r1 = ret.Get(1).(bool)
	}

	var r2 error
	if rf, ok := ret.Get(2).(func(string) error); ok {
		r2 = rf(requestId)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// SetResponseTopic provides a mock function with given fields: requestId, topic, external
func (_m *MessagingRouter) SetResponseTopic(requestId string, topic string, external bool) {
	_m.Called(requestId, topic, external)
}

type mockConstructorTestingTNewMessagingRouter interface {
	mock.TestingT
	Cleanup(func())
}

// NewMessagingRouter creates a new instance of MessagingRouter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMessagingRouter(t mockConstructorTestingTNewMessagingRouter) *MessagingRouter {
	mock := &MessagingRouter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
