// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import context "context"

import mock "github.com/stretchr/testify/mock"
import models "github.com/edgexfoundry/go-mod-core-contracts/models"

// ValueDescriptorUpdater is an autogenerated mock type for the ValueDescriptorUpdater type
type ValueDescriptorUpdater struct {
	mock.Mock
}

// Add provides a mock function with given fields: vdr, ctx
func (_m *ValueDescriptorUpdater) Add(ctx context.Context, vdr *models.ValueDescriptor) (string, error) {
	ret := _m.Called(vdr, ctx)

	var r0 string
	if rf, ok := ret.Get(0).(func(*models.ValueDescriptor, context.Context) string); ok {
		r0 = rf(vdr, ctx)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*models.ValueDescriptor, context.Context) error); ok {
		r1 = rf(vdr, ctx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteByName provides a mock function with given fields: name, ctx
func (_m *ValueDescriptorUpdater) DeleteByName(ctx context.Context, name string) error {
	ret := _m.Called(name, ctx)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, context.Context) error); ok {
		r0 = rf(name, ctx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Update provides a mock function with given fields: vdr, ctx
func (_m *ValueDescriptorUpdater) Update(ctx context.Context, vdr *models.ValueDescriptor) error {
	ret := _m.Called(vdr, ctx)

	var r0 error
	if rf, ok := ret.Get(0).(func(*models.ValueDescriptor, context.Context) error); ok {
		r0 = rf(vdr, ctx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ValueDescriptorForName provides a mock function with given fields: name, ctx
func (_m *ValueDescriptorUpdater) ValueDescriptorForName(ctx context.Context, name string) (models.ValueDescriptor, error) {
	ret := _m.Called(name, ctx)

	var r0 models.ValueDescriptor
	if rf, ok := ret.Get(0).(func(string, context.Context) models.ValueDescriptor); ok {
		r0 = rf(name, ctx)
	} else {
		r0 = ret.Get(0).(models.ValueDescriptor)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, context.Context) error); ok {
		r1 = rf(name, ctx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ValueDescriptorsUsage provides a mock function with given fields: names, ctx
func (_m *ValueDescriptorUpdater) ValueDescriptorsUsage(ctx context.Context, names []string) (map[string]bool, error) {
	ret := _m.Called(names, ctx)

	var r0 map[string]bool
	if rf, ok := ret.Get(0).(func([]string, context.Context) map[string]bool); ok {
		r0 = rf(names, ctx)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(map[string]bool)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func([]string, context.Context) error); ok {
		r1 = rf(names, ctx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
