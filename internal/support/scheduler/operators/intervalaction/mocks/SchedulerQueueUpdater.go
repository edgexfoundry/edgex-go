// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"
import models "github.com/edgexfoundry/go-mod-core-contracts/models"

// SchedulerQueueUpdater is an autogenerated mock type for the SchedulerQueueUpdater type
type SchedulerQueueUpdater struct {
	mock.Mock
}

// QueryIntervalActionByID provides a mock function with given fields: intervalActionId
func (_m *SchedulerQueueUpdater) QueryIntervalActionByID(intervalActionId string) (models.IntervalAction, error) {
	ret := _m.Called(intervalActionId)

	var r0 models.IntervalAction
	if rf, ok := ret.Get(0).(func(string) models.IntervalAction); ok {
		r0 = rf(intervalActionId)
	} else {
		r0 = ret.Get(0).(models.IntervalAction)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(intervalActionId)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// QueryIntervalActionByName provides a mock function with given fields: intervalActionName
func (_m *SchedulerQueueUpdater) QueryIntervalActionByName(intervalActionName string) (models.IntervalAction, error) {
	ret := _m.Called(intervalActionName)

	var r0 models.IntervalAction
	if rf, ok := ret.Get(0).(func(string) models.IntervalAction); ok {
		r0 = rf(intervalActionName)
	} else {
		r0 = ret.Get(0).(models.IntervalAction)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(intervalActionName)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateIntervalActionQueue provides a mock function with given fields: intervalAction
func (_m *SchedulerQueueUpdater) UpdateIntervalActionQueue(intervalAction models.IntervalAction) error {
	ret := _m.Called(intervalAction)

	var r0 error
	if rf, ok := ret.Get(0).(func(models.IntervalAction) error); ok {
		r0 = rf(intervalAction)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
