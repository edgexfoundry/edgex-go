// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"
import models "github.com/edgexfoundry/go-mod-core-contracts/models"

// SchedulerQueueWriter is an autogenerated mock type for the SchedulerQueueWriter type
type SchedulerQueueWriter struct {
	mock.Mock
}

// AddIntervalToQueue provides a mock function with given fields: _a0
func (_m *SchedulerQueueWriter) AddIntervalToQueue(_a0 models.Interval) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(models.Interval) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// QueryIntervalByID provides a mock function with given fields: intervalId
func (_m *SchedulerQueueWriter) QueryIntervalByID(intervalId string) (models.Interval, error) {
	ret := _m.Called(intervalId)

	var r0 models.Interval
	if rf, ok := ret.Get(0).(func(string) models.Interval); ok {
		r0 = rf(intervalId)
	} else {
		r0 = ret.Get(0).(models.Interval)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(intervalId)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// QueryIntervalByName provides a mock function with given fields: intervalName
func (_m *SchedulerQueueWriter) QueryIntervalByName(intervalName string) (models.Interval, error) {
	ret := _m.Called(intervalName)

	var r0 models.Interval
	if rf, ok := ret.Get(0).(func(string) models.Interval); ok {
		r0 = rf(intervalName)
	} else {
		r0 = ret.Get(0).(models.Interval)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(intervalName)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
