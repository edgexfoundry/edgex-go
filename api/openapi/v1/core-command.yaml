openapi: 3.0.0
info:
  title: core-command
  version: 1.2.0
servers:
- url: http://localhost:48082/api
paths:
  /v1/config:
    get:
      description: Fetch the current state of the service's configuration.
      responses:
        200:
          description: The service's configuration as JSON document
        400:
          description: Request is invalid or unparseable or if the
            underlying configuration cannot be serialized to JSON properly.
  /v1/device:
    get:
      description: Retrieve a list of all devices and their available commands.
      responses:
        200:
          description: List of CommandResponse containing the devices and their commands.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/commandresponse'
        500:
          description: For unanticipated or unknown issues encountered.
  /v1/device/name/{name}:
    get:
      description: Retrieve a device by name and its available commands.
      parameters:
      - name: name
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: CommandResponse containing the device and its commands.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commandresponse'
        404:
          description: If no device exists by the name provided.
        500:
          description: For unanticipated or unknown issues encountered.
  /v1/device/name/{name}/command/{commandname}:
    get:
      description: Issue the GET command referenced by the command name to the device/sensor,
        also referenced by name. It is associated to via the device service.
      parameters:
      - name: name
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: commandname
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: String as returned by the device/sensor via the device service.
        400:
          description: If the request is malformed or unparsable
        404:
          description: If device with given name does not exist or device doesn't
            have command with the given command name.
        423:
          description: If the device is locked in an admin state.
        500:
          description: For unanticipated or unknown issues encountered.
    put:
      description: Issue the PUT command referenced by the command name to the device/sensor
        also referenced by name it is associated to via the device service.
      parameters:
      - name: name
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: commandname
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/setting'
      responses:
        200:
          description: String as returned by the device/sensor via the device service.
        400:
          description: If the request is malformed or unparsable
        404:
          description: If device with given name does not exist or device doesn't
            have a command with the given command name.
        423:
          description: If the device is locked in an admin state
        500:
          description: For unanticipated or unknown issues encountered
  /v1/device/{id}:
    get:
      description: Retrieve a device by database generated ID and its available commands.
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: CommandResponse containing the device and its commands.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commandresponse'
        404:
          description: If no device exists by the ID provided.
        500:
          description: For unanticipated or unknown issues encountered.
  /v1/device/{id}/command/{commandid}:
    get:
      description: Issue the GET command referenced by the command ID to the device/sensor,
        also referenced by database generated ID that it is associated to via the device
        service.
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: commandid
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: String as returned by the device/sensor via the device service.
        400:
          description: If the request is malformed or unparsable
        404:
          description: If no device exists by the ID provided
        423:
          description: If the device is locked in an admin state.
        500:
          description: For unanticipated or unknown issues encountered.
    put:
      description: Issue the PUT command referenced by the command ID to the device/sensor,
        also referenced by database generated ID that it is associated to via the device
        service.
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: commandid
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/setting'
      responses:
        200:
          description: String as returned by the device/sensor via the device service.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/setting'
        400:
          description: If the request is malformed or unparsable
        404:
          description: If no device exists by the ID provided
        423:
          description: If the device is locked in an admin state
        500:
          description: For unanticipated or unknown issues encountered.
  /v1/metrics:
    get:
      description: Fetch the current state of the service's metrics.
      responses:
        200:
          description: The service's metrics as JSON document
  /v1/ping:
    get:
      description: Test service providing an indication that the service is available.
      responses:
        200:
          description: String literal confirming that the service is up.
        500:
          description: For unanticipated or unknown issues encountered.
  /version:
    get:
      description: Get the API version
      responses:
        200:
          description: The service's API version as JSON document
components:
  schemas:
    addressable:
      title: addressable
      type: object
      properties:
        address:
          title: address
          type: string
        created:
          title: created
          type: integer
        id:
          title: id
          type: string
        modified:
          title: modified
          type: integer
        name:
          title: name
          type: string
        origin:
          title: origin
          type: integer
        password:
          title: password
          type: string
        path:
          title: path
          type: string
        port:
          title: port
          type: integer
        protocol:
          title: protocol
          type: string
        publisher:
          title: publisher
          type: string
        topic:
          title: topic
          type: string
        user:
          title: user
          type: string
    commandresponse:
      title: commandresponse
      type: object
      properties:
        host:
          title: host
          type: string
        device:
          $ref: '#/components/schemas/device'
    device:
      title: device
      type: object
      properties:
        addressable:
          $ref: '#/components/schemas/device_addressable'
        adminState:
          title: adminState
          type: string
        created:
          title: created
          type: integer
        description:
          title: description
          type: string
        id:
          title: id
          type: string
        labels:
          title: labels
          uniqueItems: false
          type: array
          items:
            title: labels
            type: string
        lastConnected:
          title: lastConnected
          type: integer
        lastReported:
          title: lastReported
          type: integer
        modified:
          title: modified
          type: integer
        name:
          title: name
          type: string
        operatingState:
          title: operatingState
          type: string
        origin:
          title: origin
          type: integer
      description: device or sensor supplying data and taking actuation commands
    setting:
      title: setting
      type: object
      additionalProperties:
        type: string
    device_addressable:
      type: object
      properties:
        address:
          title: address
          type: string
        created:
          title: created
          type: integer
        id:
          title: id
          type: string
        modified:
          title: modified
          type: integer
        name:
          title: name
          type: string
        origin:
          title: origin
          type: integer
        password:
          title: password
          type: string
        path:
          title: path
          type: string
        port:
          title: port
          type: integer
        protocol:
          title: protocol
          type: string
        publisher:
          title: publisher
          type: string
        topic:
          title: topic
          type: string
        user:
          title: user
          type: string
  requestBodies:
    setting:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/setting'
      required: true
