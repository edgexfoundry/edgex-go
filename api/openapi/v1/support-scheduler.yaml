openapi: 3.0.0
info:
  title: support-scheduler
  version: 1.2.0
servers:
- url: http://localhost:48085/api
paths:
  /v1/config:
    get:
      description: Fetch the current state of the service's configuration.
      responses:
        200:
          description: The service's configuration as JSON document
        400:
          description: Request is invalid or unparseable or if the
            underlying configuration cannot be serialized to JSON properly.
  /v1/interval:
    get:
      description: Return all intervals sorted by ID. This interval's information
        consists of the created and modified timestamps, along with the relevant ID,
        name, start, frequency. May return nil if no interval with the ID is found.
      responses:
        200:
          description: List of intervals
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/interval'
        400:
          description: For malformed or unparsable requests
        413:
          description: If the number of intervals exceeds the current max limit.
        500:
          description: For unknown or unanticipated issues
    put:
      description: Update an interval identified by the ID or name in the object provided.
        ID is used first, name is used second for identification purposes.
      requestBody:
        $ref: '#/components/requestBodies/interval'
      responses:
        200:
          description: Boolean indicating success of the update
        400:
          description: For malformed or unparsable requests
        409:
          description: If the start, end, or frequency strings are not properly formatted
        500:
          description: For unknown or unanticipated issues
    post:
      description: Add a new interval - name must be unique. Returns Internal Service
        Error (HTTP 500) for unknown or unanticipated issues. DataValidationException
        (HTTP 409) if the cron expression string is not properly formatted.
      requestBody:
        $ref: '#/components/requestBodies/interval'
      responses:
        200:
          description: Database-generated identifier for the new interval
        400:
          description: For malformed or unparsable requests
        409:
          description: If the start, end, or frequency strings are not properly formatted
            or if the name is determined to not be unique with regard to others
        500:
          description: For unknown or unanticipated issues
  /v1/interval/name/{name}:
    get:
      description: Return an interval matching given, unique name. This interval's
        information consists of the created and modified timestamps, along with
        the relevant ID, name, start, frequency. May be nil if no interval matches
        on the name provided.
      parameters:
      - name: name
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Interval matching on name
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/interval'
        400:
          description: For malformed or unparsable requests
        404:
          description: If no interval is found for the identifier provided.
        500:
          description: For unknown or unanticipated issues
    delete:
      description: Remove the interval designated by name.
      parameters:
      - name: name
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Boolean indicating success of the remove operation
        400:
          description: For malformed or unparsable requests
        404:
          description: If no interval is found for the name provided.
        500:
          description: For unknown or unanticipated issues
  /v1/interval/{id}:
    get:
      description: Fetch a specific interval by database generated ID. This information
        consists of the created and modified timestamps, along with the relevant ID,
        name, start, frequency. May return nil if no interval with the ID is found.
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Interval matching on the ID
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/interval'
        404:
          description: If no interval is found for the identifier provided.
        500:
          description: For unknown or unanticipated issues
    delete:
      description: Remove the interval designated by database generated ID.
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Boolean indicating success of the remove operation
        404:
          description: If no interval is found for the identifier provided.
        503:
          description: For unknown or unanticipated issues
  /v1/intervalaction:
    get:
      description: Return all interval events sorted by ID. The interval events information
        consists of the ID, created, modified, name, interval, target, protocol, httpMethod,
        address, port.
      responses:
        200:
          description: List of interval events
        413:
          description: If the number of intervals exceeds the current max limit.
        500:
          description: For unknown or unanticipated issues
    put:
      description: Update the IntervalAction identified by the ID or name in the object
        provided. ID is used first, name is used second for identification purposes.
      requestBody:
        $ref: '#/components/requestBodies/intervalAction'
      responses:
        200:
          description: Boolean indicating success of the update
        400:
          description: For malformed or unparsable requests
        404:
          description: If no interval is found for the identifier provided.
        409:
          description: If an attempt to change the name is made when the interval
            action is still being referenced by device reports
        500:
          description: For unknown or unanticipated issues
    post:
      description: Add a new IntervalAction for a given, unique IntervalAction.
      requestBody:
        $ref: '#/components/requestBodies/intervalAction'
      responses:
        200:
          description: Database generated identifier for the new interval
        400:
          description: For malformed or unparsable requests
        404:
          description: If the action's associated interval is not found (referenced
            by name)
        409:
          description: If the interval was not provided or if the name is determined
            to not be unique with regard to others
        500:
          description: for unknown or unanticipated issues or if interval action name
            is a duplicate
  /v1/intervalaction/name/{name}:
    get:
      description: Return interval events matching given, unique name. The interval
        events information consists of the ID, created, modified, name, interval,
        target, protocol, httpMethod, address, port. May be nil if no interval
        events matches on the name provided.
        name.
      parameters:
      - name: name
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Interval action matching on name
        400:
          description: For malformed or unparsable requests
        404:
          description: If no IntervalAction is found with the provided name
        500:
          description: For unknown or unanticipated issues
    delete:
      description: Remove the IntervalAction designated by name.
      parameters:
      - name: name
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Boolean indicating success of the remove operation
        400:
          description: For malformed or unparsable requests
        404:
          description: If no IntervalAction is found with the provided name
        409:
          description: If an attempt to delete a interval action still being referenced
            by device reports
        500:
          description: for unknown or unanticipated issues
  /v1/intervalaction/target/{name}:
    get:
      description: Return interval events matching given, unique name. The interval
        events information consists of the ID, created, modified, name, interval,
        target, protocol, httpMethod, address, port. May be nil if no interval
        events matches on the name provided.
        name.
      parameters:
      - name: name
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Interval action matching on name
        400:
          description: For malformed or unparsable requests
        404:
          description: If no IntervalAction is found with the provided name
        500:
          description: For unknown or unanticipated issues
    delete:
      description: Remove the IntervalAction(s) designated by name.
      parameters:
      - name: name
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Boolean indicating success of the remove operation
        400:
          description: For malformed or unparsable requests
        404:
          description: If no IntervalAction is found with the provided name
        409:
          description: If an attempt to delete a interval action still being referenced
            by device reports
        500:
          description: for unknown or unanticipated issues
  /v1/intervalaction/{id}:
    get:
      description: Fetch a specific set of interval events matching given, unique
        name. The interval events information consists of the ID, created,
        modified, name, interval, target, protocol, httpMethod, address,
        port. May return nil if no interval action with the ID is found.
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Interval action matching on the ID
        404:
          description: If no IntervalAction is found with the provided ID
        500:
          description: For unknown or unanticipated issues
    delete:
      description: Remove the IntervalAction designated by database generated ID.
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Boolean indicating success of the remove operation
        404:
          description: If no IntervalAction is found with the provided ID
        409:
          description: If an attempt to delete a interval action still being referenced
            by device reports
        503:
          description: For unknown or unanticipated issues
  /v1/ping:
    get:
      description: ping
      responses:
        200:
          description: Successful Response
  /version:
    get:
      description: Get the API version
      responses:
        200:
          description: The service's API version as JSON document
components:
  schemas:
    interval:
      title: interval
      type: object
      properties:
        created:
          title: created
          type: integer
        end:
          title: end
          type: integer
        frequency:
          title: frequency
          type: integer
        id:
          title: id
          type: string
        modified:
          title: modified
          type: integer
        name:
          title: name
          type: string
        origin:
          title: origin
          type: integer
        start:
          title: start
          type: integer
      description: meta data around anything that needs to be scheduled (frequency
        with optional start and end times).
    intervalAction:
      title: intervalAction
      required:
      - target
      type: object
      properties:
        parameters:
          title: parameters
          type: string
        address:
          title: address
          type: string
        created:
          title: created
          type: integer
        httpmethod:
          title: httpmethod
          type: string
        id:
          title: id
          type: string
        interval:
          title: interval
          type: string
        modified:
          title: modified
          type: integer
        name:
          title: name
          type: string
        origin:
          title: origin
          type: integer
        password:
          title: password
          type: string
        path:
          title: path
          type: string
        port:
          title: port
          type: integer
        protocol:
          title: protocol
          type: string
        publisher:
          title: publisher
          type: string
        target:
          title: target
          type: string
        topic:
          title: topic
          type: string
        user:
          title: user
          type: string
  requestBodies:
    interval:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/interval'
      required: true
    intervalAction:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/intervalAction'
      required: true
