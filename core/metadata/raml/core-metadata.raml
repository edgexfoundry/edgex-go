#%RAML 0.8
title: core-metadata
version: "1.0.0"
baseUri: "http://localhost:48081/api/v1"
schemas:
    -
        deviceprofile: '{"type":"object","$schema":"http://json-schema.org/draft-03/schema#","description": "template describing devices and sensors of the same nature in reporting the same data and offering the same commands", "title":"deviceprofile","properties":{"id":{"type":"string","required":false,"title":"id"},"created":{"type":"integer","required":false,"title":"created"},"modified":{"type":"integer","required":false,"title":"modified"},"origin":{"type":"integer","required":false,"title":"origin"},"name":{"type":"string","required":false,"title":"name"},"manufacturer":{"type":"string","required":false,"title":"manufacturer"},"model":{"type":"string","required":false,"title":"model"},"labels":{"type":"array","required":false,"title":"labels","items":{"type":"string","title":"labels"},"uniqueItems":false},"description":{"type":"string","required":false,"title":"description"}, "objects":{"type":"string","required":false,"title":"objects"}}}'
    -
        devicereport: '{"type":"object","$schema":"http://json-schema.org/draft-03/schema#","description": "description of values (value descriptors) that should be collected per device on a schedule event", "title":"devicereport","properties":{"id":{"type":"string","required":false,"title":"id"},"created":{"type":"integer","required":false,"title":"created"},"modified":{"type":"integer","required":false,"title":"modified"},"origin":{"type":"integer","required":false,"title":"origin"},"name":{"type":"string","required":false,"title":"name"},"device":{"type":"string","required":false,"title":"device"},"event":{"type":"string","required":false,"title":"event"},"expected":{"type":"array","required":false,"title":"expected","items":{"type":"string","title":"expected"},"uniqueItems":false}}}'
    -
        deviceservice: '{"type":"object","$schema":"http://json-schema.org/draft-03/schema#","description":"manages devices and interfaces with core data","title":"deviceservice","properties":{"id":{"type":"string","required":false,"title":"id"},"created":{"type":"integer","required":false,"title":"created"},"modified":{"type":"integer","required":false,"title":"modified"},"origin":{"type":"integer","required":false,"title":"origin"},"name":{"type":"string","required":false,"title":"name"},"description":{"type":"string","required":false,"title":"description"},"lastConnected":{"type":"integer","required":false,"title":"lastConnected"},"lastReported":{"type":"integer","required":false,"title":"lastReported"},"labels":{"type":"array","required":false,"title":"labels","items":{"type":"string","title":"labels"},"uniqueItems":false},"adminState":{"type":"string","required":false,"title":"adminState"},"operatingState":{"type":"string","required":false,"title":"operatingState"},"addressable":{"type":"object","properties":{"id":{"type":"string","required":false,"title":"id"},"created":{"type":"integer","required":false,"title":"created"},"modified":{"type":"integer","required":false,"title":"modified"},"origin":{"type":"integer","required":false,"title":"origin"},"name":{"type":"string","required":false,"title":"name"},"protocol":{"type":"string","required":false,"title":"protocol"},"address":{"type":"string","required":false,"title":"address"},"port":{"type":"integer","required":false,"title":"port"},"path":{"type":"string","required":false,"title":"path"},"publisher":{"type":"string","required":false,"title":"publisher"},"user":{"type":"string","required":false,"title":"user"},"password":{"type":"string","required":false,"title":"password"},"topic":{"type":"string","required":false,"title":"topic"}}}}}'
    -
        device: '{"type":"object","$schema":"http://json-schema.org/draft-03/schema#","description":"device or sensor supplying data and taking actuation commands", "title":"device","properties":{"id":{"type":"string","required":false,"title":"id"},"created":{"type":"integer","required":false,"title":"created"},"modified":{"type":"integer","required":false,"title":"modified"},"origin":{"type":"integer","required":false,"title":"origin"},"name":{"type":"string","required":false,"title":"name"},"description":{"type":"string","required":false,"title":"description"},"lastConnected":{"type":"integer","required":false,"title":"lastConnected"},"lastReported":{"type":"integer","required":false,"title":"lastReported"},"labels":{"type":"array","required":false,"title":"labels","items":{"type":"string","title":"labels"},"uniqueItems":false},"adminState":{"type":"string","required":false,"title":"adminState"},"operatingState":{"type":"string","required":false,"title":"operatingState"},"addressable":{"type":"object","properties":{"id":{"type":"string","required":false,"title":"id"},"created":{"type":"integer","required":false,"title":"created"},"modified":{"type":"integer","required":false,"title":"modified"},"origin":{"type":"integer","required":false,"title":"origin"},"name":{"type":"string","required":false,"title":"name"},"protocol":{"type":"string","required":false,"title":"protocol"},"address":{"type":"string","required":false,"title":"address"},"port":{"type":"integer","required":false,"title":"port"},"path":{"type":"string","required":false,"title":"path"},"publisher":{"type":"string","required":false,"title":"publisher"},"user":{"type":"string","required":false,"title":"user"},"password":{"type":"string","required":false,"title":"password"},"topic":{"type":"string","required":false,"title":"topic"}}}}}'
    -
        schedule: '{"type":"object","$schema":"http://json-schema.org/draft-03/schema#","description":"meta data around anything that needs to be scheduled (frequency with optional start and end times).","title":"schedule","properties":{"id":{"type":"string","required":false,"title":"id"},"created":{"type":"integer","required":false,"title":"created"},"modified":{"type":"integer","required":false,"title":"modified"},"origin":{"type":"integer","required":false,"title":"origin"},"name":{"type":"string","required":false,"title":"name"},"start":{"type":"integer","required":false,"title":"start"},"end":{"type":"integer","required":false,"title":"end"},"frequency":{"type":"integer","required":false,"title":"frequency"}}}'
    -
        scheduleevent: '{"type":"object","$schema":"http://json-schema.org/draft-03/schema#","title":"scheduleevent","properties":{"id":{"type":"string","required":false,"title":"id"},"created":{"type":"integer","required":false,"title":"created"},"modified":{"type":"integer","required":false,"title":"modified"},"origin":{"type":"integer","required":false,"title":"origin"},"name":{"type":"string","required":false,"title":"name"},"addressable":{"type":"object","properties":{"name":{"type":"string","required":false,"title":"name"}},"required":false,"title":"addressable"},"parameters":{"type":"string","required":false,"title":"parameters"},"schedule":{"type":"string","required":false,"title":"schedule"},"service":{"type":"string","required":true,"title":"service"}}}'
    -
        addressable: '{"type":"object","$schema":"http://json-schema.org/draft-03/schema#","title":"addressable","properties":{"id":{"type":"string","required":false,"title":"id"},"created":{"type":"integer","required":false,"title":"created"},"modified":{"type":"integer","required":false,"title":"modified"},"origin":{"type":"integer","required":false,"title":"origin"},"name":{"type":"string","required":false,"title":"name"},"protocol":{"type":"string","required":false,"title":"protocol"},"address":{"type":"string","required":false,"title":"address"},"port":{"type":"integer","required":false,"title":"port"},"path":{"type":"string","required":false,"title":"path"},"publisher":{"type":"string","required":false,"title":"publisher"},"user":{"type":"string","required":false,"title":"user"},"password":{"type":"string","required":false,"title":"password"},"topic":{"type":"string","required":false,"title":"topic"},"method":{"type":"string","required":true,"title":"method"}}}'
    -
        command: '{"type":"object","$schema":"http://json-schema.org/draft-03/schema#","title":"command","properties":{"id":{"type":"string","required":false,"title":"id"},"created":{"type":"integer","required":false,"title":"created"},"modified":{"type":"integer","required":false,"title":"modified"},"origin":{"type":"integer","required":false,"title":"origin"},"name":{"type":"string","required":false,"title":"name"},"get":{"type":"object","properties":{"path":{"type":"string","required":false,"title":"path"},"responses":{"type":"object","properties":{"code":{"type":"string","required":false,"title":"code"},"description":{"type":"string","required":false,"title":"description"},"expectedValues":{"type":"string","required":false,"title":"expectedValues"}}}}},"put":{"type":"object","properties":{"path":{"type":"string","required":false,"title":"path"}}}}}'
    -
        provisionwatcher: '{"type":"object","$schema":"http://json-schema.org/draft-03/schema#","title":"provisionwatcher","properties":{"id":{"type":"string","required":false,"title":"id"},"created":{"type":"integer","required":false,"title":"created"},"modified":{"type":"integer","required":false,"title":"modified"},"origin":{"type":"integer","required":false,"title":"origin"},"name":{"type":"string","required":false,"title":"name"}}}'
/ping:
    displayName: Ping Resource
    description: Example - http://localhost:48081/api/v1/ping
    get:
        description: ping
        responses:
            "200":
                description: Successful Response
/device/id/{id}:
    displayName: Device Resource (by id)
    description: Example - http://localhost:48081/api/v1/device/id/57bc6d80555e5218873e5a30
    uriParameters:
        id:
            displayName: id
            type: string
            required: false
            repeat: false
    delete:
        description: Remove the Device designated by database generated id. This does not remove associated objects (addressable, service, profile, etc.). Returns ServiceException (HTTP 503) for unknown or unanticipated issues. Returns NotFoundException (HTTP 404) if the device cannot be found by the identifier provided.
        responses:
            "200":
                description: boolean indicating success of the remove operation
            "503":
                description: for unknown or unanticipated issues.
            "404":
                description: if the device cannot be found by the id provided.
/device/name/{name}/opstate/{opState}:
    displayName: Device Resource (set op state by name)
    description: Example - http://localhost:48081/api/v1/device/name/livingroomthermostat/opstate/locked (where livingroomthermostat is the device name)
    uriParameters:
        opState:
            displayName: opState
            type: string
            required: false
            repeat: false
        name:
            displayName: name
            type: string
            required: false
            repeat: false
    put:
        description: Update the op status time of the device by unique name of the device. Returns ServiceException (HTTP 503) for unknown or unanticipated issues. Returns NotFoundException (HTTP 404) if the device cannot be found by the name provided.
        responses:
            "200":
                description: boolean indicating success of the operation
            "503":
                description: for unknown or unanticipated issues.
            "404":
                description: if the device cannot be found by the name provided.
            "409":
                description: if attempting to update the state with null
/device/name/{name}/adminstate/{adminState}:
    displayName: Device Resource (set admin state by name)
    description: Example - http://localhost:48081/api/v1/device/name/livingroomthermostat/adminstate/locked (where livingroomthermostat is the device name)
    uriParameters:
        name:
            displayName: name
            type: string
            required: false
            repeat: false
        adminState:
            displayName: adminState
            type: string
            required: false
            repeat: false
    put:
        description: Update the admin state of the device by device name. Returns ServiceException (HTTP 503) for unknown or unanticipated issues. Returns NotFoundException (HTTP 404) if the device cannot be found by the identifier provided.
        responses:
            "200":
                description: boolean indicating success of the operation
            "503":
                description: for unknown or unanticipated issues.
            "404":
                description: if the device cannot be found by the name provided.
            "409":
                description: if attempting to update the state with null
/device/name/{name}/lastreported/{time}:
    displayName: Device Resource (set last reported by name)
    description: Example - http://localhost:48081/api/v1/device/name/livingroomthermostat/lastreported/1471966597000 (where livingroomthermostat is the device name)
    uriParameters:
        time:
            displayName: time
            type: string
            required: false
            repeat: false
        name:
            displayName: name
            type: string
            required: false
            repeat: false
    put:
        description: Update the last reported time of the device by unique name of the device. Returns ServiceException (HTTP 503) for unknown or unanticipated issues. Returns NotFoundException (HTTP 404) if the device cannot be found by the name provided.
        responses:
            "200":
                description: boolean indicating success of update
            "503":
                description: for unknown or unanticipated issues.
            "404":
                description: if the device cannot be found by the name provided.
/device/name/{name}/lastreported/{time}/{notify}:
    displayName: Device Resource (set last reported by name)
    description: Example - http://localhost:48081/api/v1/device/name/livingroomthermostat/lastreported/1471966597000/true (where livingroomthermostat is the device name)
    uriParameters:
        time:
            displayName: time
            type: string
            required: false
            repeat: false
        name:
            displayName: name
            type: string
            required: false
            repeat: false
        notify:
            displayName: notify
            type: string
            required: false
            repeat: false
    put:
        description: Update the last reported time of the device by unique name of the device. The notify boolean indicates whether the owning device service should be notified of the change.  Returns ServiceException (HTTP 503) for unknown or unanticipated issues. Returns NotFoundException (HTTP 404) if the device cannot be found by the name provided.
        responses:
            "200":
                description: boolean indicating success of update
            "503":
                description: for unknown or unanticipated issues.
            "404":
                description: if the device cannot be found by the name provided.
/device/name/{name}/lastconnected/{time}:
    displayName: Device Resource (set last connected by name)
    description: Example - http://localhost:48081/api/v1/device/name/livingroomthermostat/lastconnected/1471966597000 (where livingroomthermostat is the device name)
    uriParameters:
        time:
            displayName: time
            type: string
            required: false
            repeat: false
        name:
            displayName: name
            type: string
            required: false
            repeat: false
    put:
        description: Update the last connected time of the device by unique name of the device. Returns ServiceException (HTTP 503) for unknown or unanticipated issues. Returns NotFoundException (HTTP 404) if the device cannot be found by the name provided.
        responses:
            "200":
                description: boolean indicating success of update
            "503":
                description: for unknown or unanticipated issues.
            "404":
                description: if the device cannot be found by the name provided.
/device/name/{name}/lastconnected/{time}/{notify}:
    displayName: Device Resource (set last connected by name)
    description: Example - http://localhost:48081/api/v1/device/name/livingroomthermostat/lastconnected/1471966597000/true (where livingroomthermostat is the device name)
    uriParameters:
        time:
            displayName: time
            type: string
            required: false
            repeat: false
        name:
            displayName: name
            type: string
            required: false
            repeat: false
        notify:
            displayName: notify
            type: string
            required: false
            repeat: false
    put:
        description: Update the last connected time of the device by unique name of the device. The notify boolean indicates whether the owning device service should be notified of the change. Returns ServiceException (HTTP 503) for unknown or unanticipated issues. Returns NotFoundException (HTTP 404) if the device cannot be found by the name provided.
        responses:
            "200":
                description: boolean indicating success of update
            "503":
                description: for unknown or unanticipated issues.
            "404":
                description: if the device cannot be found by the name provided.
/device/name/{name}:
    displayName: Device Resource (by name)
    description: Example - http://localhost:48081/api/v1/device/name/livingroomthermostat  (where livingroomthermostat is the device name)
    uriParameters:
        name:
            displayName: name
            type: string
            required: false
            repeat: false
    delete:
        description: Remove the Device designated by unique name. This does not remove associated objects (addressable, service, profile, etc.). Returns ServiceException (HTTP 503) for unknown or unanticipated issues. Returns NotFoundException (HTTP 404) if the device cannot be found by the identifier provided.
        responses:
            "200":
                description: boolean indicating success of the remove operation
            "503":
                description: for unknown or unanticipated issues.
            "404":
                description: if the device cannot be found by the name provided.
    get:
        description: Return Device matching given name (device names should be unique). May be null if no device matches on the name provided. Returns ServiceException (HTTP 503) for unknown or unanticipated issues. Returns NotFoundException (HTTP 404) if the device cannot be found by the identifier provided.
        responses:
            "200":
                description: device matching on name
                body:
                    application/json:
                        schema: device
                        example: '{"id":"57bc6d80555e5218873e5a30","created":1471966592240,"modified":1471966592240,"origin":1471806386919,"name":"livingroomthermostat","description":"living room HVAC thermostat","adminState":null,"operatingState":"enabled","addressable":{"id":"57bc6d5d555e5218873e5a2c","created":1471966557670,"modified":1471966557670,"origin":1471806386919,"name":"hvac thermo address","protocol":"HTTP","address":"172.17.0.1","port":48089,"path":"/livingroomthermostat","publisher":"none","user":"none","password":"none","topic":"none"},"lastConnected":0,"lastReported":0,"labels":["home","hvac","thermostat"],"location":"{lat:45.45,long:47.80}","service":{"id":"57bc6d6a555e5218873e5a2d","created":1471966570667,"modified":1471966570667,"origin":1471806386919,"name":"home thermostat device service","description":"manage home thermostats","lastConnected":0,"lastReported":0,"labels":["hvac","thermostat"],"adminState":"unlocked","operatingState":"enabled","addressable":{"id":"57bc6d5d555e5218873e5a2c","created":1471966557670,"modified":1471966557670,"origin":1471806386919,"name":"hvac thermo address","protocol":"HTTP","address":"172.17.0.1","port":48089,"path":"/livingroomthermostat","publisher":"none","user":"none","password":"none","topic":"none"}},"profile":{"id":"57bc6d7b555e5218873e5a2f","created":1471966587727,"modified":1471966587727,"origin":1471806386919,"name":"thermostat profile","manufacturer":"Honeywell","model":"ABC123","labels":["bacnet","thermostat","Honeywell"],"description":"BACnet Honeywell thermostats","objects":{"resources":{"CurrentHumidity":{"get":[{"parameter":"CurrentHumidity","property":"presentValue","operation":"get","object":"AnalogValue_22"}]}}},"commands":[{"id":"57bc6d7b555e5218873e5a2e","created":1471966587724,"modified":1471966587724,"origin":1471806386919,"name":"cooling point","get":{"path":"/cooling","responses":[{"code":"200","description":"ok","expectedValues":["temperature"]}]},"put":{"path":"/cooling","responses":[{"code":"200","description":"ok","expectedValues":["temperature"]}],"parameterNames":["coolingpoint"]}}]}}'
            "404":
                description: if the device cannnot be found by the name provided.
            "503":
                description: for unknown or unanticipated issues.
/device/{id}/opstate/{opState}:
    displayName: Device Resource (set op state by id)
    description: Example - http://localhost:48081/api/v1/device/57bc6d80555e5218873e5a30/opstate/disabled
    uriParameters:
        id:
            displayName: id
            type: string
            required: false
            repeat: false
        opState:
            displayName: opState
            type: string
            required: false
            repeat: false
    put:
        description: Update the op state of the device by database generated identifier. Returns ServiceException (HTTP 503) for unknown or unanticipated issues. Returns NotFoundException (HTTP 404) if the device cannot be found by the identifier provided.
        responses:
            "200":
                description: boolean indicating success of the operation
            "503":
                description: for unknown or unanticipated issues.
            "404":
                description: if the device cannot be found by the identifier provided.
            "409":
                description: if attempting to update the state with null
/device/{id}/adminstate/{adminState}:
    displayName: Device Resource (set admin state by id)
    description: Example - http://localhost:48081/api/v1/device/57bc6d80555e5218873e5a30/adminstate/locked
    uriParameters:
        id:
            displayName: id
            type: string
            required: false
            repeat: false
        adminState:
            displayName: adminState
            type: string
            required: false
            repeat: false
    put:
        description: Update the admin state of the device by database generated identifier. Returns ServiceException (HTTP 503) for unknown or unanticipated issues. Returns NotFoundException (HTTP 404) if the device cannot be found by the identifier provided.
        responses:
            "200":
                description: boolean indicating success of the operation
            "503":
                description: for unknown or unanticipated issues.
            "404":
                description: if the device cannot be found by the identifier provided.
            "409":
                description: if attempting to update the state with null
/device/{id}/lastreported/{time}:
    displayName: Device Resource (set last reported by id)
    description: Example - http://localhost:48081/api/v1/device/57bc6d80555e5218873e5a30/lastreported/1471966597000
    uriParameters:
        id:
            displayName: id
            type: string
            required: false
            repeat: false
        time:
            displayName: time
            type: string
            required: false
            repeat: false
    put:
        description: Update the last reported time of the device by database generated identifier. Returns ServiceException (HTTP 503) for unknown or unanticipated issues. Returns NotFoundException (HTTP 404) if the device cannot be found by the identifier provided.
        responses:
            "200":
                description: boolean indicating success of update
            "503":
                description: for unknown or unanticipated issues.
            "404":
                description: if the device cannot be found by the identifier provided.
/device/{id}/lastreported/{time}/{notify}:
    displayName: Device Resource (set last reported by id)
    description: Example - http://localhost:48081/api/v1/device/57bc6d80555e5218873e5a30/lastreported/1471966597000/true
    uriParameters:
        id:
            displayName: id
            type: string
            required: false
            repeat: false
        time:
            displayName: time
            type: string
            required: false
            repeat: false
        notify:
            displayName: notify
            type: string
            required: false
            repeat: false
    put:
        description: Update the last reported time of the device by database generated identifier. The notify boolean indicates whether the owning device service should be notified of the change. Returns ServiceException (HTTP 503) for unknown or unanticipated issues. Returns NotFoundException (HTTP 404) if the device cannot be found by the identifier provided.
        responses:
            "200":
                description: boolean indicating success of update
            "503":
                description: for unknown or unanticipated issues.
            "404":
                description: if the device cannot be found by the identifier provided.
/device/{id}/lastconnected/{time}:
    displayName: Device Resource (set last connected by id)
    description: Example - http://localhost:48081/api/v1/device/57bc6d80555e5218873e5a30/lastconnected/1471966597000
    uriParameters:
        id:
            displayName: id
            type: string
            required: false
            repeat: false
        time:
            displayName: time
            type: string
            required: false
            repeat: false
    put:
        description: Update the last connected time of the device by database generated identifier. Returns ServiceException (HTTP 503) for unknown or unanticipated issues. Returns NotFoundException (HTTP 404) if the device cannot be found by the identifier provided.
        responses:
            "200":
                description: boolean indicating success of update
            "503":
                description: for unknown or unanticipated issues.
            "404":
                description: if the device cannot be found by the identifier provided.
/device/{id}/lastconnected/{time}/{notify}:
    displayName: Device Resource (set last connected by id)
    description: Example - http://localhost:48081/api/v1/device/57bc6d80555e5218873e5a30/lastconnected/1471966597000/true
    uriParameters:
        id:
            displayName: id
            type: string
            required: false
            repeat: false
        time:
            displayName: time
            type: string
            required: false
            repeat: false
        notify:
            displayName: notify
            type: string
            required: false
            repeat: false
    put:
        description: Update the last connected time of the device by database generated identifier. The notify boolean indicates whether the owning device service should be notified of the change. Returns ServiceException (HTTP 503) for unknown or unanticipated issues. Returns NotFoundException (HTTP 404) if the device cannot be found by the identifier provided.
        responses:
            "200":
                description: boolean indicating success of update
            "503":
                description: for unknown or unanticipated issues.
            "404":
                description: if the device cannot be found by the identifier provided.
/device/{id}:
    displayName: Device Resource (by id)
    description: Example - http://localhost:48081/api/v1/device/57bc6d80555e5218873e5a30
    uriParameters:
        id:
            displayName: id
            type: string
            required: false
            repeat: false
    get:
        description: Fetch a specific device by database generated id. May return null if no device with the id is found. Returns ServiceException (HTTP 503) for unknown or unanticipated issues.  Returns NotFoundException (HTTP 404) if the device cannot be found by the identifier provided.
        responses:
            "200":
                description: device matching on the id
                body:
                    application/json:
                        schema: device
                        example: '{"id":"57bc6d80555e5218873e5a30","created":1471966592240,"modified":1471966592240,"origin":1471806386919,"name":"livingroomthermostat","description":"living room HVAC thermostat","adminState":null,"operatingState":"enabled","addressable":{"id":"57bc6d5d555e5218873e5a2c","created":1471966557670,"modified":1471966557670,"origin":1471806386919,"name":"hvac thermo address","protocol":"HTTP","address":"172.17.0.1","port":48089,"path":"/livingroomthermostat","publisher":"none","user":"none","password":"none","topic":"none"},"lastConnected":0,"lastReported":0,"labels":["home","hvac","thermostat"],"location":"{lat:45.45,long:47.80}","service":{"id":"57bc6d6a555e5218873e5a2d","created":1471966570667,"modified":1471966570667,"origin":1471806386919,"name":"home thermostat device service","description":"manage home thermostats","lastConnected":0,"lastReported":0,"labels":["hvac","thermostat"],"adminState":"unlocked","operatingState":"enabled","addressable":{"id":"57bc6d5d555e5218873e5a2c","created":1471966557670,"modified":1471966557670,"origin":1471806386919,"name":"hvac thermo address","protocol":"HTTP","address":"172.17.0.1","port":48089,"path":"/livingroomthermostat","publisher":"none","user":"none","password":"none","topic":"none"}},"profile":{"id":"57bc6d7b555e5218873e5a2f","created":1471966587727,"modified":1471966587727,"origin":1471806386919,"name":"thermostat profile","manufacturer":"Honeywell","model":"ABC123","labels":["bacnet","thermostat","Honeywell"],"description":"BACnet Honeywell thermostats","objects":{"resources":{"CurrentHumidity":{"get":[{"parameter":"CurrentHumidity","property":"presentValue","operation":"get","object":"AnalogValue_22"}]}}},"commands":[{"id":"57bc6d7b555e5218873e5a2e","created":1471966587724,"modified":1471966587724,"origin":1471806386919,"name":"cooling point","get":{"path":"/cooling","responses":[{"code":"200","description":"ok","expectedValues":["temperature"]}]},"put":{"path":"/cooling","responses":[{"code":"200","description":"ok","expectedValues":["temperature"]}],"parameterNames":["coolingpoint"]}}]}}'
            "404":
                description: if the device cannot be found by the identifier provided.
            "503":
                description: for unknown or unanticipated issues.
/device/label/{label}:
    displayName: Device Resource (by label)
    description: Example - http://localhost:48081/api/v1/device/label/hvac (where hvac is a device label)
    uriParameters:
        label:
            displayName: label
            type: string
            required: false
            repeat: false
    get:
        description: Find all Devices having at least one label matching the label provided. List may be empty if no device match. Returns ServiceException (HTTP 503) for unknown or unanticipated issues.
        responses:
            "200":
                description: List of Device matching on specified label
                body:
                    application/json:
                        schema: device
                        example: '[{"id":"57bc6d80555e5218873e5a30","created":1471966592240,"modified":1471966592240,"origin":1471806386919,"name":"livingroomthermostat","description":"living room HVAC thermostat","adminState":null,"operatingState":"enabled","addressable":{"id":"57bc6d5d555e5218873e5a2c","created":1471966557670,"modified":1471966557670,"origin":1471806386919,"name":"hvac thermo address","protocol":"HTTP","address":"172.17.0.1","port":48089,"path":"/livingroomthermostat","publisher":"none","user":"none","password":"none","topic":"none"},"lastConnected":0,"lastReported":0,"labels":["home","hvac","thermostat"],"location":"{lat:45.45,long:47.80}","service":{"id":"57bc6d6a555e5218873e5a2d","created":1471966570667,"modified":1471966570667,"origin":1471806386919,"name":"home thermostat device service","description":"manage home thermostats","lastConnected":0,"lastReported":0,"labels":["hvac","thermostat"],"adminState":"unlocked","operatingState":"enabled","addressable":{"id":"57bc6d5d555e5218873e5a2c","created":1471966557670,"modified":1471966557670,"origin":1471806386919,"name":"hvac thermo address","protocol":"HTTP","address":"172.17.0.1","port":48089,"path":"/livingroomthermostat","publisher":"none","user":"none","password":"none","topic":"none"}},"profile":{"id":"57bc6d7b555e5218873e5a2f","created":1471966587727,"modified":1471966587727,"origin":1471806386919,"name":"thermostat profile","manufacturer":"Honeywell","model":"ABC123","labels":["bacnet","thermostat","Honeywell"],"description":"BACnet Honeywell thermostats","objects":{"resources":{"CurrentHumidity":{"get":[{"parameter":"CurrentHumidity","property":"presentValue","operation":"get","object":"AnalogValue_22"}]}}},"commands":[{"id":"57bc6d7b555e5218873e5a2e","created":1471966587724,"modified":1471966587724,"origin":1471806386919,"name":"cooling point","get":{"path":"/cooling","responses":[{"code":"200","description":"ok","expectedValues":["temperature"]}]},"put":{"path":"/cooling","responses":[{"code":"200","description":"ok","expectedValues":["temperature"]}],"parameterNames":["coolingpoint"]}}]}}]'
            "503":
                description: for unknown or unanticipated issues.
/device/profile/{profileId}:
    displayName: Device Resource (by profile)
    description: Example - http://localhost:48081/api/v1/device/profile/57bc6d7b555e5218873e5a2f (where the id is a device profile id)
    uriParameters:
        profileId:
            displayName: profileId
            type: string
            required: false
            repeat: false
    get:
        description: Find all devices associated to the DeviceProfile with the specified profile database generated identifier. List may be empty if no device match. Returns ServiceException (HTTP 503) for unknown or unanticipated issues. Returns NotFoundException (HTTP 404) if no DeviceProfile match on the id provided.
        responses:
            "200":
                description: List of Devices associated to the device profile
                body:
                    application/json:
                        schema: device
                        example: '[{"id":"57bc6d80555e5218873e5a30","created":1471966592240,"modified":1471966592240,"origin":1471806386919,"name":"livingroomthermostat","description":"living room HVAC thermostat","adminState":null,"operatingState":"enabled","addressable":{"id":"57bc6d5d555e5218873e5a2c","created":1471966557670,"modified":1471966557670,"origin":1471806386919,"name":"hvac thermo address","protocol":"HTTP","address":"172.17.0.1","port":48089,"path":"/livingroomthermostat","publisher":"none","user":"none","password":"none","topic":"none"},"lastConnected":0,"lastReported":0,"labels":["home","hvac","thermostat"],"location":"{lat:45.45,long:47.80}","service":{"id":"57bc6d6a555e5218873e5a2d","created":1471966570667,"modified":1471966570667,"origin":1471806386919,"name":"home thermostat device service","description":"manage home thermostats","lastConnected":0,"lastReported":0,"labels":["hvac","thermostat"],"adminState":"unlocked","operatingState":"enabled","addressable":{"id":"57bc6d5d555e5218873e5a2c","created":1471966557670,"modified":1471966557670,"origin":1471806386919,"name":"hvac thermo address","protocol":"HTTP","address":"172.17.0.1","port":48089,"path":"/livingroomthermostat","publisher":"none","user":"none","password":"none","topic":"none"}},"profile":{"id":"57bc6d7b555e5218873e5a2f","created":1471966587727,"modified":1471966587727,"origin":1471806386919,"name":"thermostat profile","manufacturer":"Honeywell","model":"ABC123","labels":["bacnet","thermostat","Honeywell"],"description":"BACnet Honeywell thermostats","objects":{"resources":{"CurrentHumidity":{"get":[{"parameter":"CurrentHumidity","property":"presentValue","operation":"get","object":"AnalogValue_22"}]}}},"commands":[{"id":"57bc6d7b555e5218873e5a2e","created":1471966587724,"modified":1471966587724,"origin":1471806386919,"name":"cooling point","get":{"path":"/cooling","responses":[{"code":"200","description":"ok","expectedValues":["temperature"]}]},"put":{"path":"/cooling","responses":[{"code":"200","description":"ok","expectedValues":["temperature"]}],"parameterNames":["coolingpoint"]}}]}}]'
            "503":
                description: for unknown or unanticipated issues.
            "404":
                description: if no device profile match on the id provided.
/device/service/{serviceId}:
    displayName: Device Resource (by service)
    description: Example - http://localhost:48081/api/v1/device/service/57bc6d6a555e5218873e5a2d  (where the id is the associated device service id)
    uriParameters:
        serviceId:
            displayName: serviceId
            type: string
            required: false
            repeat: false
    get:
        description: Find all devices associated to the DeviceService with the specified DeviceService database generated identifier. List may be empty if no device match. Returns ServiceException (HTTP 503) for unknown or unanticipated issues. Returns NotFoundException (HTTP 404) if no DeviceService match on the id provided.
        responses:
            "200":
                description: List of Devices associated to the device service
                body:
                    application/json:
                        schema: device
                        example: '[{"id":"57bc6d80555e5218873e5a30","created":1471966592240,"modified":1471966592240,"origin":1471806386919,"name":"livingroomthermostat","description":"living room HVAC thermostat","adminState":null,"operatingState":"enabled","addressable":{"id":"57bc6d5d555e5218873e5a2c","created":1471966557670,"modified":1471966557670,"origin":1471806386919,"name":"hvac thermo address","protocol":"HTTP","address":"172.17.0.1","port":48089,"path":"/livingroomthermostat","publisher":"none","user":"none","password":"none","topic":"none"},"lastConnected":0,"lastReported":0,"labels":["home","hvac","thermostat"],"location":"{lat:45.45,long:47.80}","service":{"id":"57bc6d6a555e5218873e5a2d","created":1471966570667,"modified":1471966570667,"origin":1471806386919,"name":"home thermostat device service","description":"manage home thermostats","lastConnected":0,"lastReported":0,"labels":["hvac","thermostat"],"adminState":"unlocked","operatingState":"enabled","addressable":{"id":"57bc6d5d555e5218873e5a2c","created":1471966557670,"modified":1471966557670,"origin":1471806386919,"name":"hvac thermo address","protocol":"HTTP","address":"172.17.0.1","port":48089,"path":"/livingroomthermostat","publisher":"none","user":"none","password":"none","topic":"none"}},"profile":{"id":"57bc6d7b555e5218873e5a2f","created":1471966587727,"modified":1471966587727,"origin":1471806386919,"name":"thermostat profile","manufacturer":"Honeywell","model":"ABC123","labels":["bacnet","thermostat","Honeywell"],"description":"BACnet Honeywell thermostats","objects":{"resources":{"CurrentHumidity":{"get":[{"parameter":"CurrentHumidity","property":"presentValue","operation":"get","object":"AnalogValue_22"}]}}},"commands":[{"id":"57bc6d7b555e5218873e5a2e","created":1471966587724,"modified":1471966587724,"origin":1471806386919,"name":"cooling point","get":{"path":"/cooling","responses":[{"code":"200","description":"ok","expectedValues":["temperature"]}]},"put":{"path":"/cooling","responses":[{"code":"200","description":"ok","expectedValues":["temperature"]}],"parameterNames":["coolingpoint"]}}]}}]'
            "503":
                description: for unknown or unanticipated issues.
            "404":
                description: if no device service match on the id provided.
/device/servicename/{servicename}:
    displayName: Device Resource (by service name)
    description: Example - http://localhost:48081/api/v1/device/servicename/home thermostat device service (where home thermostat device service is the name of the device service)
    uriParameters:
        servicename:
            displayName: servicename
            type: string
            required: false
            repeat: false
    get:
        description: Find all devices associated to the DeviceService with the specified service name (DeviceService names must be unique). List may be empty if no device match. Returns ServiceException (HTTP 503) for unknown or unanticipated issues. Returns NotFoundException (HTTP 404) if no DeviceService match on the name provided.
        responses:
            "200":
                description: List of Devices associated to the device service
                body:
                    application/json:
                        schema: device
                        example: '[{"id":"57bc6d80555e5218873e5a30","created":1471966592240,"modified":1471966592240,"origin":1471806386919,"name":"livingroomthermostat","description":"living room HVAC thermostat","adminState":null,"operatingState":"enabled","addressable":{"id":"57bc6d5d555e5218873e5a2c","created":1471966557670,"modified":1471966557670,"origin":1471806386919,"name":"hvac thermo address","protocol":"HTTP","address":"172.17.0.1","port":48089,"path":"/livingroomthermostat","publisher":"none","user":"none","password":"none","topic":"none"},"lastConnected":0,"lastReported":0,"labels":["home","hvac","thermostat"],"location":"{lat:45.45,long:47.80}","service":{"id":"57bc6d6a555e5218873e5a2d","created":1471966570667,"modified":1471966570667,"origin":1471806386919,"name":"home thermostat device service","description":"manage home thermostats","lastConnected":0,"lastReported":0,"labels":["hvac","thermostat"],"adminState":"unlocked","operatingState":"enabled","addressable":{"id":"57bc6d5d555e5218873e5a2c","created":1471966557670,"modified":1471966557670,"origin":1471806386919,"name":"hvac thermo address","protocol":"HTTP","address":"172.17.0.1","port":48089,"path":"/livingroomthermostat","publisher":"none","user":"none","password":"none","topic":"none"}},"profile":{"id":"57bc6d7b555e5218873e5a2f","created":1471966587727,"modified":1471966587727,"origin":1471806386919,"name":"thermostat profile","manufacturer":"Honeywell","model":"ABC123","labels":["bacnet","thermostat","Honeywell"],"description":"BACnet Honeywell thermostats","objects":{"resources":{"CurrentHumidity":{"get":[{"parameter":"CurrentHumidity","property":"presentValue","operation":"get","object":"AnalogValue_22"}]}}},"commands":[{"id":"57bc6d7b555e5218873e5a2e","created":1471966587724,"modified":1471966587724,"origin":1471806386919,"name":"cooling point","get":{"path":"/cooling","responses":[{"code":"200","description":"ok","expectedValues":["temperature"]}]},"put":{"path":"/cooling","responses":[{"code":"200","description":"ok","expectedValues":["temperature"]}],"parameterNames":["coolingpoint"]}}]}}]'
            "503":
                description: for unknown or unanticipated issues.
            "404":
                description: if no device service match on the name provided.
/device/addressablename/{addressablename}:
    displayName: Device Resource (by addressable name)
    description: Example - http://localhost:48081/api/v1/device/addressablename/hvac thermo address  (where hvac thermo address is the name of the addressable)
    uriParameters:
        addressablename:
            displayName: addressablename
            type: string
            required: false
            repeat: false
    get:
        description: Find all devices associated to the Addressable with the specified addressable name. List may be empty if no device match. Returns ServiceException (HTTP 503) for unknown or unanticipated issues. Returns NotFoundException (HTTP 404) if no Addressable match on the name provided.
        responses:
            "200":
                description: List of Devices associated to the addressable
                body:
                    application/json:
                        schema: device
                        example: '[{"id":"57bc6d80555e5218873e5a30","created":1471966592240,"modified":1471966592240,"origin":1471806386919,"name":"livingroomthermostat","description":"living room HVAC thermostat","adminState":null,"operatingState":"enabled","addressable":{"id":"57bc6d5d555e5218873e5a2c","created":1471966557670,"modified":1471966557670,"origin":1471806386919,"name":"hvac thermo address","protocol":"HTTP","address":"172.17.0.1","port":48089,"path":"/livingroomthermostat","publisher":"none","user":"none","password":"none","topic":"none"},"lastConnected":0,"lastReported":0,"labels":["home","hvac","thermostat"],"location":"{lat:45.45,long:47.80}","service":{"id":"57bc6d6a555e5218873e5a2d","created":1471966570667,"modified":1471966570667,"origin":1471806386919,"name":"home thermostat device service","description":"manage home thermostats","lastConnected":0,"lastReported":0,"labels":["hvac","thermostat"],"adminState":"unlocked","operatingState":"enabled","addressable":{"id":"57bc6d5d555e5218873e5a2c","created":1471966557670,"modified":1471966557670,"origin":1471806386919,"name":"hvac thermo address","protocol":"HTTP","address":"172.17.0.1","port":48089,"path":"/livingroomthermostat","publisher":"none","user":"none","password":"none","topic":"none"}},"profile":{"id":"57bc6d7b555e5218873e5a2f","created":1471966587727,"modified":1471966587727,"origin":1471806386919,"name":"thermostat profile","manufacturer":"Honeywell","model":"ABC123","labels":["bacnet","thermostat","Honeywell"],"description":"BACnet Honeywell thermostats","objects":{"resources":{"CurrentHumidity":{"get":[{"parameter":"CurrentHumidity","property":"presentValue","operation":"get","object":"AnalogValue_22"}]}}},"commands":[{"id":"57bc6d7b555e5218873e5a2e","created":1471966587724,"modified":1471966587724,"origin":1471806386919,"name":"cooling point","get":{"path":"/cooling","responses":[{"code":"200","description":"ok","expectedValues":["temperature"]}]},"put":{"path":"/cooling","responses":[{"code":"200","description":"ok","expectedValues":["temperature"]}],"parameterNames":["coolingpoint"]}}]}}]'
            "503":
                description: for unknown or unanticipated issues.
            "404":
                description: if no Addressable match on the name provided.
/device/profilename/{profilename}:
    displayName: Device Resource (by profile name)
    description: Example - http://localhost:48081/api/v1/device/profilename/thermostat profile (where 'thermostat profile' is the name of a device profile)
    uriParameters:
        profilename:
            displayName: profilename
            type: string
            required: false
            repeat: false
    get:
        description: Find all devices associated to the DeviceProfile with the specified profile name. List may be empty if no device match. Returns ServiceException (HTTP 503) for unknown or unanticipated issues. Returns NotFoundException (HTTP 404) if no DeviceProfile match on the name provided.
        responses:
            "200":
                description: List of Devices associated to the profile
                body:
                    application/json:
                        schema: device
                        example: '[{"id":"57bc6d80555e5218873e5a30","created":1471966592240,"modified":1471966592240,"origin":1471806386919,"name":"livingroomthermostat","description":"living room HVAC thermostat","adminState":null,"operatingState":"enabled","addressable":{"id":"57bc6d5d555e5218873e5a2c","created":1471966557670,"modified":1471966557670,"origin":1471806386919,"name":"hvac thermo address","protocol":"HTTP","address":"172.17.0.1","port":48089,"path":"/livingroomthermostat","publisher":"none","user":"none","password":"none","topic":"none"},"lastConnected":0,"lastReported":0,"labels":["home","hvac","thermostat"],"location":"{lat:45.45,long:47.80}","service":{"id":"57bc6d6a555e5218873e5a2d","created":1471966570667,"modified":1471966570667,"origin":1471806386919,"name":"home thermostat device service","description":"manage home thermostats","lastConnected":0,"lastReported":0,"labels":["hvac","thermostat"],"adminState":"unlocked","operatingState":"enabled","addressable":{"id":"57bc6d5d555e5218873e5a2c","created":1471966557670,"modified":1471966557670,"origin":1471806386919,"name":"hvac thermo address","protocol":"HTTP","address":"172.17.0.1","port":48089,"path":"/livingroomthermostat","publisher":"none","user":"none","password":"none","topic":"none"}},"profile":{"id":"57bc6d7b555e5218873e5a2f","created":1471966587727,"modified":1471966587727,"origin":1471806386919,"name":"thermostat profile","manufacturer":"Honeywell","model":"ABC123","labels":["bacnet","thermostat","Honeywell"],"description":"BACnet Honeywell thermostats","objects":{"resources":{"CurrentHumidity":{"get":[{"parameter":"CurrentHumidity","property":"presentValue","operation":"get","object":"AnalogValue_22"}]}}},"commands":[{"id":"57bc6d7b555e5218873e5a2e","created":1471966587724,"modified":1471966587724,"origin":1471806386919,"name":"cooling point","get":{"path":"/cooling","responses":[{"code":"200","description":"ok","expectedValues":["temperature"]}]},"put":{"path":"/cooling","responses":[{"code":"200","description":"ok","expectedValues":["temperature"]}],"parameterNames":["coolingpoint"]}}]}}]'
            "503":
                description: for unknown or unanticipated issues.
            "404":
                description: if no DeviceProfile match on the id provided.
/device/addressable/{addressableId}:
    displayName: Device Resource (by addressable)
    description: Example - http://localhost:48081/api/v1/device/addressable/57bc6d5d555e5218873e5a2c
    uriParameters:
        addressableId:
            displayName: addressableId
            type: string
            required: false
            repeat: false
    get:
        description: Find all devices associated to the Addressable with the specified addressable database generated identifier. List may be empty if no device match. Returns ServiceException (HTTP 503) for unknown or unanticipated issues. Returns NotFoundException (HTTP 404) if no Addressable match on the id provided.
        responses:
            "200":
                description: List of Devices associated to the addressable
                body:
                    application/json:
                        schema: device
                        example: '[{"id":"57bc6d80555e5218873e5a30","created":1471966592240,"modified":1471966592240,"origin":1471806386919,"name":"livingroomthermostat","description":"living room HVAC thermostat","adminState":null,"operatingState":"enabled","addressable":{"id":"57bc6d5d555e5218873e5a2c","created":1471966557670,"modified":1471966557670,"origin":1471806386919,"name":"hvac thermo address","protocol":"HTTP","address":"172.17.0.1","port":48089,"path":"/livingroomthermostat","publisher":"none","user":"none","password":"none","topic":"none"},"lastConnected":0,"lastReported":0,"labels":["home","hvac","thermostat"],"location":"{lat:45.45,long:47.80}","service":{"id":"57bc6d6a555e5218873e5a2d","created":1471966570667,"modified":1471966570667,"origin":1471806386919,"name":"home thermostat device service","description":"manage home thermostats","lastConnected":0,"lastReported":0,"labels":["hvac","thermostat"],"adminState":"unlocked","operatingState":"enabled","addressable":{"id":"57bc6d5d555e5218873e5a2c","created":1471966557670,"modified":1471966557670,"origin":1471806386919,"name":"hvac thermo address","protocol":"HTTP","address":"172.17.0.1","port":48089,"path":"/livingroomthermostat","publisher":"none","user":"none","password":"none","topic":"none"}},"profile":{"id":"57bc6d7b555e5218873e5a2f","created":1471966587727,"modified":1471966587727,"origin":1471806386919,"name":"thermostat profile","manufacturer":"Honeywell","model":"ABC123","labels":["bacnet","thermostat","Honeywell"],"description":"BACnet Honeywell thermostats","objects":{"resources":{"CurrentHumidity":{"get":[{"parameter":"CurrentHumidity","property":"presentValue","operation":"get","object":"AnalogValue_22"}]}}},"commands":[{"id":"57bc6d7b555e5218873e5a2e","created":1471966587724,"modified":1471966587724,"origin":1471806386919,"name":"cooling point","get":{"path":"/cooling","responses":[{"code":"200","description":"ok","expectedValues":["temperature"]}]},"put":{"path":"/cooling","responses":[{"code":"200","description":"ok","expectedValues":["temperature"]}],"parameterNames":["coolingpoint"]}}]}}]'
            "503":
                description: for unknown or unanticipated issues.
            "404":
                description: if no Addressable match on the id provided.
/device:
    displayName: Device Resource
    description: Example - http://localhost:48081/api/v1/device
    post:
        description: Add a new Device - name must be unique. Embedded objects (device, service, profile, addressable) are all referenced in the new Device object by id or name to associated objects. All other data in the embedded objects will be ignored. Returns ServiceException (HTTP 503) for unknown or unanticipated issues. Returns DataValidationException (HTTP 409) if an associated object (Addressable, Profile, Service) cannot be found with the id or name provided.
        body:
            application/json:
                schema: device
                example: '{"origin":1471806386919,"name":"livingroomthermostat","description":"living room HVAC thermostat","adminState":"unlocked","operatingState":"enabled","addressable":{"name":"hvac thermo address"},"labels":["home","hvac","thermostat"],"location":"{lat:45.45,long:47.80}","service":{"name":"home thermostat device service"},"profile":{"name":"thermostat profile"}}'
        responses:
            "200":
                description: database generated identifier for the new device
            "503":
                description: for unknown or unanticipated issues.
            "409":
                description: if an associated object (Addressable, Profile, Service) cannot be found with the id or name provided or if the name is determined to not be unique with regard to others.
    put:
        description: Update the Device identified by the id or name stored in the object provided. Id is used first, name is used second for identification purposes. New device services & profiles cannot be created with a PUT, but the service and profile can replaced by referring to a new device service or profile id or name. Returns ServiceException (HTTP 503) for unknown or unanticipated issues. Returns NotFoundException (HTTP 404) if the device cannot be found by the identifier provided.
        body:
            application/json:
                schema: device
                example:  '{"id":"57bc6d80555e5218873e5a30", "description":"living room thermostat","adminState":"locked"}'
        responses:
            "200":
                description: boolean indicating success of the update
            "503":
                description: for unknown or unanticipated issues.
            "404":
                description: if the device cannot be found by the identifier provided.
    get:
        description: Return all devices sorted by id. Returns ServiceException (HTTP 503) for unknown or unanticipated issues. Returns LimitExceededException (HTTP 413) if the number returned exceeds the max limit.
        responses:
            "200":
                description: list of device
                body:
                    application/json:
                        schema: device
                        example: '[{"id":"57bc6d80555e5218873e5a30","created":1471966592240,"modified":1471966592240,"origin":1471806386919,"name":"livingroomthermostat","description":"living room HVAC thermostat","adminState":null,"operatingState":"enabled","addressable":{"id":"57bc6d5d555e5218873e5a2c","created":1471966557670,"modified":1471966557670,"origin":1471806386919,"name":"hvac thermo address","protocol":"HTTP","address":"172.17.0.1","port":48089,"path":"/livingroomthermostat","publisher":"none","user":"none","password":"none","topic":"none"},"lastConnected":0,"lastReported":0,"labels":["home","hvac","thermostat"],"location":"{lat:45.45,long:47.80}","service":{"id":"57bc6d6a555e5218873e5a2d","created":1471966570667,"modified":1471966570667,"origin":1471806386919,"name":"home thermostat device service","description":"manage home thermostats","lastConnected":0,"lastReported":0,"labels":["hvac","thermostat"],"adminState":"unlocked","operatingState":"enabled","addressable":{"id":"57bc6d5d555e5218873e5a2c","created":1471966557670,"modified":1471966557670,"origin":1471806386919,"name":"hvac thermo address","protocol":"HTTP","address":"172.17.0.1","port":48089,"path":"/livingroomthermostat","publisher":"none","user":"none","password":"none","topic":"none"}},"profile":{"id":"57bc6d7b555e5218873e5a2f","created":1471966587727,"modified":1471966587727,"origin":1471806386919,"name":"thermostat profile","manufacturer":"Honeywell","model":"ABC123","labels":["bacnet","thermostat","Honeywell"],"description":"BACnet Honeywell thermostats","objects":{"resources":{"CurrentHumidity":{"get":[{"parameter":"CurrentHumidity","property":"presentValue","operation":"get","object":"AnalogValue_22"}]}}},"commands":[{"id":"57bc6d7b555e5218873e5a2e","created":1471966587724,"modified":1471966587724,"origin":1471806386919,"name":"cooling point","get":{"path":"/cooling","responses":[{"code":"200","description":"ok","expectedValues":["temperature"]}]},"put":{"path":"/cooling","responses":[{"code":"200","description":"ok","expectedValues":["temperature"]}],"parameterNames":["coolingpoint"]}}]}}]'
            "503":
                description: for unknown or unanticipated issues
            "413":
                description: if the number returned exceeds the max limit
/deviceprofile/id/{id}:
    displayName: DeviceProfile Resource (by id)
    description: Example - http://localhost:48081/api/v1/deviceprofile/id/57bb718f555e5218873e5a27
    uriParameters:
        id:
            displayName: id
            type: string
            required: false
            repeat: false
    delete:
        description: Remove the DeviceProfile designated by database generated id. This does not remove associated commands. Returns ServiceException (HTTP 503) for unknown or unanticipated issues. Returns NotFoundException (HTTP 404) if the device profile cannot be found by the identifier provided. Returns DataValidationException (HTTP 413) if devices still reference the profile.
        responses:
            "200":
                description: boolean indicating success of the remove operation
            "503":
                description: for unknown or unanticipated issues
/deviceprofile/manufacturer/{manufacturer}/model/{model}:
    displayName: DeviceProfile Resource (by manufacturer or model)
    description: Example - http://localhost:48081/api/v1/deviceprofile/manufacturer/Honeywell/model/ABC123 (where Honeywell is the manufacturer associated to profiles and ABC123 is the model associated to profiles)
    uriParameters:
        model:
            displayName: model
            type: string
            required: false
            repeat: false
        manufacturer:
            displayName: manufacturer
            type: string
            required: false
            repeat: false
    get:
        description: Find all DeviceProfiles with a manufacture or model attribute matching that provided (either matching provides a hit). List may be empty if no profiles match. Returns ServiceException (HTTP 503) for unknown or unanticipated issues.
        responses:
            "200":
                description: List of DeviceProfile matching on specified manufacturer and/or model.
                body:
                    application/json:
                        schema: devicereport
                        example: '[{"id":"57bb718f555e5218873e5a27","created":1471902095821,"modified":1471902095821,"origin":1471806386919,"name":"thermostat profile","manufacturer":"Honeywell","model":"ABC123","labels":["bacnet","thermostat","Honeywell"],"description":"BACnet Honeywell thermostats","objects":{"resources":{"CurrentHumidity":{"get":[{"parameter":"CurrentHumidity","property":"presentValue","operation":"get","object":"AnalogValue_22"}]}}},"commands":[{"id":"57bb718f555e5218873e5a26","created":1471902095810,"modified":1471902095810,"origin":1471806386919,"name":"cooling point","get":{"path":"/cooling","responses":[{"code":"200","description":"ok","expectedValues":["temperature"]}]},"put":{"path":"/cooling","responses":[{"code":"200","description":"ok","expectedValues":["temperature"]}],"parameterNames":["coolingpoint"]}}]}]'
            "503":
                description: for unknown or unanticipated issues
/deviceprofile/manufacturer/{manufacturer}:
    displayName: DeviceProfile Resource (by manufacturer)
    description: Example - http://localhost:48081/api/v1/deviceprofile/manufacturer/Honeywell (where Honeywell is the manufacturer associated to profiles)
    uriParameters:
        manufacturer:
            displayName: manufacturer
            type: string
            required: false
            repeat: false
    get:
        description: Find all DeviceProfiles with a manufacture attribute matching that provided. List may be empty if no profiles match. Returns ServiceException (HTTP 503) for unknown or unanticipated issues.
        responses:
            "200":
                description: List of DeviceProfile matching on specified manufacturer.
                body:
                    application/json:
                        schema: deviceprofile
                        example: '[{"id":"57bb718f555e5218873e5a27","created":1471902095821,"modified":1471902095821,"origin":1471806386919,"name":"thermostat profile","manufacturer":"Honeywell","model":"ABC123","labels":["bacnet","thermostat","Honeywell"],"description":"BACnet Honeywell thermostats","objects":{"resources":{"CurrentHumidity":{"get":[{"parameter":"CurrentHumidity","property":"presentValue","operation":"get","object":"AnalogValue_22"}]}}},"commands":[{"id":"57bb718f555e5218873e5a26","created":1471902095810,"modified":1471902095810,"origin":1471806386919,"name":"cooling point","get":{"path":"/cooling","responses":[{"code":"200","description":"ok","expectedValues":["temperature"]}]},"put":{"path":"/cooling","responses":[{"code":"200","description":"ok","expectedValues":["temperature"]}],"parameterNames":["coolingpoint"]}}]}]'
            "503":
                description: for unknown or unanticipated issues
/deviceprofile/name/{name}:
    displayName: DeviceProfile Resource (by name)
    description: Example - http://localhost:48081/api/v1/deviceprofile/name/thermostat profile (where thermostat profile is the name of a profile)
    uriParameters:
        name:
            displayName: name
            type: string
            required: false
            repeat: false
    delete:
        description: Remove the DeviceProfile designated by unique name. This does not remove associated commands. Returns ServiceException (HTTP 503) for unknown or unanticipated issues. Returns NotFoundException (HTTP 404) if the device profile cannot be found by the name provided. Returns DataValidationException (HTTP 409) if devices still reference the profile.
        responses:
            "200":
                description: boolean indicating success of the remove operation
            "503":
                description: for unknown or unanticipated issues
            "404":
                description: if the device profile cannot be found by the name provided
            "409":
                description: if devices still reference the profile
    get:
        description: Return the DeviceProfile matching given name (profile names should be unique). May be null if no profiles matches on the name provided. Returns ServiceException (HTTP 503) for unknown or unanticipated issues. Returns NotFoundException (HTTP 404) if the device profile cannot be found by the name provided.
        responses:
            "200":
                description: device profile matching on name
                body:
                    application/json:
                        schema: deviceprofile
                        example: '{"id":"57bb718f555e5218873e5a27","created":1471902095821,"modified":1471902095821,"origin":1471806386919,"name":"thermostat profile","manufacturer":"Honeywell","model":"ABC123","labels":["bacnet","thermostat","Honeywell"],"description":"BACnet Honeywell thermostats","objects":{"resources":{"CurrentHumidity":{"get":[{"parameter":"CurrentHumidity","property":"presentValue","operation":"get","object":"AnalogValue_22"}]}}},"commands":[{"id":"57bb718f555e5218873e5a26","created":1471902095810,"modified":1471902095810,"origin":1471806386919,"name":"cooling point","get":{"path":"/cooling","responses":[{"code":"200","description":"ok","expectedValues":["temperature"]}]},"put":{"path":"/cooling","responses":[{"code":"200","description":"ok","expectedValues":["temperature"]}],"parameterNames":["coolingpoint"]}}]}'
            "404":
                description: if the device profile cannot be found by the name provided
            "503":
                description: for unknown or unanticipated issues
/deviceprofile/uploadfile:
    displayName: DeviceProfile Resource (upload YAML file)
    description: Example - http://localhost:48081/api/v1/deviceprofile/uploadfile
    post:
        description: Add a new DeviceProfile (and associated Command objects) via YAML profile file - name must be unique. Returns ServiceException (HTTP 503) for unknown or unanticipated issues. Returns DataValidationException (HTTP 409) if an associated command's name is a duplicate for the profile. Returns ClientException (HTTP 400) if the YAML file is empty.
        responses:
            "200":
                description: database generated identifier for the new device profile
            "503":
                description: for unknown or unanticipated issues
            "409":
                description:  if an associated command's name is a duplicate for the profile or if the name is determined to not be unique with regard to others
            "400":
                description:  if the YAML file is empty
/deviceprofile/{id}:
    displayName: DeviceProfile Resource (by id)
    description: Example - http://localhost:48081/api/v1/deviceprofile/57bb718f555e5218873e5a27
    uriParameters:
        id:
            displayName: id
            type: string
            required: false
            repeat: false
    get:
        description: Fetch a specific profile by database generated id. May return null if no profile with the id is found. Returns ServiceException (HTTP 503) for unknown or unanticipated issues.  Returns NotFoundException (HTTP 404) if the device profile cannot be found by the id provided.
        responses:
            "200":
                description: device profile matching on id
                body:
                    application/json:
                        schema: deviceprofile
                        example: '{"id":"57bb718f555e5218873e5a27","created":1471902095821,"modified":1471902095821,"origin":1471806386919,"name":"thermostat profile","manufacturer":"Honeywell","model":"ABC123","labels":["bacnet","thermostat","Honeywell"],"description":"BACnet Honeywell thermostats","objects":{"resources":{"CurrentHumidity":{"get":[{"parameter":"CurrentHumidity","property":"presentValue","operation":"get","object":"AnalogValue_22"}]}}},"commands":[{"id":"57bb718f555e5218873e5a26","created":1471902095810,"modified":1471902095810,"origin":1471806386919,"name":"cooling point","get":{"path":"/cooling","responses":[{"code":"200","description":"ok","expectedValues":["temperature"]}]},"put":{"path":"/cooling","responses":[{"code":"200","description":"ok","expectedValues":["temperature"]}],"parameterNames":["coolingpoint"]}}]}'
            "404":
                description: if the device profile cannot be found by the id provided
            "503":
                description: for unknown or unanticipated issues
/deviceprofile/upload:
    displayName: DeviceProfile Resource (upload YAML)
    description: Example - http://localhost:48081/api/v1/deviceprofile/upload
    post:
        description: Add a new DeviceProfile (and associated Command objects) via YAML content - name must be unique. Returns ServiceException (HTTP 503) for unknown or unanticipated issues. Returns DataValidationException (HTTP 409) if an associated command's name is a duplicate for the profile.
        responses:
            "200":
                description: database generated identifier for the new device profile
            "503":
                description: for unknown or unanticipated issues
            "409":
                description:  if an associated command's name is a duplicate for the profile or if the name is determined to not be unique with regard to others
/deviceprofile/yaml/name/{name}:
    displayName: DeviceProfile Resource (by name)
    description: Example - http://localhost:48081/api/v1/deviceprofile/yaml/name/thermostat profile (where thermostat profile is the name of a profile)
    uriParameters:
        name:
            displayName: name
            type: string
            required: false
            repeat: false
    get:
        description: Return, in yaml form, the DeviceProfiles matching given name (profile names should be unique). May be null if no profiles matches on the name provided. Returns ServiceException (HTTP 503) for unknown or unanticipated issues.  Returns NotFoundException (HTTP 404) if the device profile cannot be found by the name provided.
        responses:
            "200":
                description: device profile in YAML matching on name
                body:
                    application/json:
                        schema: deviceprofile
            "404":
                description: if the device profile cannot be found by the name provided
            "503":
                description: for unknown or unanticipated issues
/deviceprofile/yaml/{id}:
    displayName: DeviceProfile Resource (by id)
    description: Example - http://localhost:48081/api/v1/deviceprofile/yaml/57bb718f555e5218873e5a27
    uriParameters:
        id:
            displayName: id
            type: string
            required: false
            repeat: false
    get:
        description: Fetch the profile identified by database generated id and return as a YAML string. Returns ServiceException (HTTP 503) for unknown or unanticipated issues.  eturns NotFoundException (HTTP 404) if the device profile cannot be found by the name provided.
        responses:
            "200":
                description: device profile in YAML format
                body:
                    application/json:
                        schema: deviceprofile
            "404":
               description: if the device profile cannot be found by the id provided
            "503":
                description: for unknown or unanticipated issues
/deviceprofile/model/{model}:
    displayName: DeviceProfile Resource (by model)
    description: Example - http://localhost:48081/api/v1/deviceprofile/model/ABC123 (where ABC123 is a model associated to a profile)
    uriParameters:
        model:
            displayName: model
            type: string
            required: false
            repeat: false
    get:
        description: Find all DeviceProfiles with a model attribute matching that provided. List may be empty if no profiles match. Returns ServiceException (HTTP 503) for unknown or unanticipated issues.
        responses:
            "200":
                description: List of DeviceProfile matching on specified model.
                body:
                    application/json:
                        schema: deviceprofile
                        example: '[{"id":"57bb718f555e5218873e5a27","created":1471902095821,"modified":1471902095821,"origin":1471806386919,"name":"thermostat profile","manufacturer":"Honeywell","model":"ABC123","labels":["bacnet","thermostat","Honeywell"],"description":"BACnet Honeywell thermostats","objects":{"resources":{"CurrentHumidity":{"get":[{"parameter":"CurrentHumidity","property":"presentValue","operation":"get","object":"AnalogValue_22"}]}}},"commands":[{"id":"57bb718f555e5218873e5a26","created":1471902095810,"modified":1471902095810,"origin":1471806386919,"name":"cooling point","get":{"path":"/cooling","responses":[{"code":"200","description":"ok","expectedValues":["temperature"]}]},"put":{"path":"/cooling","responses":[{"code":"200","description":"ok","expectedValues":["temperature"]}],"parameterNames":["coolingpoint"]}}]}]'
            "503":
                description: for unknown or unanticipated issues
/deviceprofile/label/{label}:
    displayName: DeviceProfile Resource (by label)
    description: Example - http://localhost:48081/api/v1/deviceprofile/label/bacnet (where bacnet is a label associated to profiles)
    uriParameters:
        label:
            displayName: label
            type: string
            required: false
            repeat: false
    get:
        description: Find all DeviceProfiles having at least one label matching the label provided. List may be empty if no profiles match. Returns ServiceException (HTTP 503) for unknown or unanticipated issues.
        responses:
            "200":
                description: List of DeviceProfile matching on specified label
                body:
                    application/json:
                        schema: deviceprofile
                        example: '[{"id":"57bb718f555e5218873e5a27","created":1471902095821,"modified":1471902095821,"origin":1471806386919,"name":"thermostat profile","manufacturer":"Honeywell","model":"ABC123","labels":["bacnet","thermostat","Honeywell"],"description":"BACnet Honeywell thermostats","objects":{"resources":{"CurrentHumidity":{"get":[{"parameter":"CurrentHumidity","property":"presentValue","operation":"get","object":"AnalogValue_22"}]}}},"commands":[{"id":"57bb718f555e5218873e5a26","created":1471902095810,"modified":1471902095810,"origin":1471806386919,"name":"cooling point","get":{"path":"/cooling","responses":[{"code":"200","description":"ok","expectedValues":["temperature"]}]},"put":{"path":"/cooling","responses":[{"code":"200","description":"ok","expectedValues":["temperature"]}],"parameterNames":["coolingpoint"]}}]}]'
            "503":
                description: for unknown or unanticipated issues
/deviceprofile:
    displayName: DeviceProfile Resource
    description: Example - http://localhost:48081/api/v1/deviceprofile
    post:
        description: Add a new DeviceProfile (and associated Command objects) - name must be unique. Returns ServiceException (HTTP 503) for unknown or unanticipated issues. Returns DataValidationException (HTTP 409) if an associated command's name is a duplicate for the profile.
        body:
            application/json:
                schema: deviceprofile
                example: '{"origin":1471806386919,"name":"thermostat profile","description":"BACnet Honeywell thermostats","manufacturer":"Honeywell","model":"ABC123", "labels":["bacnet","thermostat","Honeywell"],"commands":[{"origin":1471806386919,"name":"cooling point","get":{"path":"/cooling","responses":[{"code":"200","description":"ok","expectedValues":["temperature"]}]},"put":{"path":"/cooling", "responses":[{"code":"200","description":"ok","expectedValues":["temperature"]}], "parameterNames":["coolingpoint"]}}],"objects":{"resources":{"CurrentHumidity":{"get":[{"parameter":"CurrentHumidity","property":"presentValue","operation":"get","object":"AnalogValue_22"}]}}}}'
        responses:
            "200":
                description: database generated identifier for the new device profile
            "503":
                description: for unknown or unanticipated issues
            "409":
                description: if an associated command's name is a duplicate for the profile or if the name is determined to not be unique with regard to others.
    put:
        description: Update the DeviceProfile identified by the id or name stored in the object provided. Id is used first, name is used second for identification purposes. Associated commands must be updated directly. Returns ServiceException (HTTP 503) for unknown or unanticipated issues. Returns NotFoundException (HTTP 404) if the profile cannot be found by the identifier provided.
        body:
            application/json:
                schema: deviceprofile
                example: '{"id":"57bb718f555e5218873e5a27","description":"HTTP Honeywell thermostats"}'
        responses:
            "200":
                description: boolean indicating success of the update
            "503":
                description: for unknown or unanticipated issues
            "404":
                description: if the profile cannot be found by the identifier provided
    get:
        description: Return all profiles sorted by id. Returns ServiceException (HTTP 503) for unknown or unanticipated issues. Returns LimitExceededException (HTTP 413) if the number returned exceeds the max limit.
        responses:
            "200":
                description: list of profiles
                body:
                    application/json:
                        schema: deviceprofile
                        example: '[{"id":"57bb718f555e5218873e5a27","created":1471902095821,"modified":1471902095821,"origin":1471806386919,"name":"thermostat profile","manufacturer":"Honeywell","model":"ABC123","labels":["bacnet","thermostat","Honeywell"],"description":"BACnet Honeywell thermostats","objects":{"resources":{"CurrentHumidity":{"get":[{"parameter":"CurrentHumidity","property":"presentValue","operation":"get","object":"AnalogValue_22"}]}}},"commands":[{"id":"57bb718f555e5218873e5a26","created":1471902095810,"modified":1471902095810,"origin":1471806386919,"name":"cooling point","get":{"path":"/cooling","responses":[{"code":"200","description":"ok","expectedValues":["temperature"]}]},"put":{"path":"/cooling","responses":[{"code":"200","description":"ok","expectedValues":["temperature"]}],"parameterNames":["coolingpoint"]}}]}]'
            "503":
                description: for unknown or unanticipated issues
            "413":
                description: if the number returned exceeds the max limit
/devicereport/id/{id}:
    displayName: DeviceReport Resource (by id)
    description: Example - http://localhost:48081/api/v1/devicereport/id/57bb6491555e5218873e5a35
    uriParameters:
        id:
            displayName: id
            type: string
            required: false
            repeat: false
    delete:
        description: Remove the DevicReport designated by database generated id. ServiceException (HTTP 503) for unknown or unanticipated issues. NotFoundException (HTTP 404) if no DeviceReport is found with the provided id.
        responses:
            "200":
                description: boolean indicating success of the remove operation
            "503":
                description: for unknown or unanticipated issues
            "404":
                description: if no DeviceReport is found with the provided id
/devicereport/name/{name}:
    displayName: DeviceReport Resource (by name)
    description: Example - http://localhost:48081/api/v1/devicereport/name/livingroom collection report (where livingroom collection report is the name of a device report)
    uriParameters:
        name:
            displayName: name
            type: string
            required: false
            repeat: false
    delete:
        description: Remove the DevicReport designated by name. ServiceException (HTTP 503) for unknown or unanticipated issues. NotFoundException (HTTP 404) if no DeviceReport is found with the provided name.
        responses:
            "200":
                description: boolean indicating success of the remove operation
            "503":
                description: for unknown or unanticipated issues
            "404":
                description: if no DeviceReport is found with the provided name
    get:
        description: Return DeviceReport matching given name (device report names should be unique). May be null if no report matches on the name provided. Returns ServiceException (HTTP 503) for unknown or unanticipated issues.  NotFoundException (HTTP 404) if no DeviceReport is found with the provided name.
        responses:
            "200":
                description: device report matching on name
                body:
                    application/json:
                        schema: devicereport
                        example: '{"id":"57bc88d8555e5218873e5a34","created":1471973592027,"modified":1471973592027,"origin":1471806386919,"name":"livingroom collection report","device":"livingroomthermostat","event":"temperature collection","expected":["temperature"]}'
            "404":
                description: if no DeviceReport is found with the provided name
            "503":
                description: for unknown or unanticipated issues
/devicereport/{id}:
    displayName: DeviceReport Resource (by id)
    description: Example - http://localhost:48081/api/v1/devicereport/57bb6491555e5218873e5a35
    uriParameters:
        id:
            displayName: id
            type: string
            required: false
            repeat: false
    get:
        description: Fetch a specific DeviceReport by database generated id. May return null if no report with the id is found. Returns ServiceException (HTTP 503) for unknown or unanticipated issues.  NotFoundException (HTTP 404) if no DeviceReport is found with the provided id.
        responses:
            "200":
                description: device report matching on the id
                body:
                    application/json:
                        schema: devicereport
                        example: '{"id":"57bc88d8555e5218873e5a34","created":1471973592027,"modified":1471973592027,"origin":1471806386919,"name":"livingroom collection report","device":"livingroomthermostat","event":"temperature collection","expected":["temperature"]}'
            "404":
                description: if no DeviceReport is found with the provided id
            "503":
                description: for unknown or unanticipated issues
/devicereport/devicename/{devicename}:
    displayName: DeviceReport Resources (by device name)
    description: Example - http://localhost:48081/api/v1/devicereport/devicename/livingroomthermostat  (where livingroomthermostat is the name of a device )
    uriParameters:
        devicename:
            displayName: devicename
            type: string
            required: false
            repeat: false
    get:
        description: Return DeviceReports with associated device matching given name (device names should be unique). May be an empty list if no device matches on the name provided. Returns ServiceException (HTTP 503) for unknown or unanticipated issues.
        responses:
            "200":
                description: device reports matching on device name
                body:
                    application/json:
                        schema: devicereport
                        example: '[{"id":"57bc88d8555e5218873e5a34","created":1471973592027,"modified":1471973592027,"origin":1471806386919,"name":"livingroom collection report","device":"livingroomthermostat","event":"temperature collection","expected":["temperature"]}]'
            "503":
                description: for unknown or unanticipated issues
/devicereport/valueDescriptorsFor/{devicename}:
    displayName: Value Descriptor names (associated to device reports for given device name)
    description: Example - http://localhost:48081/api/v1/devicereport/valueDescriptorsFor/livingroomthermostat  (where livingroomthermostat is the name of a device )
    uriParameters:
        devicename:
            displayName: devicename
            type: string
            required: false
            repeat: false
    get:
        description: Return list of value descriptor names associated to device reports associated to name of the device provided. May be an empty list if no device matches on the name provided. Returns ServiceException (HTTP 503) for unknown or unanticipated issues.
        responses:
            "200":
                description: value descriptor names
                body:
                    application/json:
                        example: '["temperature", "rpm"]'
            "503":
                description: for unknown or unanticipated issues
/devicereport:
    displayName: DeviceReport Resource
    description: Example - http://localhost:48081/api/v1/devicereport
    post:
        description: Add a new DeviceReport - name must be unique. Referenced objects (device, schedule event) are all referenced in the new DeviceReport by name and must already be persisted. Returns ServiceException (HTTP 503) for unknown or unanticipated issues. NotFoundException (HTTP 404) if any referenced object cannot be found by its provided name.
        body:
            application/json:
                schema: devicereport
                example: '{"origin":1471806386919,"name":"livingroom collection report","device":"livingroomthermostat","event":"temperature collection","expected":["temperature"]}'
        responses:
            "200":
                description: database generated identifier for the new device report
            "503":
                description: for unknown or unanticipated issues
            "404":
                description: if any referenced object cannot be found by its provided name
    put:
        description: Update the DeviceReport identified by the id or name in the object provided. Id is used first, name is used second for identification purposes. Returns ServiceException (HTTP 503) for unknown or unanticipated issues. NotFoundException (HTTP 404) if any referenced object cannot be found by its provided name.
        body:
            application/json:
                schema: devicereport
                example: '{"id":"57bb6491555e5218873e5a35","expected":["hvactemp"]}'
        responses:
            "200":
                description: boolean indicating success of the update
            "503":
                description: for unknown or unanticipated issues
            "404":
                description: if any referenced object cannot be found by its provided name
    get:
        description: Return all device reports sorted by id. Returns ServiceException (HTTP 503) for unknown or unanticipated issues. Returns LimitExceededException (HTTP 413) if the number returned exceeds the max limit.
        responses:
            "200":
                description: list of device reports
                body:
                    application/json:
                        schema: devicereport
                        example: '[{"id":"57bc88d8555e5218873e5a34","created":1471973592027,"modified":1471973592027,"origin":1471806386919,"name":"livingroom collection report","device":"livingroomthermostat","event":"temperature collection","expected":["temperature"]}]'
            "503":
                description: for unknown or unanticipated issues
            "413":
                description: if the number returned exceeds the max limit.
/deviceservice/id/{id}:
    displayName: DeviceService Resource (by id)
    description: Example - http://localhost:48081/api/v1/deviceservice/id/57bbbf8432d22c1c33934c61
    uriParameters:
        id:
            displayName: id
            type: string
            required: false
            repeat: false
    delete:
        description: Remove the DeviceService designated by database generated id. Returns ServiceException (HTTP 503) for unknown or unanticipated issues. Returns NotFoundException (HTTP 404) if the device service cannot be found by the identifier provided.
        responses:
            "200":
                description: boolean indicating success of the remove operation
            "503":
                description: for unknown or unanticipated issues
            "404":
                description: if no device service is found for the provided id
/deviceservice/addressablename/{addressablename}:
    displayName: DeviceService Resource (by addressable name)
    description: Example - http://localhost:48081/api/v1/deviceservice/addressablename/hvac thermo address (where hvac thermo address is the name of an addressable)
    uriParameters:
        addressablename:
            displayName: addressablename
            type: string
            required: false
            repeat: false
    get:
        description: Find all device serices associated to the Addressable with the specified addressable name. List may be empty if no device services match. Returns ServiceException (HTTP 503) for unknown or unanticipated issues. Returns NotFoundException (HTTP 404) if no Addressable match on the name provided.
        responses:
            "200":
                description: List of DeviceServices associated to the addressable
                body:
                    application/json:
                        schema: deviceservice
                        example: '[{"id":"57bbbf8432d22c1c33934c61","created":1471922052444,"modified":1471922478043,"origin":1471806386919,"name":"home thermostat device service","description":"manager service for home thermostats","lastConnected":0,"lastReported":0,"labels":["hvac","thermostat","home"],"adminState":"unlocked","operatingState":"enabled","addressable":{"id":"57bbac0332d22c1c33934c60","created":1471917059552,"modified":1471917059552,"origin":1471806386919,"name":"hvac thermo address","protocol":"HTTP","address":"172.17.0.1","port":48089,"path":"/livingroomthermostat","publisher":"none","user":"none","password":"none","topic":"none"}}]'
            "503":
                description: for unknown or unanticipated issues
            "404":
                description: if no addressable is found for the provided id
/deviceservice/name/{name}/opstate/{opState}:
    displayName: DeviceService Resource (update op state by name)
    description: Example - http://localhost:48081/api/v1/deviceservice/name/home thermostat device service/opstate/enabled  (where home thermostat device service is the name of a device service)
    uriParameters:
        opState:
            displayName: opState
            type: string
            required: false
            repeat: false
        name:
            displayName: name
            type: string
            required: false
            repeat: false
    put:
        description: Update the op status time of the device service by unique name of the device service. Returns ServiceException (HTTP 503) for unknown or unanticipated issues. Returns NotFoundException (HTTP 404) if the device service cannot be found by the name provided.
        responses:
            "200":
                description: boolean indicating success of the operation
            "503":
                description: for unknown or unanticipated issues
            "404":
                description: if no device service is found for the provided id
/deviceservice/name/{name}/adminstate/{adminState}:
    displayName: DeviceService Resource (update admin state by name)
    description: Example - http://localhost:48081/api/v1/deviceservice/name/home thermostat device service/adminstate/unlocked  (where home thermostat device service is the name of a device service)
    uriParameters:
        name:
            displayName: name
            type: string
            required: false
            repeat: false
        adminState:
            displayName: adminState
            type: string
            required: false
            repeat: false
    put:
        description: Update the admin state of the device service by device service name. Returns ServiceException (HTTP 503) for unknown or unanticipated issues. Returns NotFoundException (HTTP 404) if the device service cannot be found by the identifier provided.
        responses:
            "200":
                description: boolean indicating success of the operation
            "503":
                description: for unknown or unanticipated issues
            "404":
                description: if no device service is found for the provided id
/deviceservice/name/{name}/lastreported/{time}:
    displayName: DeviceService Resource (update last reported by name)
    description: Example - http://localhost:48081/api/v1/deviceservice/name/home thermostat device service/lastreported/1471922060000  (where home thermostat device service is the name of a device service)
    uriParameters:
        time:
            displayName: time
            type: string
            required: false
            repeat: false
        name:
            displayName: name
            type: string
            required: false
            repeat: false
    put:
        description: Update the last reported time of the device service by unique name of the device service. Returns ServiceException (HTTP 503) for unknown or unanticipated issues. Returns NotFoundException (HTTP 404) if the device service cannot be found by the name provided.
        responses:
            "200":
                description: boolean indicating success of update
            "503":
                description: for unknown or unanticipated issues
            "404":
                description: if no device service is found for the provided id
/deviceservice/name/{name}/lastconnected/{time}:
    displayName: DeviceService Resource (update last connected by name)
    description: Example - http://localhost:48081/api/v1/deviceservice/name/home thermostat device service/lastconnected/1471922060000  (where home thermostat device service is the name of a device service)
    uriParameters:
        time:
            displayName: time
            type: string
            required: false
            repeat: false
        name:
            displayName: name
            type: string
            required: false
            repeat: false
    put:
        description: Update the last connected time of the device service by unique name of the device service. Returns ServiceException (HTTP 503) for unknown or unanticipated issues. Returns NotFoundException (HTTP 404) if the device service cannot be found by the name provided.
        responses:
            "200":
                description: boolean indicating success of update
            "503":
                description: for unknown or unanticipated issues
            "404":
                description: if no device service is found for the provided id
/deviceservice/name/{name}:
    displayName: DeviceService Resource (by name)
    description: Example - http://localhost:48081/api/v1/deviceservice/name/home thermostat device service  (where home thermostat device service is the name of a device service)
    uriParameters:
        name:
            displayName: name
            type: string
            required: false
            repeat: false
    delete:
        description: Remove the DeviceService designated by name. Returns ServiceException (HTTP 503) for unknown or unanticipated issues. Returns NotFoundException (HTTP 404) if the device service cannot be found by the name provided.
        responses:
            "200":
                description: boolean indicating success of the remove operation
            "503":
                description: for unknown or unanticipated issues
            "404":
                description: if no device service is found for the provided id
    get:
        description: Return the DeviceService matching given name (service names should be unique). May be null if no services matches on the name provided. Returns ServiceException (HTTP 503) for unknown or unanticipated issues. Returns NotFoundException (HTTP 404) if the device service cannot be found by the name provided.
        responses:
            "200":
                description: device service matching on name
            "404":
                description: if no device service is found for the provided id
            "503":
                description: for unknown or unanticipated issues
/deviceservice/{id}/opstate/{opState}:
    displayName: DeviceService Resource (update op state)
    description: Example - http://localhost:48081/api/v1/deviceservice/57bbbf8432d22c1c33934c61/opstate/disabled
    uriParameters:
        id:
            displayName: id
            type: string
            required: false
            repeat: false
        opState:
            displayName: opState
            type: string
            required: false
            repeat: false
    put:
        description: Update the op state of the device service by database generated identifier. Returns ServiceException (HTTP 503) for unknown or unanticipated issues. Returns NotFoundException (HTTP 404) if the device service cannot be found by the identifier provided.
        responses:
            "200":
                description: boolean indicating success of the operation
            "503":
                description: for unknown or unanticipated issues
            "404":
                description: if no device service is found for the provided id
/deviceservice/{id}/adminstate/{adminState}:
    displayName: DeviceService Resource (update admin state)
    description: Example - http://localhost:48081/api/v1/deviceservice/57bbbf8432d22c1c33934c61/adminstate/locked
    uriParameters:
        id:
            displayName: id
            type: string
            required: false
            repeat: false
        adminState:
            displayName: adminState
            type: string
            required: false
            repeat: false
    put:
        description: Update the admin state of the device service by database generated identifier. Returns ServiceException (HTTP 503) for unknown or unanticipated issues. Returns NotFoundException (HTTP 404) if the device service cannot be found by the identifier provided.
        responses:
            "200":
                description: boolean indicating success of the operation
            "503":
                description: for unknown or unanticipated issues
            "404":
                description: if no device service is found for the provided id
/deviceservice/{id}/lastreported/{time}:
    displayName: DeviceService Resource (update last reported)
    description: Example - http://localhost:48081/api/v1/deviceservice/57bbbf8432d22c1c33934c61/lastreported/1471922060100
    uriParameters:
        id:
            displayName: id
            type: string
            required: false
            repeat: false
        time:
            displayName: time
            type: string
            required: false
            repeat: false
    put:
        description: Update the last reported time of the device service by database generated identifier. Returns ServiceException (HTTP 503) for unknown or unanticipated issues. Returns NotFoundException (HTTP 404) if the device service cannot be found by the identifier provided.
        responses:
            "200":
                description: boolean indicating success of update
            "503":
                description: for unknown or unanticipated issues
            "404":
                description: if no device service is found for the provided id
/deviceservice/{id}/lastconnected/{time}:
    displayName: DeviceService Resource (update last connected)
    description: Example - http://localhost:48081/api/v1/deviceservice/57bbbf8432d22c1c33934c61/lastconnected/1471922060000
    uriParameters:
        id:
            displayName: id
            type: string
            required: false
            repeat: false
        time:
            displayName: time
            type: string
            required: false
            repeat: false
    put:
        description: Update the last connected time of the device service by database generated identifier. Returns ServiceException (HTTP 503) for unknown or unanticipated issues. Returns NotFoundException (HTTP 404) if the device service cannot be found by the identifier provided.
        responses:
            "200":
                description: boolean indicating success of update
            "503":
                description: for unknown or unanticipated issues
            "404":
                description: if no device service is found for the provided id
/deviceservice/{id}:
    displayName: DeviceService Resource (by id)
    description: Example - http://localhost:48081/api/v1/deviceservice/57bbbf8432d22c1c33934c61
    uriParameters:
        id:
            displayName: id
            type: string
            required: false
            repeat: false
    get:
        description: Fetch a specific device service by database generated id. May return null if no service with the id is found. Returns ServiceException (HTTP 503) for unknown or unanticipated issues. Returns NotFoundException (HTTP 404) if the device service cannot be found by the identifier provided.
        responses:
            "200":
                description: device service matching on id
                body:
                    application/json:
                        schema: deviceservice
                        example: '{"id":"57bbbf8432d22c1c33934c61","created":1471922052444,"modified":1471922478043,"origin":1471806386919,"name":"home thermostat device service","description":"manager service for home thermostats","lastConnected":0,"lastReported":0,"labels":["hvac","thermostat","home"],"adminState":"unlocked","operatingState":"enabled","addressable":{"id":"57bbac0332d22c1c33934c60","created":1471917059552,"modified":1471917059552,"origin":1471806386919,"name":"hvac thermo address","protocol":"HTTP","address":"172.17.0.1","port":48089,"path":"/livingroomthermostat","publisher":"none","user":"none","password":"none","topic":"none"}}'
            "404":
                description: if no device service is found for the provided id
            "503":
                description: for unknown or unanticipated issues
/deviceservice/addressable/{addressableId}:
    displayName: DeviceService Resource (by addressable)
    description: Example - http://localhost:48081/api/v1/deviceservice/addressable/57bbac0332d22c1c33934c60  (the id is an addressable id)
    uriParameters:
        addressableId:
            displayName: addressableId
            type: string
            required: false
            repeat: false
    get:
        description: Find all device servicess associated to the Addressable with the specified addressable database generated identifier. List may be empty if no device service match. Returns ServiceException (HTTP 503) for unknown or unanticipated issues. Returns NotFoundException (HTTP 404) if no Addressable match on the id provided.
        responses:
            "200":
                description: List of DeviceServices associated to the addressable
                body:
                    application/json:
                        schema: deviceservice
                        example: '[{"id":"57bbbf8432d22c1c33934c61","created":1471922052444,"modified":1471922478043,"origin":1471806386919,"name":"home thermostat device service","description":"manager service for home thermostats","lastConnected":0,"lastReported":0,"labels":["hvac","thermostat","home"],"adminState":"unlocked","operatingState":"enabled","addressable":{"id":"57bbac0332d22c1c33934c60","created":1471917059552,"modified":1471917059552,"origin":1471806386919,"name":"hvac thermo address","protocol":"HTTP","address":"172.17.0.1","port":48089,"path":"/livingroomthermostat","publisher":"none","user":"none","password":"none","topic":"none"}}]'
            "503":
                description: for unknown or unanticipated issues
            "404":
                description: if no addressablee is found for the provided id
/deviceservice/label/{label}:
    displayName: DeviceService Resource (by label)
    description: Example - http://localhost:48081/api/v1/deviceservice/label/hvac  (where hvac is a label associated to device services)
    uriParameters:
        label:
            displayName: label
            type: string
            required: false
            repeat: false
    get:
        description: Find all DeviceServices having at least one label matching the label provided. List may be empty if no device services match. Returns ServiceException (HTTP 503) for unknown or unanticipated issues.
        responses:
            "200":
                description: List of DeviceService matching on specified label
                body:
                    application/json:
                        schema: deviceservice
                        example: '[{"id":"57bbbf8432d22c1c33934c61","created":1471922052444,"modified":1471922478043,"origin":1471806386919,"name":"home thermostat device service","description":"manager service for home thermostats","lastConnected":0,"lastReported":0,"labels":["hvac","thermostat","home"],"adminState":"unlocked","operatingState":"enabled","addressable":{"id":"57bbac0332d22c1c33934c60","created":1471917059552,"modified":1471917059552,"origin":1471806386919,"name":"hvac thermo address","protocol":"HTTP","address":"172.17.0.1","port":48089,"path":"/livingroomthermostat","publisher":"none","user":"none","password":"none","topic":"none"}}]'
            "503":
                description: for unknown or unanticipated issues
/deviceservice:
    displayName: DeviceService Resource
    description: Example - http://localhost:48081/api/v1/deviceservice
    post:
        description: Add a new DeviceService - name must be unique.  The Addressable must already exist and can be referenced by an included Addressable object containing the Addressable's id or name. Returns ServiceException (HTTP 503) for unknown or unanticipated issues. Returns DataValidationException (HTTP 409) if an associated addressable (by id or name) is not found.
        body:
            application/json:
                schema: deviceservice
                example: '{"origin":1471806386919,"name":"home thermostat device service","description":"manage home thermostats","labels":["hvac","thermostat"],"adminState":"unlocked","operatingState":"enabled","addressable":{"name":"hvac thermo address"}}'
        responses:
            "200":
                description: database generated identifier for the new device service
            "503":
                description: for unknown or unanticipated issues
            "409":
                description: if an associated addressable (by id or name) is not found or if the name is determined to not be unique with regard to others
    put:
        description: Update the DeviceServcie identified by the id or name stored in the object provided. Id is used first, name is used second for identification purposes. Returns ServiceException (HTTP 503) for unknown or unanticipated issues. Returns NotFoundException (HTTP 404) if the device service cannot be found by the identifier provided.
        body:
            application/json:
                schema: deviceservice
                example: '{"id":"57bbbf8432d22c1c33934c61","description":"manager service for home thermostats","labels":["hvac","thermostat","home"]}'
        responses:
            "200":
                description: boolean indicating success of the update
            "503":
                description: for unknown or unanticipated issues
            "404":
                description: if no device service is found with the provided name or id
    get:
        description: Return all device services sorted by id. Returns ServiceException (HTTP 503) for unknown or unanticipated issues. Returns LimitExceededException (HTTP 413) if the number returned exceeds the max limit.
        responses:
            "200":
                description: list of profiles
                body:
                    application/json:
                        schema: deviceservice
                        example: '[{"id":"57bbbf8432d22c1c33934c61","created":1471922052444,"modified":1471922478043,"origin":1471806386919,"name":"home thermostat device service","description":"manager service for home thermostats","lastConnected":0,"lastReported":0,"labels":["hvac","thermostat","home"],"adminState":"unlocked","operatingState":"enabled","addressable":{"id":"57bbac0332d22c1c33934c60","created":1471917059552,"modified":1471917059552,"origin":1471806386919,"name":"hvac thermo address","protocol":"HTTP","address":"172.17.0.1","port":48089,"path":"/livingroomthermostat","publisher":"none","user":"none","password":"none","topic":"none"}}]'
            "503":
                description: for unknown or unanticipated issues
            "413":
                description: if the number of device services exceeds the current max limit.
/scheduleevent/id/{id}:
    displayName: ScheduleEvent Resource (by id)
    description: Example - http://localhost:48081/api/v1/scheduleevent/id/57bb5837555e5218873e5a23
    uriParameters:
        id:
            displayName: id
            type: string
            required: false
            repeat: false
    delete:
        description: Remove the ScheduleEvent designated by database generated id. ServiceException (HTTP 503) for unknown or unanticipated issues. NotFoundException (HTTP 404) if no ScheduleEvent is found with the provided id. DataValidationException (HTTP 409) if an attempt to delete a schedule event still being referenced by device reports.
        responses:
            "200":
                description: boolean indicating success of the remove operation
            "503":
                description: for unknown or unanticipated issues
            "404":
                description: if no ScheduleEvent is found with the provided id
            "409":
                description: if an attempt to delete a schedule event still being referenced by device reports
/scheduleevent/name/{name}:
    displayName: ScheduleEvent Resource (by name)
    description: Example - http://localhost:48081/api/v1/scheduleevent/name/scrub pushed records (where 'scrub pushed records' is a schedule event name)
    uriParameters:
        name:
            displayName: name
            type: string
            required: false
            repeat: false
    delete:
        description: Remove the ScheduleEvent designated by name. ServiceException (HTTP 503) for unknown or unanticipated issues. NotFoundException (HTTP 404) if no ScheduleEvent is found with the provided name. DataValidationException (HTTP 409) if an attempt to delete a schedule event still being referenced by device reports.
        responses:
            "200":
                description: boolean indicating success of the remove operation
            "503":
                description: for unknown or unanticipated issues
            "404":
                description: if no ScheduleEvent is found with the provided name
            "409":
                description: if an attempt to delete a schedule event still being referenced by device reports
    get:
        description: Return ScheduleEvents matching given name (schedule names should be unique). May be null if no schedule events matches on the name provided. Returns ServiceException (HTTP 503) for unknown or unanticipated issues. NotFoundException (HTTP 404) if no ScheduleEvent is found with the provided name.
        responses:
            "200":
                description: schedule event matching on name
                body:
                    application/json:
                        schema: scheduleevent
                        example: '{"id":"57bb5837555e5218873e5a23","created":1471895607378,"modified":1471895971882,"origin":1471806386919,"name":"scrub pushed records","addressable":{"name":"scrub pushed records"},"parameters":null,"schedule":"daily","service":"edgex-support-scheduler"}'
            "404":
                description: if no ScheduleEvent is found with the provided name
            "503":
                description: for unknown or unanticipated issues
/scheduleevent/{id}:
    displayName: ScheduleEvent Resource (by id)
    description: Example - http://localhost:48081/api/v1/scheduleevent/57bb5837555e5218873e5a23
    uriParameters:
        id:
            displayName: id
            type: string
            required: false
            repeat: false
    get:
        description: Fetch a specific ScheduleEvent by database generated id. May return null if no schedule event with the id is found. Returns ServiceException (HTTP 503) for unknown or unanticipated issues. NotFoundException (HTTP 404) if no ScheduleEvent is found with the provided id.
        responses:
            "200":
                description: schedule event matching on the id
                body:
                    application/json:
                        schema: scheduleevent
                        example: '{"id":"57bb5837555e5218873e5a23","created":1471895607378,"modified":1471895971882,"origin":1471806386919,"name":"scrub pushed records","addressable":{"name":"scrub pushed records"},"parameters":null,"schedule":"daily","service":"edgex-support-scheduler"}'
            "404":
                description: if no ScheduleEvent is found with the provided id
            "503":
                description: for unknown or unanticipated issues
/scheduleevent:
    displayName: ScheduleEvent Resource
    description: Example - http://localhost:48081/api/v1/scheduleevent
    post:
        description: Add a new ScheduleEvent - name must be unique. Returns ServiceException (HTTP 503) for unknown or unanticipated issues. NotFoundException (HTTP 404) if the event's associated schedule is not found (referenced by name). DataValidationException (HTTP 409) if the schedule was not provided.
        body:
            application/json:
                schema: scheduleevent
                example: '{"origin":1471806386919,"name":"scrub pushed records","addressable":{"name":"scrub pushed records"},"parameters":null,"schedule":"daily","service":"edgex-support-scheduler"}'
        responses:
            "200":
                description: database generated identifier for the new schedule
            "503":
                description: for unknown or unanticipated issues or if schedule event name is a duplicate
            "404":
                description: if the event's associated schedule is not found (referenced by name)
            "409":
                description: if the schedule was not provided or if the name is determined to not be unique with regard to others
    put:
        description: Update the ScheduleEvent identified by the id or name in the object provided. Id is used first, name is used second for identification purposes. Returns ServiceException (HTTP 503) for unknown or unanticipated issues. DataValidationException (HTTP 409) if an attempt to change the name is made when the schedule event is still being referenced by device reports. NotFoundException (HTTP 404) if no schedule is found for the identifier provided.
        body:
            application/json:
                schema: scheduleevent
                example: '{"id":"57bb5837555e5218873e5a23","addressable":{"name":"weekly scrubber service"}}'
        responses:
            "200":
                description: boolean indicating success of the update
            "503":
                description: for unknown or unanticipated issues
            "409":
                description: if an attempt to change the name is made when the schedule event is still being referenced by device reports
            "404":
                description: if no schedule is found for the identifier provided.
    get:
        description: Return all schedule events sorted by id. Returns ServiceException (HTTP 503) for unknown or unanticipated issues. Returns LimitExceededException (HTTP 413) if the number returned exceeds the max limit.
        responses:
            "200":
                description: list of schedule events
                body:
                    application/json:
                        schema: scheduleevent
                        example: '[{"id":"57bb5837555e5218873e5a23","created":1471895607378,"modified":1471895607378,"origin":1471806386919,"name":"scrub pushed records","addressable:{"name":"scrub pushed records"},"parameters":null,"schedule":"daily","service":"edgex-support-scheduler"}]'
            "503":
                description: for unknown or unanticipated issues
            "413":
                description: if the number of schedules exceeds the current max limit.
/schedule/id/{id}:
    displayName: Schedule Resource
    description: Example - http://localhost:48081/api/v1/schedule/id/57bb49e6555e5218873e5a1b
    uriParameters:
        id:
            displayName: id
            type: string
            required: false
            repeat: false
    delete:
        description: Remove the Schedule designated by database generated id. ServiceException (HTTP 503) for unknown or unanticipated issues. NotFoundException (HTTP 404) if no Schedule is found with the provided id.
        responses:
            "200":
                description: boolean indicating success of the remove operation
            "404":
                description: if no schedule is found for the identifier provided.
            "503":
                description: for unknown or unanticipated issues
/schedule/{id}:
    displayName: Schedule Resource (by id)
    description: Example - http://localhost:48081/api/v1/schedule/57bb49e6555e5218873e5a1b
    uriParameters:
        id:
            displayName: id
            type: string
            required: false
            repeat: false
    get:
        description: Fetch a specific Schedule by database generated id. May return null if no schedule with the id is found. Returns ServiceException (HTTP 503) for unknown or unanticipated issues. NotFoundException (HTTP 404) if no Schedule is found with the provided id.
        responses:
            "200":
                description: schedule matching on the id
                body:
                    application/json:
                        schema: schedule
                        example: '{"id":"57bb49e6555e5218873e5a1b","created":1471891942854,"modified":1471893402687,"origin":1471806386919,"name":"hourly","start":1503360000,"end":1503390000,"frequency":60000,"cron":null,"runOnce":"false"}'
            "404":
                description: if no schedule is found for the identifier provided.
            "503":
                description: for unknown or unanticipated issues
/schedule/name/{name}:
    displayName: Schedule Resource (by name)
    description: Example - http://localhost:48081/api/v1/schedule/name/hourly (where hourly is the name of a schedule)
    uriParameters:
        name:
            displayName: name
            type: string
            required: false
            repeat: false
    delete:
        description: Remove the Schedule designated by name. ServiceException (HTTP 503) for unknown or unanticipated issues. NotFoundException (HTTP 404) if no Schedule is found with the provided name.
        responses:
            "200":
                description: boolean indicating success of the remove operation
            "404":
                description: if no schedule is found for the name provided.
            "503":
                description: for unknown or unanticipated issues
    get:
        description: Return Schedule matching given name (schedule names should be unique). May be null if no schedule matches on the name provided. Returns ServiceException (HTTP 503) for unknown or unanticipated issues. NotFoundException (HTTP 404) if no Schedule is found with the provided name.
        responses:
            "200":
                description: schedule matching on name
                body:
                    application/json:
                        schema: schedule
                        example: '{"id":"57bb49e6555e5218873e5a1b","created":1471891942854,"modified":1471893402687,"origin":1471806386919,"name":"hourly","start":1503360000,"end":1503390000,"frequency":60000,"cron":null,"runOnce":"false"}'
            "404":
                description: if no schedule is found for the identifier provided.
            "503":
                description: for unknown or unanticipated issues
/schedule:
    displayName: Schedule Resource
    description: Example - http://localhost:48081/api/v1/schedule
    post:
        description: Add a new Schedule - name must be unique. Returns ServiceException (HTTP 503) for unknown or unanticipated issues. DataValidationException (HTTP 409) if the cron expression string is not properly formatted.
        body:
            application/json:
                schema: schedule
                example: '{"origin":1471806386919,"name":"hourly","start":"20160101T000000","end":"","frequency":"PT1H"} or {"origin":1471806386919,"name":"at midnight","start":"20160101T000000","frequency":"PT1D"} or {"origin":1471806386919,"name":"daily noon","start":"20160101T120000","frequency":"PT1D"}'
        responses:
            "200":
                description: database generated identifier for the new schedule
            "503":
                description: for unknown or unanticipated issues
            "409":
                description: if the start, end, or frequency strings are not properly formatted or if the name is determined to not be unique with regard to others
    put:
        description: Update a Schedule identified by the id or name in the object provided. Id is used first, name is used second for identification purposes. Returns ServiceException (HTTP 503) for unknown or unanticipated issues. DataValidationException (HTTP // 409) if any the time or frequency strings are not properly formatted. NotFoundException (HTTP 404) if no schedule is found for the id.
        body:
            application/json:
                schema: schedule
                example: '{"id":"57bb49e6555e5218873e5a1b","end":"20170101T000000"}'
        responses:
            "200":
                description: boolean indicating success of the update
            "503":
                description: for unknown or unanticipated issues
            "409":
                description: if the start, end, or frequency strings are not properly formatted
    get:
        description: Return all schedules sorted by id. Returns ServiceException (HTTP 503) for unknown or unanticipated issues. Returns LimitExceededException (HTTP 413) if the number returned exceeds the max limit.
        responses:
            "200":
                description: list of schedules
                body:
                    application/json:
                        schema: schedule
                        example: '[{"id":"57fc078d4c1a663f6fda1ae0","created":1476134797194,"modified":1476134797194,"origin":1471806386919,"name":"fifteen minute","start":"20160101T000000","end":"","frequency":"PT15M"},{"id":"57fc077e4c1a663f6fda1adf","created":1476134782460,"modified":1476134782460,"origin":1471806386919,"name":"hourly","start":"20160101T000000","end":"","frequency":"PT1H"},{"id":"57fc075a4c1a663f6fda1ade","created":1476134746390,"modified":1476134746390,"origin":1471806386919,"name":"midnight","start":"20160101T000000","end":"","frequency":"PT1D"}]'
            "503":
                description: for unknown or unanticipated issues
            "413":
                description: if the number of schedules exceeds the current max limit.
/provisionwatcher/id/{id}:
    displayName: ProvisionWatcher Resource (by id)
    description: Example - http://localhost:48081/api/v1/provisionwatcher/id/57ce0461add4b99e5d020534
    uriParameters:
        id:
            displayName: id
            description: database generated id
            type: string
            required: false
            repeat: false
    delete:
        description: Remove the ProvisionWatcher designated by the database generated id for the ProvisionWatcher. Returns ServiceException (HTTP 503) for unknown or unanticipated issues. Returns NotFoundException (HTTP 404) if no provision watcher with the provided id is found.
        displayName: delete provision watcher by id
        responses:
            "200":
                description: boolean indicating success of the remove operation
            "404":
                description: if no provision watcher with the provided id is found.
            "503":
                description: for unknown or unanticipated issues
/provisionwatcher/{id}:
    displayName: ProvisionWatcher Resource (by id)
    description: Example - http://localhost:48081/api/v1/provisionwatcher/57ce0523add4b99e5d020535
    uriParameters:
        id:
            displayName: id
            description: database generated id
            type: string
            required: false
            repeat: false
    get:
        description: Fetch a specific provision watcher by database generated id. May return null if no provision watcher matches on id. Returns ServiceException (HTTP 503) for unknown or unanticipated issues.  Returns NotFoundException (HTTP 404) if no provision watcher with the provided id is found.
        displayName: get provision watcher by id
        responses:
            "200":
                description: provision watcher
                body:
                    application/json:
                        schema: provisionwatcher
                        example: '{"id":"57cf3a13555ebf53636e2654","created":1473198611772,"modified":1473198611772,"origin":1471806386919,"name":"bacnet watcher","identifiers":{"MAC":"00-05-1B-A1-99-99","HTTP":"10.0.0.1"},"profile":{"id":"57cf3849555ebf53636e2651","created":1473198153474,"modified":1473198153474,"origin":1471806386919,"name":"thermostat profile","manufacturer":"Honeywell","model":"ABC123","labels":["bacnet","thermostat","Honeywell"],"description":"BACnet Honeywell thermostats","objects":{"resources":{"CurrentHumidity":{"get":[{"parameter":"CurrentHumidity","property":"presentValue","operation":"get","object":"AnalogValue_22"}]}}},"commands":[{"id":"57cf3849555ebf53636e2650","created":1473198153434,"modified":1473198153434,"origin":1471806386919,"name":"cooling point","get":{"path":"/cooling","responses":[{"code":"200","description":"ok","expectedValues":["temperature"]}]},"put":{"path":"/cooling","responses":[{"code":"200","description":"ok","expectedValues":["temperature"]}],"parameterNames":["coolingpoint"]}}]},"service":{"id":"57cf3882555ebf53636e2653","created":1473198210365,"modified":1473198210365,"origin":1471806386919,"name":"home thermostat device service","description":"manage home thermostats","lastConnected":0,"lastReported":0,"labels":["hvac","thermostat"],"adminState":"unlocked","operatingState":"enabled","addressable":{"id":"57cf3875555ebf53636e2652","created":1473198197783,"modified":1473198197783,"origin":1471806386919,"name":"hvac thermo address","protocol":"HTTP","address":"172.17.0.1","port":48089,"path":"/livingroomthermostat","publisher":"none","user":"none","password":"none","topic":"none"}}}'
            "404":
                description: if no provision watcher with the provided id is found.
            "503":
                description: for unknown or unanticipated issues
/provisionwatcher/name/{name}:
    displayName: ProvisionWatcher Resource (by name)
    description: Example - http://localhost:48081/api/v1/provisionwatcher/name/bacnet watcher (where bacnet watcher is the unique name of an ProvisionWatcher)
    uriParameters:
        name:
            displayName: name
            description: unique name of provision watcher
            type: string
            required: false
            repeat: false
    delete:
        description: Remove the ProvisionWatcher designated by unique name identifier. Returns ServiceException (HTTP 503) for unknown or unanticipated issues. Returns NotFoundException (HTTP 404) if no provision watcher with the provided name is found.
        displayName: delete provision watcher by name
        responses:
            "200":
                description: boolean indicating success of the remove operation
            "404":
                description: if no provision watcher with the provided name is found.
            "503":
                description: for unknown or unanticipated issues.
    get:
        description: Return ProvisionWatcher with matching name (name should be unique). May be null if none match. Returns ServiceException (HTTP 503) for unknown or unanticipated issues. Returns NotFoundException (HTTP 404) if no provision watcher with the provided name is found.
        displayName: get provision watcher by name
        responses:
            "200":
                description: provision watcher matching on name
                body:
                    application/json:
                        schema: provisionwatcher
                        example: '{"id":"57cf3a13555ebf53636e2654","created":1473198611772,"modified":1473198611772,"origin":1471806386919,"name":"bacnet watcher","identifiers":{"MAC":"00-05-1B-A1-99-99","HTTP":"10.0.0.1"},"profile":{"id":"57cf3849555ebf53636e2651","created":1473198153474,"modified":1473198153474,"origin":1471806386919,"name":"thermostat profile","manufacturer":"Honeywell","model":"ABC123","labels":["bacnet","thermostat","Honeywell"],"description":"BACnet Honeywell thermostats","objects":{"resources":{"CurrentHumidity":{"get":[{"parameter":"CurrentHumidity","property":"presentValue","operation":"get","object":"AnalogValue_22"}]}}},"commands":[{"id":"57cf3849555ebf53636e2650","created":1473198153434,"modified":1473198153434,"origin":1471806386919,"name":"cooling point","get":{"path":"/cooling","responses":[{"code":"200","description":"ok","expectedValues":["temperature"]}]},"put":{"path":"/cooling","responses":[{"code":"200","description":"ok","expectedValues":["temperature"]}],"parameterNames":["coolingpoint"]}}]},"service":{"id":"57cf3882555ebf53636e2653","created":1473198210365,"modified":1473198210365,"origin":1471806386919,"name":"home thermostat device service","description":"manage home thermostats","lastConnected":0,"lastReported":0,"labels":["hvac","thermostat"],"adminState":"unlocked","operatingState":"enabled","addressable":{"id":"57cf3875555ebf53636e2652","created":1473198197783,"modified":1473198197783,"origin":1471806386919,"name":"hvac thermo address","protocol":"HTTP","address":"172.17.0.1","port":48089,"path":"/livingroomthermostat","publisher":"none","user":"none","password":"none","topic":"none"}}}'
            "404":
                description: if no provision watcher with the provided name is found.
            "503":
                description: for unknown or unanticipated issues.
/provisionwatcher/profile/{profileId}:
    displayName: ProvisionWatcher Resource (by profile)
    description: Example - http://localhost:48081/api/v1/provisionwatcher/profile/57ce033aadd4b99e5d020532 (where the id is a device profile id)
    uriParameters:
        profileId:
            displayName: profileId
            type: string
            required: false
            repeat: false
    get:
        description: Find all provision watchers associated to the DeviceProfile with the specified profile database generated identifier. List may be empty if no provision watchers match. Returns ServiceException (HTTP 503) for unknown or unanticipated issues. Returns NotFoundException (HTTP 404) if no DeviceProfile match on the id provided.
        responses:
            "200":
                description: List of ProvisionWatchers associated to the device profile
                body:
                    application/json:
                        schema: provisionwatcher
                        example: '[{"id":"57ce0523add4b99e5d020535","created":1473119523238,"modified":1473119523238,"origin":1471806386919,"name":"bacnet watcher","identifiers":{"MAC":"00-05-1B-A1-99-99","HTTP":"10.0.0.1"},"profile":{"id":"57ce033aadd4b99e5d020532","created":1473119034719,"modified":1473119034719,"origin":1471806386919,"name":"thermostat profile","manufacturer":"Honeywell","model":"ABC123","labels":["bacnet","thermostat","Honeywell"],"description":"BACnet Honeywell thermostats","objects":{"resources":{"CurrentHumidity":{"get":[{"parameter":"CurrentHumidity","property":"presentValue","operation":"get","object":"AnalogValue_22"}]}}},"commands":[{"id":"57ce033aadd4b99e5d020531","created":1473119034697,"modified":1473119034697,"origin":1471806386919,"name":"cooling point","get":{"path":"/cooling","responses":[{"code":"200","description":"ok","expectedValues":["temperature"]}]},"put":{"path":"/cooling","responses":[{"code":"200","description":"ok","expectedValues":["temperature"]}],"parameterNames":["coolingpoint"]}}]}}]'
            "503":
                description: for unknown or unanticipated issues.
            "404":
                description: if no device profile match on the id provided.
/provisionwatcher/profilename/{profilename}:
    displayName: ProvisionWatcher Resource (by profile name)
    description: Example - http://localhost:48081/api/v1/provisionwatcher/profilename/thermostat profile (where 'thermostat profile' is the name of a device profile)
    uriParameters:
        profilename:
            displayName: profilename
            type: string
            required: false
            repeat: false
    get:
        description: Find all provision watchers associated to the DeviceProfile with the specified profile name. List may be empty if no provision watcher match. Returns ServiceException (HTTP 503) for unknown or unanticipated issues. Returns NotFoundException (HTTP 404) if no DeviceProfile match on the name provided.
        responses:
            "200":
                description: List of ProvisionWatcher associated to the profile
                body:
                    application/json:
                        schema: provisionwatcher
                        example: '[{"id":"57cf3a13555ebf53636e2654","created":1473198611772,"modified":1473198611772,"origin":1471806386919,"name":"bacnet watcher","identifiers":{"MAC":"00-05-1B-A1-99-99","HTTP":"10.0.0.1"},"profile":{"id":"57cf3849555ebf53636e2651","created":1473198153474,"modified":1473198153474,"origin":1471806386919,"name":"thermostat profile","manufacturer":"Honeywell","model":"ABC123","labels":["bacnet","thermostat","Honeywell"],"description":"BACnet Honeywell thermostats","objects":{"resources":{"CurrentHumidity":{"get":[{"parameter":"CurrentHumidity","property":"presentValue","operation":"get","object":"AnalogValue_22"}]}}},"commands":[{"id":"57cf3849555ebf53636e2650","created":1473198153434,"modified":1473198153434,"origin":1471806386919,"name":"cooling point","get":{"path":"/cooling","responses":[{"code":"200","description":"ok","expectedValues":["temperature"]}]},"put":{"path":"/cooling","responses":[{"code":"200","description":"ok","expectedValues":["temperature"]}],"parameterNames":["coolingpoint"]}}]},"service":{"id":"57cf3882555ebf53636e2653","created":1473198210365,"modified":1473198210365,"origin":1471806386919,"name":"home thermostat device service","description":"manage home thermostats","lastConnected":0,"lastReported":0,"labels":["hvac","thermostat"],"adminState":"unlocked","operatingState":"enabled","addressable":{"id":"57cf3875555ebf53636e2652","created":1473198197783,"modified":1473198197783,"origin":1471806386919,"name":"hvac thermo address","protocol":"HTTP","address":"172.17.0.1","port":48089,"path":"/livingroomthermostat","publisher":"none","user":"none","password":"none","topic":"none"}}}]'
            "503":
                description: for unknown or unanticipated issues.
            "404":
                description: if no DeviceProfile match on the id provided.
/provisionwatcher/service/{serviceId}:
    displayName: ProvisionWatcher Resource (by service)
    description: Example - http://localhost:48081/api/v1/provisionwatcher/service/57ce033aadd4b99e5d020532 (where the id is a device service id)
    uriParameters:
        serviceId:
            displayName: serviceId
            type: string
            required: false
            repeat: false
    get:
        description: Find the provision watchers associated to the DeviceService with the specified service database generated identifier. List may be empty if no provision watchers match. Returns ServiceException (HTTP 503) for unknown or unanticipated issues. Returns NotFoundException (HTTP 404) if no DeviceService match on the id provided.
        responses:
            "200":
                description: List of ProvisionWatchers associated to the device service
                body:
                    application/json:
                        schema: provisionwatcher
                        example: '[{"id":"57cf3a13555ebf53636e2654","created":1473198611772,"modified":1473198611772,"origin":1471806386919,"name":"bacnet watcher","identifiers":{"MAC":"00-05-1B-A1-99-99","HTTP":"10.0.0.1"},"profile":{"id":"57cf3849555ebf53636e2651","created":1473198153474,"modified":1473198153474,"origin":1471806386919,"name":"thermostat profile","manufacturer":"Honeywell","model":"ABC123","labels":["bacnet","thermostat","Honeywell"],"description":"BACnet Honeywell thermostats","objects":{"resources":{"CurrentHumidity":{"get":[{"parameter":"CurrentHumidity","property":"presentValue","operation":"get","object":"AnalogValue_22"}]}}},"commands":[{"id":"57cf3849555ebf53636e2650","created":1473198153434,"modified":1473198153434,"origin":1471806386919,"name":"cooling point","get":{"path":"/cooling","responses":[{"code":"200","description":"ok","expectedValues":["temperature"]}]},"put":{"path":"/cooling","responses":[{"code":"200","description":"ok","expectedValues":["temperature"]}],"parameterNames":["coolingpoint"]}}]},"service":{"id":"57cf3882555ebf53636e2653","created":1473198210365,"modified":1473198210365,"origin":1471806386919,"name":"home thermostat device service","description":"manage home thermostats","lastConnected":0,"lastReported":0,"labels":["hvac","thermostat"],"adminState":"unlocked","operatingState":"enabled","addressable":{"id":"57cf3875555ebf53636e2652","created":1473198197783,"modified":1473198197783,"origin":1471806386919,"name":"hvac thermo address","protocol":"HTTP","address":"172.17.0.1","port":48089,"path":"/livingroomthermostat","publisher":"none","user":"none","password":"none","topic":"none"}}}]'
            "503":
                description: for unknown or unanticipated issues.
            "404":
                description: if no device service match on the id provided.
/provisionwatcher/servicename/{servicename}:
    displayName: ProvisionWatcher Resource (by service name)
    description: Example - http://localhost:48081/api/v1/provisionwatcher/servicename/home thermostat device service (where 'home thermostat device service' is the name of a device service)
    uriParameters:
        servicename:
            displayName: servicename
            type: string
            required: false
            repeat: false
    get:
        description: Find the provision watchers associated to the DeviceService with the specified service name. List may be none if no provision watcher match. Returns ServiceException (HTTP 503) for unknown or unanticipated issues. Returns NotFoundException (HTTP 404) if no DeviceService match on the name provided.
        responses:
            "200":
                description: List of ProvisionWatcher associated to the device service
                body:
                    application/json:
                        schema: provisionwatcher
                        example: '[{"id":"57cf3a13555ebf53636e2654","created":1473198611772,"modified":1473198611772,"origin":1471806386919,"name":"bacnet watcher","identifiers":{"MAC":"00-05-1B-A1-99-99","HTTP":"10.0.0.1"},"profile":{"id":"57cf3849555ebf53636e2651","created":1473198153474,"modified":1473198153474,"origin":1471806386919,"name":"thermostat profile","manufacturer":"Honeywell","model":"ABC123","labels":["bacnet","thermostat","Honeywell"],"description":"BACnet Honeywell thermostats","objects":{"resources":{"CurrentHumidity":{"get":[{"parameter":"CurrentHumidity","property":"presentValue","operation":"get","object":"AnalogValue_22"}]}}},"commands":[{"id":"57cf3849555ebf53636e2650","created":1473198153434,"modified":1473198153434,"origin":1471806386919,"name":"cooling point","get":{"path":"/cooling","responses":[{"code":"200","description":"ok","expectedValues":["temperature"]}]},"put":{"path":"/cooling","responses":[{"code":"200","description":"ok","expectedValues":["temperature"]}],"parameterNames":["coolingpoint"]}}]},"service":{"id":"57cf3882555ebf53636e2653","created":1473198210365,"modified":1473198210365,"origin":1471806386919,"name":"home thermostat device service","description":"manage home thermostats","lastConnected":0,"lastReported":0,"labels":["hvac","thermostat"],"adminState":"unlocked","operatingState":"enabled","addressable":{"id":"57cf3875555ebf53636e2652","created":1473198197783,"modified":1473198197783,"origin":1471806386919,"name":"hvac thermo address","protocol":"HTTP","address":"172.17.0.1","port":48089,"path":"/livingroomthermostat","publisher":"none","user":"none","password":"none","topic":"none"}}}]'
            "503":
                description: for unknown or unanticipated issues.
            "404":
                description: if no DeviceService match on the id provided.
/provisionwatcher/identifier/{key}/{value}:
    displayName: ProvisionWatcher Resource (by identifier key value pair)
    description: Example - http://localhost:48081/api/v1/provisionwatcher/identifier/HTTP/10.0.1.1 (where HTTP and 10.0.1.1 are the key value pair of the provision watcher identifier to be searched for )
    uriParameters:
        key:
            displayName: key
            type: string
            required: false
            repeat: false
        value:
            displayName: value
            type: string
            required: false
            repeat: false
    get:
        description: Find the provision watchers associated to the identifier key/value pair.  The identifier key/value pair identify a protocol and address of the protocol to watch for by the Device Service. List may be none if no provision watcher match. Returns ServiceException (HTTP 503) for unknown or unanticipated issues.
        responses:
            "200":
                description: List of ProvisionWatcher associated to the device service
                body:
                    application/json:
                        schema: provisionwatcher
                        example: '[{"id":"57cf3a13555ebf53636e2654","created":1473198611772,"modified":1473198611772,"origin":1471806386919,"name":"bacnet watcher","identifiers":{"MAC":"00-05-1B-A1-99-99","HTTP":"10.0.1.1"},"profile":{"id":"57cf3849555ebf53636e2651","created":1473198153474,"modified":1473198153474,"origin":1471806386919,"name":"thermostat profile","manufacturer":"Honeywell","model":"ABC123","labels":["bacnet","thermostat","Honeywell"],"description":"BACnet Honeywell thermostats","objects":{"resources":{"CurrentHumidity":{"get":[{"parameter":"CurrentHumidity","property":"presentValue","operation":"get","object":"AnalogValue_22"}]}}},"commands":[{"id":"57cf3849555ebf53636e2650","created":1473198153434,"modified":1473198153434,"origin":1471806386919,"name":"cooling point","get":{"path":"/cooling","responses":[{"code":"200","description":"ok","expectedValues":["temperature"]}]},"put":{"path":"/cooling","responses":[{"code":"200","description":"ok","expectedValues":["temperature"]}],"parameterNames":["coolingpoint"]}}]},"service":{"id":"57cf3882555ebf53636e2653","created":1473198210365,"modified":1473198210365,"origin":1471806386919,"name":"home thermostat device service","description":"manage home thermostats","lastConnected":0,"lastReported":0,"labels":["hvac","thermostat"],"adminState":"unlocked","operatingState":"enabled","addressable":{"id":"57cf3875555ebf53636e2652","created":1473198197783,"modified":1473198197783,"origin":1471806386919,"name":"hvac thermo address","protocol":"HTTP","address":"172.17.0.1","port":48089,"path":"/livingroomthermostat","publisher":"none","user":"none","password":"none","topic":"none"}}}]'
            "503":
                description: for unknown or unanticipated issues.
/provisionwatcher:
    displayName: ProvisionWatcher Resource
    description: "Example - http://localhost:48081/api/v1/provisionwatcher"
    post:
        description: Add a new ProvisionWatcher - name must be unique. Returns ServiceException (HTTP 503) for unknown or unanticipated issues.  Returns DataValidationException (HTTP 409) if profile service are unknown
        displayName: add provision watcher
        body:
            application/json:
                schema: provisionwatcher
                example: '{"name":"bacnet watcher", "origin":1471806386919, "identifiers":{"MAC":"00-05-1B-A1-99-99","HTTP":"10.0.0.1"},"profile":{"id":"57ce033aadd4b99e5d020532"},"service":{"id":"57ce033aadd4b99e5d020538"}} or {"name":"bacnet watcher", "origin":1471806386919, "identifiers":{"MAC":"00-05-1B-A1-99-99","HTTP":"10.0.0.1"},"profile":{"name":"thermostat profile"},"service":{"name":"home thermostat device service"}}'
        responses:
            "200":
                description: new database generated id for the new ProvisionWatcher
            "503":
                description: for unknown or unanticipated issues or for any duplicate name (key) error.
            "409":
                description: if an associated object (Profile, Service) cannot be found with the id or name provided or if the watcher name is determined to not be unique with regard to others
    put:
        description: Update the ProvisionWatcher identified by the id or name in the object provided. Id is used first, name is used second for identification purposes. Returns ServiceException (HTTP 503) for unknown or unanticipated issues. Returns NotFoundException (HTTP 404) if no provision watcher with the provided id is found.
        displayName: update provision watcher
        body:
            application/json:
                schema: provisionwatcher
                example: '{"name":"bacnet watcher", "origin":14718063870000}  or {"id":"57ce0523add4b99e5d020535", "origin":14718063870000}'
        responses:
            "200":
                description: boolean indicating success of the update
            "404":
                description: if no provision watcher with the provided id is found.
            "503":
                description: for unknown or unanticipated issues or for any duplicate name (key) error.
    get:
        description: Return all provision watcher objects sorted by database generated id. Returns ServiceException (HTTP 503) for unknown or unanticipated issues. Returns LimitExceededException (HTTP 413) if the number returned exceeds the max limit.
        displayName: get all provision watchers
        responses:
            "200":
                description: list of provision watcher
                body:
                    application/json:
                        schema: provisionwatcher
                        example: '[{"id":"57cf3a13555ebf53636e2654","created":1473198611772,"modified":1473198611772,"origin":1471806386919,"name":"bacnet watcher","identifiers":{"MAC":"00-05-1B-A1-99-99","HTTP":"10.0.0.1"},"profile":{"id":"57cf3849555ebf53636e2651","created":1473198153474,"modified":1473198153474,"origin":1471806386919,"name":"thermostat profile","manufacturer":"Honeywell","model":"ABC123","labels":["bacnet","thermostat","Honeywell"],"description":"BACnet Honeywell thermostats","objects":{"resources":{"CurrentHumidity":{"get":[{"parameter":"CurrentHumidity","property":"presentValue","operation":"get","object":"AnalogValue_22"}]}}},"commands":[{"id":"57cf3849555ebf53636e2650","created":1473198153434,"modified":1473198153434,"origin":1471806386919,"name":"cooling point","get":{"path":"/cooling","responses":[{"code":"200","description":"ok","expectedValues":["temperature"]}]},"put":{"path":"/cooling","responses":[{"code":"200","description":"ok","expectedValues":["temperature"]}],"parameterNames":["coolingpoint"]}}]},"service":{"id":"57cf3882555ebf53636e2653","created":1473198210365,"modified":1473198210365,"origin":1471806386919,"name":"home thermostat device service","description":"manage home thermostats","lastConnected":0,"lastReported":0,"labels":["hvac","thermostat"],"adminState":"unlocked","operatingState":"enabled","addressable":{"id":"57cf3875555ebf53636e2652","created":1473198197783,"modified":1473198197783,"origin":1471806386919,"name":"hvac thermo address","protocol":"HTTP","address":"172.17.0.1","port":48089,"path":"/livingroomthermostat","publisher":"none","user":"none","password":"none","topic":"none"}}}]'
            "413":
                description: if the number returned exceeds the max limit.
            "503":
                description: for unknown or unanticipated issues.
/addressable/id/{id}:
    displayName: Addressable Resource (by id)
    description: Example - http://localhost:48081/api/v1/addressable/id/57bb276e555e5218873e5a13
    uriParameters:
        id:
            displayName: id
            description: database generated id
            type: string
            required: false
            repeat: false
    delete:
        description: Remove the Addressable designated by the database generated id for the Addressable. Returns ServiceException (HTTP 503) for unknown or unanticipated issues. Returns NotFoundException (HTTP 404) if no addressable with the provided id is found.
        displayName: delete addressable by id
        responses:
            "200":
                description: boolean indicating success of the remove operation
            "404":
                description: if no addressable with the provided id is found.
            "503":
                description: for unknown or unanticipated issues
/addressable/{id}:
    displayName: Addressable Resource (by id)
    description: Example - http://localhost:48081/api/v1/addressable/57bb276e555e5218873e5a13
    uriParameters:
        id:
            displayName: id
            description: database generated id
            type: string
            required: false
            repeat: false
    get:
        description: Fetch a specific addressable by database generated id. May return null if no addressable matches on id. Returns ServiceException (HTTP 503) for unknown or unanticipated issues.  Returns NotFoundException (HTTP 404) if not found by the id.
        displayName: get addressable by id
        responses:
            "200":
                description: addressable
                body:
                    application/json:
                        schema: addressable
                        example: '{"id":"57bb276e555e5218873e5a13","created":1471883118326,"modified":1471883691145,"origin":1471806386919,"name":"hvac thermo address","protocol":"HTTP","address":"172.17.0.1","port":48089,"path":"/livingroomhvac","publisher":"none","user":"none","password":"none","topic":"none","method":"GET"}'
            "404":
                description: if no addressable with the provided id is found
            "503":
                description: for unknown or unanticipated issues
/addressable/name/{name}:
    displayName: Addressable Resource (by name)
    description: Example - http://localhost:48081/api/v1/addressable/name/hvac thermo address (where hvac thermo address is the unique name of an Addressable)
    uriParameters:
        name:
            displayName: name
            description: unique name of addressable
            type: string
            required: false
            repeat: false
    delete:
        description: Remove the Addressable designated by unique name identifier. Returns ServiceException (HTTP 503) for unknown or unanticipated issues. Returns NotFoundException (HTTP 404) if no addressable with the provided name is found.
        displayName: delete addressable by name
        responses:
            "200":
                description: boolean indicating success of the remove operation
            "404":
                description: if no addressable with the provided name is found.
            "503":
                description: for unknown or unanticipated issues.
    get:
        description: Return Addressable with matching name (name should be unique). May be null if none match. Returns ServiceException (HTTP 503) for unknown or unanticipated issues.  Returns NotFoundException (HTTP 404) if not found by name.
        displayName: get addressable by name
        responses:
            "200":
                description: addressable matching on name
                body:
                    application/json:
                        schema: addressable
                        example: '{"id":"57bb2a31555e5218873e5a14","created":1471883825676,"modified":1471883825676,"origin":1471806386919,"name":"hvac thermo address","protocol":"HTTP","address":"172.17.0.1","port":48089,"path":"/livingroomthermostat","publisher":"none","user":"none","password":"none","topic":"none","method":"GET"}'
            "404":
                description: if no addressable with the provided name is found
            "503":
                description: for unknown or unanticipated issues.
/addressable/topic/{topic}:
    displayName: Addressable Resource (by topic)
    description: Example - http://localhost:48081/api/v1/addressable/topic/thermodata (where thermodata is the name of Addressables' topic)
    uriParameters:
        topic:
            displayName: topic
            description: topic name (as in MQTT topic name)
            type: string
            required: false
            repeat: false
    get:
        description: Return Addressable objects with given topic. List may be empty if none are associated to the topic. Returns ServiceException (HTTP 503) for unknown or unanticipated issues.
        displayName: get addressable by topic
        responses:
            "200":
                description: list of addressable matching topic
                body:
                    application/json:
                        schema: addressable
                        example: '[{"id":"57bb2bca555e5218873e5a17","created":1471884234787,"modified":1471884234787,"origin":1471806386919,"name":"hvac thermo address2","protocol":"TCP","address":"172.17.0.1","port":60601,"path":"none","publisher":"DELLPUB","user":"dell","password":"abc123","topic":"thermodata","method":"GET"}]'
            "503":
                description: for unknown or unanticipated issues.
/addressable/port/{port}:
    displayName: "Addressable Resource (by port)"
    description: Example - http://localhost:48081/api/v1/addressable/port/48089 (where 48089 is the name of Addressables' topic)
    uriParameters:
        port:
            displayName: port
            type: string
            required: false
            repeat: false
    get:
        description: Return Addressable objects with given port. List may be empty if none are associated to the port. Returns ServiceException (HTTP 503) for unknown or unanticipated issues.
        displayName: get addressable by port
        responses:
            "200":
                description: list of addressable matching port
                body:
                    application/json:
                        schema: addressable
                        example: '[{"id":"57bb2b08555e5218873e5a15","created":1471884040857,"modified":1471884040857,"origin":1471806386919,"name":"hvac thermo address","protocol":"HTTP","address":"172.17.0.1","port":48089,"path":"/livingroomthermostat","publisher":"none","user":"none","password":"none","topic":"none","method":"GET"}]'
            "503":
                description: for unknown or unanticipated issues
/addressable/publisher/{publisher}:
    displayName: Addressable Resource (by publisher)
    description: Example - http://localhost:48081/api/v1/addressable/publisher/DELLPUB (where DELLPUB is an Addressable publisher)
    uriParameters:
        publisher:
            displayName: publisher
            description: publisher name (as in MQTT publisher)
            type: string
            required: false
            repeat: false
    get:
        description: Return Addressable objects with given publisher. List may be empty if none are associated to the publisher. Returns ServiceException (HTTP 503) for unknown or unanticipated issues.
        displayName: get addressable by publisher
        responses:
            "200":
                description: list of addressable matching publisher
                body:
                    application/json:
                        schema: addressable
                        example: '[{"id":"57bb2bca555e5218873e5a17","created":1471884234787,"modified":1471884234787,"origin":1471806386919,"name":"hvac thermo address2","protocol":"TCP","address":"172.17.0.1","port":60601,"path":"none","publisher":"DELLPUB","user":"dell","password":"abc123","topic":"thermodata","method":"GET"}]'
            "503":
                description: for unknown or unanticipated issues.
/addressable/address/{address}:
    displayName: Addressable Resource (by address)
    description: Example - http://localhost:48081/api/v1/addressable/address/172.17.0.1
    uriParameters:
        address:
            displayName: address
            description: address (as in URL address)
            type: string
            required: false
            repeat: false
    get:
        description: Return Addressable objects with given address. List may be empty if none are associated to the address. Returns ServiceException (HTTP 503) for unknown or unanticipated issues.
        displayName: get addressable by address
        responses:
            "200":
                description: list of addressable matching address
                body:
                    application/json:
                        schema: addressable
                        example: '[{"id":"57bb2b08555e5218873e5a15","created":1471884040857,"modified":1471884040857,"origin":1471806386919,"name":"hvac thermo address","protocol":"HTTP","address":"172.17.0.1","port":48089,"path":"/livingroomthermostat","publisher":"none","user":"none","password":"none","topic":"none"},{"id":"57bb2bca555e5218873e5a17","created":1471884234787,"modified":1471884234787,"origin":1471806386919,"name":"hvac thermo address2","protocol":"TCP","address":"172.17.0.1","port":60601,"path":"none","publisher":"DELLPUB","user":"dell","password":"abc123","topic":"thermodata","method":"GET"}]'
            "503":
                description: for unknown or unanticipated issues.
/addressable:
    displayName: Addressable Resource
    description: "Example - http://localhost:48081/api/v1/addressable"
    post:
        description: Add a new Addressable - name must be unique. Returns ServiceException (HTTP 503) for unknown or unanticipated issues.
        displayName: add addressable
        body:
            application/json:
                schema: addressable
                example: '{"origin":1471806386919,"name":"hvac thermo address","protocol":"HTTP","address":"172.17.0.1","port":48089,"path":"/livingroomthermostat","publisher":"none","user":"none","password":"none","topic":"none"}'
        responses:
            "200":
                description: new database generated id for the new Addressable
            "503":
                description: for unknown or unanticipated issues or for any duplicate name (key) error.
            "409":
                description: if the name is determined to not be unique with regard to others
    put:
        description: Update the Addressable identified by the id or name in the object provided. Id is used first, name is used second for identification purposes. Returns ServiceException (HTTP 503) for unknown or unanticipated issues. Returns NotFoundException (HTTP 404) if no addressable with the provided id is found.
        displayName: update addressable
        body:
            application/json:
                schema: addressable
                example: '{"id":"57bb276e555e5218873e5a13", "path":"/livingroomhvac"}'
        responses:
            "200":
                description: boolean indicating success of the update
            "404":
                description: if no addressable with the provided id is found.
            "503":
                description: for unknown or unanticipated issues or for any duplicate name (key) error.
    get:
        description: Return all addressable objects sorted by database generated id. Returns ServiceException (HTTP 503) for unknown or unanticipated issues. Returns LimitExceededException (HTTP 413) if the number returned exceeds the max limit.
        displayName: get all addressables
        responses:
            "200":
                description: list of addressable
                body:
                    application/json:
                        schema: addressable
                        example: '[{"id":"57bb2b08555e5218873e5a15","created":1471884040857,"modified":1471884040857,"origin":1471806386919,"name":"hvac thermo address","protocol":"HTTP","address":"172.17.0.1","port":48089,"path":"/livingroomthermostat","publisher":"none","user":"none","password":"none","topic":"none"},{"id":"57bb2bca555e5218873e5a17","created":1471884234787,"modified":1471884234787,"origin":1471806386919,"name":"hvac thermo address2","protocol":"TCP","address":"172.17.0.1","port":60601,"path":"none","publisher":"DELLPUB","user":"dell","password":"abc123","topic":"thermodata"}]'
            "413":
                description: if the number returned exceeds the max limit.
            "503":
                description: for unknown or unanticipated issues.
/command/id/{id}:
    displayName: Command Resource (by id)
    description: Example - http://localhost:48081/api/v1/command/id/57bb3195555e5218873e5a1a
    uriParameters:
        id:
            displayName: id
            description: database generated id for the Command
            type: string
            required: false
            repeat: false
    delete:
        description: Remove the Command designated by database generated id. ServiceException (HTTP 503) for unknown or unanticipated issues. NotFoundException (HTTP 404) if no Command is found with the provided id. DataValidationException (HTTP 409) if the Command is still associated to a Device Profile.
        displayName: delete the command by id
        responses:
            "200":
                description: Successful Response
            "409":
                description: if the Command is still associated to a Device Profile.
            "503":
                description: for unknown or unanticipated issues.
/command/{id}:
    displayName: Command Resource (by id)
    description: Example - http://localhost:48081/api/v1/command/57bb3195555e5218873e5a1a
    uriParameters:
        id:
            displayName: id
            type: string
            required: false
            repeat: false
    get:
        description: Fetch a specific command by database generated id. May return null if no commands with the id is found. Returns ServiceException (HTTP 503) for unknown or unanticipated issues. Returns NotFoundException (HTTP 404) if no command with the provided id is found.
        displayName: get command by id
        responses:
            "200":
                description: Successful Response
                body:
                    application/json:
                        schema: command
                        example: '{"id":"57bb3195555e5218873e5a1a","created":1471885717486,"modified":1471885944737,"origin":1471806386919,"name":"cooling point","get":{"path":"/cooling","responses":[{"code":"200","description":"ok","expectedValues":["temperature"]}]},"put":{"path":"/cooling","responses":[{"code":"200","description":"ok","expectedValues":["temperature"]}],"parameterNames":["coolingpoint"]}}'
            "404":
                description: if no command with the provided id is found.
            "503":
                description: for unknown or unanticipated issues.
/command/name/{name}:
    displayName: Command Resource
    description: Example - http://localhost:48081/api/v1/command/name/cooling point (where cooling point is the name of a command)
    uriParameters:
        name:
            displayName: name
            type: string
            required: false
            repeat: false
    get:
        description: Return Command objects with given name. Name is not unique for all of EdgeX but is unique per any associated Device Profile. Returns ServiceException (HTTP 503) for unknown or unanticipated issues.
        displayName: get commands by name
        responses:
            "200":
                description: Successful Response
                body:
                    application/json:
                        schema: command
                        example: '[{"id":"57bb3195555e5218873e5a1a","created":1471885717486,"modified":1471885944737,"origin":1471806386919,"name":"cooling point","get":{"path":"/cooling","responses":[{"code":"200","description":"ok","expectedValues":["temperature"]}]},"put":{"path":"/cooling","responses":[{"code":"200","description":"ok","expectedValues":["temperature"]}],"parameterNames":["coolingpoint"]}}]'
            "503":
                description: for unknown or unanticipated issues.
/command:
    displayName: Command Resource
    description: Example - http://localhost:48081/api/v1/command
    post:
        description: Add a new Command. Returns ServiceException (HTTP 503) for unknown or unanticipated issues.
        displayName: add command
        body:
            application/json:
                schema: command
                example: '{"origin":1471806386919,"name":"cooling point","get":{"path":"/cooling","responses":[{"code":"200","description":"ok","expectedValues":["temperature"]}]},"put":{"path":"/cooling", "responses":[{"code":"200","description":"ok","expectedValues":["temperature"]}], "parameterNames":["coolingpoint"]}}'
        responses:
            "200":
                description: database generated id for the new command
            "503":
                description: for unknown or unanticipated issues.
    put:
        description: Update the Command identified by the database generated id in the object provided. Returns ServiceException (HTTP 503) for unknown or unanticipated issues. NotFoundException (HTTP 404) if no Command is found with the provided id. DataValidationException (HTTP 409) if the name is updated and it is not unique for the Device Profile.
        displayName: update command
        body:
            application/json:
                schema: command
                example: '{"id":"57bb3195555e5218873e5a1a","put":{"path":"/cooling", "responses":[{"code":"200","description":"ok","expectedValues":["temperature"]}], "parameterNames":["coolingpoint"]}}'
        responses:
            "200":
                description: Successful Response
            "404":
                description: if no Command is found with the provided id.
            "409":
                description: if the name is updated and it is not unique for the Device Profile.
            "503":
                description: for unknown or unanticipated issues.
    get:
        description: Return all command objects. Returns ServiceException (HTTP 503) for unknown or unanticipated issues. Returns LimitExceededException (HTTP 413) if the number returned exceeds the max limit.
        displayName: get all commands
        responses:
            "200":
                description: Successful Response
                body:
                    application/json:
                        schema: command
                        example: '[{"id":"57bb3195555e5218873e5a1a","created":1471885717486,"modified":1471885717486,"origin":1471806386919,"name":"cooling point","get":{"path":"/cooling","responses":[{"code":"200","description":"ok","expectedValues":["temperature"]}]},"put":{"path":"/cooling","responses":[{"code":"200","description":"ok","expectedValues":["temperature"]}],"parameterNames":["coolingpoint"]}}]'
            "413":
                description: if the number returned exceeds the max limit.
