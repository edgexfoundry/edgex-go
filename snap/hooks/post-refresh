#!/bin/bash -e

# load appropriate env vars so we can use jq here
# shellcheck source=/dev/null
source "$SNAP/bin/hooks-env-setup.sh"

# the new revisions use vault-config.hcl as the vault config instead of 
# vault-config.json as previously was used
# so all we do is check if that file exists and the new hcl file doesn't exist
# and if it does then we move it
# see https://github.com/edgexfoundry/security-secret-store/issues/66
VAULT_CONFIG_FILE="$SNAP_DATA/config/security-secret-store/vault-config"
if [ -f "$VAULT_CONFIG_FILE.json" ] && [ ! -f "$VAULT_CONFIG_FILE.hcl" ] ; then
    mv "$VAULT_CONFIG_FILE.json" "$VAULT_CONFIG_FILE.hcl"
fi

# if the lastrevision has a value, it means that the previous revision
# was new enough to use the current symlink, and as such doesn't need
# processing
if [ -n "$(snapctl get lastrev)" ]; then
    exit 0
fi

# if however the previous revision wasn't set, we know that the previous 
# revision would have used absolute paths for things like $SNAP_DATA to
# and are now incorrect, and so we should update relevant values to use the 
# current symlink intead
# see https://github.com/edgexfoundry/edgex-go/issues/799#issuecomment-480318857
# for full details

# the full set of previous config items that would have been set as verbatim 
# $SNAP_DATA
# * $SNAP_DATA/config/config-seed/res/properties/edgex-support-rulesengine/application.properties:
#     $SNAP_DATA/support-rulesengine/rules
#     $SNAP_DATA/support-rulesengine/templates
# * $SNAP_DATA/config/security-secret-store/res/configuration.toml:
#     $SNAP_DATA/vault/pki
#     tokenfolderpath = "$SNAP_DATA/config/security-secret-store/res"
# * $SNAP_DATA/config/security-api-gateway/res/configuration.toml:
#     tokenpath = "$SNAP_DATA/config/security-api-gateway/res/kong-token.json"
# * $SNAP_DATA/config/security-secret-store/vault-config.hcl
#     tls_client_ca_file ="$SNAP_DATA/vault/pki/EdgeXFoundryCA/EdgeXFoundryTrustCA.pem"
#     tls_cert_file ="$SNAP_DATA/vault/pki/EdgeXFoundryCA/localhost.pem"
#     tls_key_file = "$SNAP_DATA/vault/pki/EdgeXFoundryCA/localhost.priv.key"
# * $SNAP_DATA/config/security-api-gateway/kong.conf
#     prefix = $SNAP_DATA/kong
# * $SNAP_DATA/config/security-secret-store/pkisetup-kong.json
#     working_dir: $SNAP_DATA/vault
# * $SNAP_DATA/config/security-secret-store/pkisetup-vault.json
#     working_dir: $SNAP_DATA/vault
# * $SNAP_DATA/config/sys-mgmt-agent/configuration.toml:
#     ExecutorPath = "$SNAP/bin/sys-mgmt-agent-snap-executor.sh"

# snap setup dirs
SNAP_DATA_CURRENT=${SNAP_DATA/%$SNAP_REVISION/current}
SNAP_CURRENT=${SNAP/%$SNAP_REVISION/current}
SNAP_DATA_DIR=$(dirname "$SNAP_DATA")
SNAP_DIR=$(dirname "$SNAP")

RULES_ENGINE_PROP_FILE="$SNAP_DATA/config/config-seed/res/properties/edgex-support-rulesengine/application.properties"
if [ -f "$RULES_ENGINE_PROP_FILE" ]; then
    sed -i \
        -e "s@$SNAP_DATA_DIR/[0-9]*/support-rulesengine/rules@$SNAP_DATA_CURRENT/support-rulesengine/rules@" \
        -e "s@$SNAP_DATA_DIR/[0-9]*/support-rulesengine/templates@$SNAP_DATA_CURRENT/support-rulesengine/templates@" \
        "$RULES_ENGINE_PROP_FILE"
fi

SECRET_STORE_CONFIG="$SNAP_DATA/config/security-secret-store/res/configuration.toml"
if [ -f "$SECRET_STORE_CONFIG" ]; then
    sed -i \
        -e "s@$SNAP_DATA_DIR/[0-9]*/vault/pki@$SNAP_DATA_CURRENT/vault/pki@" \
        -e "s@$SNAP_DATA_DIR/[0-9]*/config/security-secret-store/res@$SNAP_DATA_CURRENT/config/security-secret-store/res@" \
        "$SECRET_STORE_CONFIG"
fi

SYS_MGMT_AGENT_CONFIG="$SNAP_DATA/config/sys-mgmt-agent/res/configuration.toml"
if [ -f "$SYS_MGMT_AGENT_CONFIG" ]; then
    sed -i \
        -e "s@$SNAP_DIR/[0-9]*/bin/sys-mgmt-agent-snap-executor.sh@$SNAP_CURRENT/bin/sys-mgmt-agent-snap-executor.sh@" \
        "$SYS_MGMT_AGENT_CONFIG"
fi

API_GATEWAY_CONFIG="$SNAP_DATA/config/security-api-gateway/res/configuration.toml"
if [ -f "$API_GATEWAY_CONFIG" ]; then
    sed -i \
        -e "s@$SNAP_DATA_DIR/[0-9]*/config/security-api-gateway/res/kong-token.json@$SNAP_DATA_CURRENT/config/security-api-gateway/res/kong-token.json@" \
        "$API_GATEWAY_CONFIG"
fi

if [ -f "$VAULT_CONFIG_FILE.hcl" ]; then
    sed -i \
        -e "s@$SNAP_DATA_DIR/[0-9]*/vault/pki/EdgeXFoundryCA/EdgeXFoundryTrustCA.pem@$SNAP_DATA_CURRENT/vault/pki/EdgeXFoundryCA/EdgeXFoundryTrustCA.pem@" \
        -e "s@$SNAP_DATA_DIR/[0-9]*/vault/pki/EdgeXFoundryCA/localhost.pem@$SNAP_DATA_CURRENT/vault/pki/EdgeXFoundryCA/localhost.pem@" \
        -e "s@$SNAP_DATA_DIR/[0-9]*/vault/pki/EdgeXFoundryCA/localhost.priv.key@$SNAP_DATA_CURRENT/vault/pki/EdgeXFoundryCA/localhost.priv.key@" \
        "$VAULT_CONFIG_FILE.hcl"
fi

KONG_CONF="$SNAP_DATA/config/security-api-gateway/kong.conf"
if [ -f "$KONG_CONF" ]; then
    sed -i \
        -e "s@$SNAP_DATA_DIR/[0-9]*/kong@$SNAP_DATA_CURRENT/kong@" \
        "$KONG_CONF"
fi

PKISETUP_CONFIG_DIR=$SNAP_DATA/config/security-secret-store
PKI_VAULT_FILE="$PKISETUP_CONFIG_DIR/pkisetup-vault.json"
if [ -f "$PKI_VAULT_FILE" ]; then
    # with jq we can directly check if the setting for working_dir matches the
    # regex for the previous revision $SNAP_DATA
    # only then do we update it
    if [ "$(jq -r --arg REGEX "$SNAP_DATA_DIR/[0-9]+/vault" '.working_dir | test($REGEX)' < "$PKI_VAULT_FILE" )"  = "true" ]; then
        # modify the parameters using jq
        jq --arg WORKDIR "$SNAP_DATA_CURRENT/vault" '.working_dir  = $WORKDIR' \
            < "$PKI_VAULT_FILE" > "$PKI_VAULT_FILE.tmp"
        mv "$PKI_VAULT_FILE.tmp" "$PKI_VAULT_FILE"
    fi
fi

PKI_KONG_FILE="$PKISETUP_CONFIG_DIR/pkisetup-kong.json"
if [ -f "$PKI_KONG_FILE" ]; then
    # with jq we can directly check if the setting for working_dir matches the
    # regex for the previous revision $SNAP_DATA
    # only then do we update it
    if [ "$(jq -r --arg REGEX "$SNAP_DATA_DIR/[0-9]+/vault" '.working_dir | test($REGEX)' < "$PKI_KONG_FILE" )"  = "true" ]; then
        # update the working_dir
        jq --arg WORKDIR "$SNAP_DATA_CURRENT/vault" '.working_dir  = $WORKDIR' \
            < "$PKI_KONG_FILE" > "$PKI_KONG_FILE.tmp"
        mv "$PKI_KONG_FILE.tmp" "$PKI_KONG_FILE"
    fi
fi
