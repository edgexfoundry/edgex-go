#!/bin/bash -e

# install all the config files from $SNAP/config/SERVICE/res/configuration.toml 
# into $SNAP_DATA/config
mkdir -p ${SNAP_DATA}/config
for service in security-api-gateway core-command config-seed core-data core-metadata export-client export-distro support-logging support-notifications support-scheduler sys-mgmt-agent; do
    if [ ! -f "${SNAP_DATA}/config/${service}/res/configuration.toml" ]; then
        mkdir -p "${SNAP_DATA}/config/${service}/res"
        cp ${SNAP}/config/${service}/res/configuration.toml "${SNAP_DATA}/config/${service}/res/configuration.toml"
        # do replacement of the SNAP_DATA and SNAP_COMMON environment variables in the config files
        sed -i -e "s@\$SNAP_COMMON@$SNAP_COMMON@g" -e "s@\$SNAP_DATA@$SNAP_DATA@g" "${SNAP_DATA}/config/${service}/res/configuration.toml"
    fi
done

# also handle config-seed/device-virtual/application.properties
if [ ! -f "${SNAP_DATA}/config/config-seed/res/properties/device-virtual/application.properties" ]; then
    mkdir -p "${SNAP_DATA}/config/config-seed/res/properties/device-virtual"
    cp "${SNAP}/config/config-seed/res/properties/device-virtual/application.properties" "${SNAP_DATA}/config/config-seed/res/properties/device-virtual/application.properties"
fi

# for the pki setup files from security services, we replace the password at install time with a psuedorandomly generated password from openssl
# this isn't 100% secure, but it's unlikely that people will change the default password on initial install
# and so generating a unique one at install time ensures that all snap installs don't suffer from a 
# default password vulnerability for the certificates
# additionally this file is installed into $SNAP_DATA with only owner read attributes, so the password can only be read by root
for tlsEnvFile in pki-setup-config-kong.env pki-setup-config-vault.env; do
    if [ ! -f "${SNAP_DATA}/config/security-secret-store/${tlsEnvFile}" ]; then
        mkdir -p ${SNAP_DATA}/config/security-secret-store
        newpw=$(openssl rand -base64 32)
        cp ${SNAP}/config/security-secret-store/${tlsEnvFile} "${SNAP_DATA}/config/security-secret-store/${tlsEnvFile}"
        sed -i "s@PKCS12_PASSWORD=\"s3cr3tp4th\"@PKCS12_PASSWORD=\"$newpw\"@g" "${SNAP_DATA}/config/security-secret-store/${tlsEnvFile}"

        # these 2 sed command make look contradictory, but the kong env file will have HOST=edgex-kong, and the vault
        # env file will have HOST=edgex-vault, so only one of these will actually do anything
        sed -i "s@HOST=edgex-kong@HOST=localhost@" "${SNAP_DATA}/config/security-secret-store/${tlsEnvFile}"
        sed -i "s@HOST=edgex-vault@HOST=localhost@" "${SNAP_DATA}/config/security-secret-store/${tlsEnvFile}"
        chmod 600 "${SNAP_DATA}/config/security-secret-store/${tlsEnvFile}"
    fi
done

# ensure vault setup directories exist
for dir in vault vault/pki vault/file; do
    if [ ! -d "${SNAP_DATA}/$dir" ]; then
        mkdir -p "${SNAP_DATA}/$dir"
    fi
done

# the vault config needs to be generated with sed, replacing $SNAP_DATA in the file 
# with the actual absolute directory
# note that if anyone ever somehow has a "@" in their $SNAP_DATA this will likely break :-/
if [ ! -f "${SNAP_DATA}/config/security-secret-store/vault-config.json" ]; then
    mkdir -p ${SNAP_DATA}/config/security-secret-store
    sed "s@\$SNAP_DATA@$SNAP_DATA@g" ${SNAP}/config/security-secret-store/vault-config.json.in > ${SNAP_DATA}/config/security-secret-store/vault-config.json
    chmod 644 ${SNAP_DATA}/config/security-secret-store/vault-config.json
fi

# the kong config file needs to be generated with 3 changes from the default one included in the snap
# - we set the prefix to be $SNAP_DATA/kong as an absolute path (note that this has to be done here in the install hook)
# - we set the nginx user to be root
# - we set the database used to cassandra
if [ ! -f ${SNAP_DATA}/config/security-api-gateway/kong.conf ]; then
    mkdir -p "${SNAP_DATA}/config/security-api-gateway"
    cp "${SNAP}/config/security-api-gateway/kong.conf" "${SNAP_DATA}/config/security-api-gateway/kong.conf"
    # replace the default prefix setting with an absolute path using $SNAP_DATA
    # note that if anyone ever has a "@" in their $SNAP_DATA this will likely fail
    sed -i "s@#prefix = /usr/local/kong/@prefix = ${SNAP_DATA}/kong@" ${SNAP_DATA}/config/security-api-gateway/kong.conf

    # also replace the default nginx user/group to be root
    sed -i "s@#nginx_user = nobody nobody@nginx_user = root root@" ${SNAP_DATA}/config/security-api-gateway/kong.conf

    # finally set the make database to be cassandra
    sed -i "s@#database = postgres@database = cassandra@" ${SNAP_DATA}/config/security-api-gateway/kong.conf
fi

# finally, disable services in the snap that aren't meant to come up by default
# by default, we want the export-*, support-*, and device-virtual services off
for svc in export-distro export-client support-notifications support-scheduler support-logging device-virtual; do
    snapctl stop --disable edgexfoundry.$svc
done
