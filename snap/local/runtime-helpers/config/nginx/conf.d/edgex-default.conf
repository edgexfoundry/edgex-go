#
# Copyright (C) Intel Corporation 2023
# SPDX-License-Identifier: Apache-2.0
#

# generated 2023-01-19, Mozilla Guideline v5.6, nginx 1.17.7, OpenSSL 1.1.1k, modern configuration, no HSTS, no OCSP
# https://ssl-config.mozilla.org/#server=nginx&version=1.17.7&config=modern&openssl=1.1.1k&hsts=false&ocsp=false&guideline=5.6
server {
    listen 127.0.0.1:8000;  # Snap listen insecure on localhost only
    listen 8443 ssl;

    ssl_certificate "/var/snap/edgexfoundry/current/nginx/nginx.crt";
    ssl_certificate_key "/var/snap/edgexfoundry/current/nginx/nginx.key";
    ssl_session_tickets off;

    access_log syslog:server=unix:/dev/log,tag=edgexfoundry;

    # Subrequest authentication

    location /auth {
      internal;
      proxy_pass              http://127.0.0.1:59842;
      proxy_redirect          off;
      proxy_set_header        Host $host;
      proxy_set_header        Content-Length "";
      proxy_set_header        X-Forwarded-URI $request_uri;
      proxy_pass_request_body off;
    }

    # Rewriting rules (customized for snaps)

    location /core-data {
      rewrite            /core-data/(.*) /$1 break;
      proxy_pass         http://127.0.0.1:59880;
      proxy_redirect     off;
      proxy_set_header   Host $host;
      auth_request       /auth;
      auth_request_set   $auth_status $upstream_status;
    }


    location /core-metadata {
      rewrite            /core-metadata/(.*) /$1 break;
      proxy_pass         http://127.0.0.1:59881;
      proxy_redirect     off;
      proxy_set_header   Host $host;
      auth_request       /auth;
      auth_request_set   $auth_status $upstream_status;
    }


    location /core-command {
      rewrite            /core-command/(.*) /$1 break;
      proxy_pass         http://127.0.0.1:59882;
      proxy_redirect     off;
      proxy_set_header   Host $host;
      auth_request       /auth;
      auth_request_set   $auth_status $upstream_status;
    }


    location /support-notifications {
      rewrite            /support-notifications/(.*) /$1 break;
      proxy_pass         http://127.0.0.1:59860;
      proxy_redirect     off;
      proxy_set_header   Host $host;
      auth_request       /auth;
      auth_request_set   $auth_status $upstream_status;
    }


    location /support-scheduler {
      rewrite            /support-scheduler/(.*) /$1 break;
      proxy_pass         http://127.0.0.1:59861;
      proxy_redirect     off;
      proxy_set_header   Host $host;
      auth_request       /auth;
      auth_request_set   $auth_status $upstream_status;
    }

    location /app-rules-engine {
      rewrite            /app-rules-engine/(.*) /$1 break;
      proxy_pass         http://127.0.0.1:59701;
      proxy_redirect     off;
      proxy_set_header   Host $host;
      auth_request       /auth;
      auth_request_set   $auth_status $upstream_status;
    }

    location /rules-engine {
      rewrite            /rules-engine/(.*) /$1 break;
      proxy_pass         http://127.0.0.1:59720;
      proxy_redirect     off;
      proxy_set_header   Host $host;
      auth_request       /auth;
      auth_request_set   $auth_status $upstream_status;
    }

    # Note: Consul implements its own authentication mechanism (only allow API, /v1, through)
    location /consul/v1 {
      rewrite            /consul/(.*) /$1 break;
      proxy_pass         http://127.0.0.1:8500;
      proxy_redirect     off;
      proxy_set_header   Host $host;
    }

    # Note: Vault login API does not require authentication at the gateway for obvious reasons
    # Expose URLs to log in to vault and to get a JWT
    location /vault/v1/auth/userpass/login {
      rewrite            /vault/(.*) /$1 break;
      proxy_pass         http://127.0.0.1:8200;
      proxy_redirect     off;
      proxy_set_header   Host $host;
    }
    location /vault/v1/identity/oidc/token {
      rewrite            /vault/(.*) /$1 break;
      proxy_pass         http://127.0.0.1:8200;
      proxy_redirect     off;
      proxy_set_header   Host $host;
    }

    include /var/snap/edgexfoundry/current/nginx/conf.d/edgex-custom-rewrites.inc;

}

# Don't output NGINX version in Server: header
server_tokens off;
