openapi: 3.0.0
info:
  title: Edgex Foundry - Core Metadata API
  description: "This is the definition of the API for the Core Metadata service in the EdgeX Foundry IOT microservice platform. Core Metadata is responsible for all information related to provisioned devices and their associated services."
  version: 3.0.0
servers:
  - url: 'http://localhost:59881/api/v3'
    description: URL for local development and testing
components:
  schemas:
    AddDeviceRequest:
      allOf:
        - $ref: '#/components/schemas/BaseRequest'
      description: "A request to add a new device associated with a specific device service and conforming to a specific device profile."
      type: object
      properties:
        device:
          $ref: '#/components/schemas/CreateDevice'
      required:
        - device
    AddDeviceProfileRequest:
      allOf:
        - $ref: '#/components/schemas/BaseRequest'
      description: "A request to add a new device profile. When making this request, the ID property should not be populated."
      type: object
      properties:
        profile:
          $ref: '#/components/schemas/CreateDeviceProfile'
      required:
        - profile
    AddDeviceServiceRequest:
      allOf:
        - $ref: '#/components/schemas/BaseRequest'
      description: "A request to add a new DeviceService - name must be unique"
      type: object
      properties:
        service:
          $ref: '#/components/schemas/CreateDeviceService'
      required:
        - service
    AddProvisionWatcherRequest:
      allOf:
        - $ref: '#/components/schemas/BaseRequest'
      description: "A request to add a new ProvisionWatcher.  When making this request, the ID property should not be populated."
      type: object
      properties:
        provisionwatcher:
          $ref: '#/components/schemas/CreateProvisionWatcher'
      required:
        - provisionwatcher
    AutoEvent:
      type: object
      properties:
        interval:
          type: string
          description: Interval indicates how often the specific resource needs to be polled. It represents as a duration string. The format of this field is to be an unsigned integer followed by a unit which may be "ns", "us" (or "Âµs"), "ms", "s", "m", "h" representing nanoseconds, microseconds, milliseconds, seconds, minutes or hours. Eg, "100ms", "24h"
        onChange:
          type: boolean
          description: OnChange indicates whether the device service will generate an event only, if the reading value is different from the previous one. If true, only generate events when readings change
        sourceName:
          type: string
          description: SourceName indicates the name of the resource or device command in the device profile which describes the event to generate
      required:
        - interval
        - resource
    BaseRequest:
      description: "Defines basic properties which all use-case specific request DTO instances should support."
      type: object
      properties:
        requestId:
          description: "Uniquely identifies this request. For implementation, recommend this value be generated by the type's constructor."
          type: string
          format: uuid
          example: "e6e8a2f4-eb14-4649-9e2b-175247911369"
        apiVersion:
          description: "A version number shows the API version in DTOs."
          type: string
          example: v3
      required:
        - apiVersion
    BaseResponse:
      description: "Defines basic properties which all use-case specific response DTO instances should support"
      type: object
      properties:
        apiVersion:
          description: "A version number shows the API version in DTOs."
          type: string
        requestId:
          description: "Uniquely identifies the request that resulted in this response."
          type: string
          format: uuid
          example: "e6e8a2f4-eb14-4649-9e2b-175247911369"
        statusCode:
          description: "A numeric code signifying the operational status of the response."
          type: integer
    BaseWithIdResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
      description: "Defines basic properties which all use-case specific response DTO instances should support"
      type: object
      properties:
        id:
          description: "The unique identifier for the instance."
          type: string
          format: uuid
    BaseWithTotalCountResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
      description: "Defines basic properties which all use-case specific response DTO instances should support"
      type: object
      properties:
        totalCount:
          description: "The total count of all multi instances."
          type: integer
    Device:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: ID uniquely identifies the device, a UUID for example
        created:
          type: integer
          description: Created is a timestamp indicating when the entity was created.
        modified:
          type: integer
          description: Modified is a timestamp indicating when the entity was last modified.
        name:
          type: string
          description: Unique name for identifying a device
        description:
          type: string
        adminState:
          type: string
          description: Admin state
          enum:
            - LOCKED
            - UNLOCKED
        operatingState:
          type: string
          description: Operating state
          enum:
            - UP
            - DOWN
            - UNKNOWN
        labels:
          type: array
          description: Other labels applied to the device to help with searching
          items:
            type: string
        location:
          type: object
          description: Device service specific location (interface{} is an empty interface so it can be anything)
        serviceName:
          type: string
          description: Associated Device Service - One per device
        profileName:
          type: string
          description: Associated Device Profile - Describes the device
        autoEvents:
          type: array
          description: A list of auto-generated events coming from the device
          items:
            $ref: '#/components/schemas/AutoEvent'
        protocols:
          type: object
          description: A map of supported protocols for the given device
          additionalProperties:
            $ref: '#/components/schemas/ProtocolProperties'
        tags:
          type: object
          description: A map of tags used to tag the given device
        properties:
          type: object
          description: A map of properties required to address the given device
    CreateDevice:
      type: object
      properties:
        name:
          type: string
          description: Unique name for identifying a device
        description:
          type: string
        adminState:
          type: string
          description: Admin state
          enum:
            - LOCKED
            - UNLOCKED
        operatingState:
          type: string
          description: Operating state
          enum:
            - UP
            - DOWN
            - UNKNOWN
        labels:
          type: array
          description: Other labels applied to the device to help with searching
          items:
            type: string
        location:
          type: object
          description: Device service specific location (interface{} is an empty interface so it can be anything)
        serviceName:
          type: string
          description: Associated Device Service - One per device
        profileName:
          type: string
          description: Associated Device Profile - Describes the device
        autoEvents:
          type: array
          description: A list of auto-generated events coming from the device
          items:
            $ref: '#/components/schemas/AutoEvent'
        protocols:
          type: object
          description: A map of supported protocols for the given device
          additionalProperties:
            $ref: '#/components/schemas/ProtocolProperties'
        tags:
          type: object
          description: A map of tags used to tag the given device
        properties:
          type: object
          description: A map of properties required to address the given device
      required:
        - name
        - adminState
        - operatingState
        - serviceName
        - profileName
        - protocols
    UpdateDevice:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: ID uniquely identifies the device, a UUID for example
        name:
          type: string
          description: Unique name for identifying a device
        description:
          type: string
          description: Description of the device
        adminState:
          type: string
          description: Admin state (locked/unlocked)
        operatingState:
          type: string
          description: Operating state (enabled/disabled)
        labels:
          type: array
          description: Other labels applied to the device to help with searching
          items:
            type: string
        location:
          type: object
          description: Device service specific location (interface{} is an empty interface so it can be anything)
        serviceName:
          type: string
          description: Associated Device Service - One per device
        profileName:
          type: string
          description: Associated Device Profile - Describes the device
        autoEvents:
          type: array
          description: A list of auto-generated events coming from the device
          items:
            $ref: '#/components/schemas/AutoEvent'
        protocols:
          type: object
          description: A map of supported protocols for the given device
          additionalProperties:
            $ref: '#/components/schemas/ProtocolProperties'
        tags:
          type: object
          description: A map of tags used to tag the given device
        properties:
          type: object
          description: A map of properties required to address the given device

    DeviceProfileBasicInfo:
      description: "A profile basic information"
      type: object
      properties:
        name:
          type: string
          description: Non-database identifier (must be unique)
        description:
          type: string
          description: Description
        manufacturer:
          type: string
          description: Manufacturer of the device
        model:
          type: string
          description: Model of the device
        labels:
          type: array
          description: Labels used to search for groups of profiles
          items:
            type: string
    DeviceProfileBasicInfoRequest:
      description: "Update basic information of an existing profile"
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseRequest'
      properties:
        basicinfo:
          $ref: '#/components/schemas/DeviceProfileBasicInfo'
      required:
        - profileName
    DeviceProfile:
      description: "A profile defining a class of device to be onboarded, including its capabilities and data format."
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: ID uniquely identifies the device profile, a UUID for example
        name:
          type: string
          description: Non-database identifier (must be unique)
        description:
          type: string
          description: Description.
        created:
          type: integer
          description: Created is a timestamp indicating when the entity was created.
        modified:
          type: integer
          description: Modified is a timestamp indicating when the entity was last modified.
        manufacturer:
          type: string
          description: Manufacturer of the device
        model:
          type: string
          description: Model of the device
        labels:
          type: array
          description: Labels used to search for groups of profiles
          items:
            type: string
        deviceResources:
          type: array
          items:
            $ref: '#/components/schemas/DeviceResource'
        deviceCommands:
          type: array
          items:
            $ref: '#/components/schemas/DeviceCommand'
    CreateDeviceProfile:
      description: "A profile defining a class of device to be onboarded, including its capabilities and data format."
      type: object
      allOf:
        - $ref: '#/components/schemas/DeviceProfileBasicInfo'
      properties:
        deviceResources:
          type: array
          items:
            $ref: '#/components/schemas/DeviceResource'
        deviceCommands:
          type: array
          items:
            $ref: '#/components/schemas/DeviceCommand'
      required:
        - name
    UpdateDeviceProfile:
      description: "A profile defining a class of device to be onboarded, including its capabilities and data format."
      type: object
      allOf:
        - $ref: '#/components/schemas/DeviceProfileBasicInfo'
      properties:
        id:
          type: string
          format: uuid
          description: ID uniquely identifies the device profile, a UUID for example
        deviceResources:
          type: array
          items:
            $ref: '#/components/schemas/DeviceResource'
        deviceCommands:
          type: array
          items:
            $ref: '#/components/schemas/DeviceCommand'
    DeviceProfileResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
      type: object
      properties:
        profile:
          $ref: '#/components/schemas/DeviceProfile'
    MultiDeviceProfilesResponse:
      allOf:
        - $ref: '#/components/schemas/BaseWithTotalCountResponse'
      type: object
      properties:
        profiles:
          type: array
          items:
            $ref: '#/components/schemas/DeviceProfile'
    DeviceResource:
      description: "DeviceResource represents a value on a device that can be read or written."
      type: object
      properties:
        description:
          type: string
        name:
          type: string
        isHidden:
          type: boolean
          description: "Indicate the visibility of the DeviceResource via a CoreCommand."
        tag:
          type: string
        properties:
          $ref: '#/components/schemas/ResourceProperties'
        attributes:
          type: object
          description: Each Device Service should define required and optional keys
          additionalProperties:
            type: string
      required:
        - name
    UpdateDeviceResource:
      description: "UpdateDeviceResource represents a value on a device resource that can be read or written."
      type: object
      properties:
        description:
          type: string
        name:
          type: string
        isHidden:
          type: boolean
          description: "Indicate the visibility of the DeviceResource via a CoreCommand."
      required:
        - name
    DeviceResourceRequest:
      allOf:
        - $ref: '#/components/schemas/BaseRequest'
      type: object
      properties:
        profileName:
          type: string
          description: "The unique name of a device profile"
        resource:
          $ref: '#/components/schemas/DeviceResource'
      required:
        - profileName
        - resource
    UpdateDeviceResourceRequest:
      allOf:
        - $ref: '#/components/schemas/BaseRequest'
      type: object
      properties:
        profileName:
          type: string
          description: "The unique name of a device profile"
        resource:
          $ref: '#/components/schemas/UpdateDeviceResource'
      required:
        - profileName
        - resource
    DeviceResourceResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
      type: object
      properties:
        resource:
          $ref: '#/components/schemas/DeviceResource'
    DeviceResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
      type: object
      properties:
        device:
          $ref: '#/components/schemas/Device'
    MultiDevicesResponse:
      allOf:
        - $ref: '#/components/schemas/BaseWithTotalCountResponse'
      type: object
      properties:
        devices:
          type: array
          items:
            $ref: '#/components/schemas/Device'
    DeviceService:
      description: "A DeviceService is responsible for proxying connectivity between a set of devices and the EdgeX Foundry core services."
      type: object
      properties:
        created:
          type: integer
          description: Created is a timestamp indicating when the entity was created.
        modified:
          type: integer
          description: Modified is a timestamp indicating when the entity was last modified.
        description:
          type: string
        id:
          type: string
          format: uuid
          description: ID uniquely identifies the device, a UUID for example
        name:
          type: string
          description: Description of the device service
        labels:
          type: array
          description: tags or other labels applied to the device service for search or other identification needs
          items:
            type: string
        baseAddress:
          type: string
          description: BaseAddress is a fully qualified URI, e.g. <protocol>:\\<hostname>:<port>/<optional path>
        adminState:
          type: string
          description: Device Service Admin State
          enum:
            - LOCKED
            - UNLOCKED
      required:
        - name
        - adminState
        - baseAddress
    CreateDeviceService:
      description: "A DeviceService is responsible for proxying connectivity between a set of devices and the EdgeX Foundry core services."
      type: object
      properties:
        name:
          type: string
          description: Description of the device service
        description:
          type: string
        adminState:
          type: string
          description: Device Service Admin State
          enum:
            - LOCKED
            - UNLOCKED
        labels:
          type: array
          description: tags or other labels applied to the device service for search or other identification needs
          items:
            type: string
        baseAddress:
          type: string
          description: BaseAddress is a fully qualified URI, e.g. <protocol>:\\<hostname>:<port>/<optional path>
      required:
        - name
        - adminState
        - baseAddress
    UpdateDeviceService:
      description: "A DeviceService is responsible for proxying connectivity between a set of devices and the EdgeX Foundry core services."
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: ID uniquely identifies the device, a UUID for example
        name:
          type: string
          description: Description of the device service
        labels:
          type: array
          description: tags or other labels applied to the device service for search or other identification needs
          items:
            type: string
        baseAddress:
          type: string
          description: BaseAddress is a fully qualified URI, e.g. <protocol>:\\<hostname>:<port>/<optional path>
        adminState:
          type: string
          description: Device Service Admin State
    DeviceServiceResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
      type: object
      properties:
        service:
          $ref: '#/components/schemas/DeviceService'
    MultiDeviceServicesResponse:
      allOf:
        - $ref: '#/components/schemas/BaseWithTotalCountResponse'
      type: object
      properties:
        services:
          type: array
          items:
            $ref: '#/components/schemas/DeviceService'
    ProvisionWatcher:
      description: "A ProvisionWatcher defines the filtering criteria for device auto discovery."
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: ID uniquely identifies the provision watcher, a UUID for example
        name:
          type: string
          description: Non-database identifier (must be unique)
        created:
          type: integer
          description: Created is a timestamp indicating when the entity was created.
        modified:
          type: integer
          description: Modified is a timestamp indicating when the entity was last modified.
        labels:
          type: array
          description: Labels applied to the provision watcher to help with searching
          items:
            type: string
        identifiers:
          type: object
          description: Set of key value pairs that identify property (MAC, HTTP,...) and value to watch for (00-05-1B-A1-99-99, 10.0.0.1,...)
          additionalProperties:
            type: string
        blockingIdentifiers:
          type: object
          description: Set of key-values pairs that identify devices which will not be added despite matching on identifiers
          additionalProperties:
            type: array
            items:
              type: string
        adminState:
          type: string
          description: Admin state
          enum:
            - LOCKED
            - UNLOCKED
        discoveredDevice:
          type: object
          items:
            $ref: '#/components/schemas/DiscoveredDevice'
    CreateProvisionWatcher:
      description: "A ProvisionWatcher defines the filtering criteria for device auto discovery."
      type: object
      properties:
        name:
          type: string
          description: Non-database identifier (must be unique)
        labels:
          type: array
          description: Labels applied to the provision watcher to help with searching
          items:
            type: string
        identifiers:
          type: object
          description: Set of key value pairs that identify property (MAC, HTTP,...) and value to watch for (00-05-1B-A1-99-99, 10.0.0.1,...)
          additionalProperties:
            type: string
        blockingIdentifiers:
          type: object
          description: Set of key-values pairs that identify devices which will not be added despite matching on identifiers
          additionalProperties:
            type: array
            items:
              type: string
        adminState:
          type: string
          description: Admin state - either locked or unlocked
        discoveredDevice:
          type: object
          allOf:
            - $ref: '#/components/schemas/DiscoveredDevice'
      required:
        - name
        - identifiers
        - discoveredDevice
    UpdateProvisionWatcher:
      description: "A ProvisionWatcher defines the filtering criteria for device auto discovery."
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: ID uniquely identifies the provision watcher, a UUID for example
        name:
          type: string
          description: Non-database identifier (must be unique)
        labels:
          type: array
          description: Labels applied to the provision watcher to help with searching
          items:
            type: string
        identifiers:
          type: object
          description: Set of key value pairs that identify property (MAC, HTTP,...) and value to watch for (00-05-1B-A1-99-99, 10.0.0.1,...)
          additionalProperties:
            type: string
        blockingIdentifiers:
          type: object
          description: Set of key-values pairs that identify devices which will not be added despite matching on identifiers
          additionalProperties:
            type: array
            items:
              type: string
        adminState:
          type: string
          description: Admin state
          enum:
            - LOCKED
            - UNLOCKED
        discoveredDevice:
          type: object
          allOf:
            - $ref: '#/components/schemas/UpdateDiscoveredDevice'
    ProvisionWatcherResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
      type: object
      properties:
        provisionwatcher:
          $ref: '#/components/schemas/ProvisionWatcher'
    MultiProvisionWatchersResponse:
      allOf:
        - $ref: '#/components/schemas/BaseWithTotalCountResponse'
      type: object
      properties:
        provisionwatchers:
          type: array
          items:
            $ref: '#/components/schemas/ProvisionWatcher'
    DiscoveredDevice:
      description: "A DiscoveredDevice defines the data to be assigned on the new discovered device"
      type: object
      properties:
        profileName:
          type: string
          description: Name of the profile that should be applied to the devices available at the identifier addresses
        serviceName:
          type: string
          description: Name of the device service that new devices will be associated to
        adminState:
          type: string
          description: Admin state
          enum:
            - LOCKED
            - UNLOCKED
        autoEvents:
          type: array
          description: Autoevents that allow device service to automatically start generating data from new devices
          items:
            $ref: '#/components/schemas/AutoEvent'
        properties:
          type: object
          description: A map of properties required to address the given provision watcher
      required:
        - profileName
        - serviceName
        - adminState
    UpdateDiscoveredDevice:
      description: "A UpdateDiscoveredDevice defines the data to be assigned on the new discovered device"
      type: object
      properties:
        profileName:
          type: string
          description: Name of the profile that should be applied to the devices available at the identifier addresses
        serviceName:
          type: string
          description: Name of the device service that new devices will be associated to
        adminState:
          type: string
          description: Admin state
          enum:
            - LOCKED
            - UNLOCKED
        autoEvents:
          type: array
          description: Autoevents that allow device service to automatically start generating data from new devices
          items:
            $ref: '#/components/schemas/AutoEvent'
        properties:
          type: object
          description: A map of properties required to address the given provision watcher
    ErrorResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
      description: "A response type for returning a generic error to the caller."
      type: object
      properties:
        message:
          description: "A field that can contain a free-form message, such as an error message."
          type: string        
    ConfigResponse:
      description: "An object containing the service's configuration. Please refer the configuration documentation of each service for more details at [EdgeX Foundry Documentation](https://docs.edgexfoundry.org)."
      type: object
      properties:
        apiVersion:
          description: "A version number shows the API version in DTOs."
          type: string
        serviceName:
          description: "Outputs the name of the service the response is from"
          type: string
        config:
          description: "A string-ified representation of the service's configuration. For purposes of this specification, a string has been used since configuration structure differs from service to service."
          type: object
    PingResponse:
      type: object
      properties:
        apiVersion:
          description: "A version number shows the API version in DTOs."
          type: string
        timestamp:
          description: "Outputs the current server timestamp in RFC1123 format"
          example: "Mon, 02 Jan 2006 15:04:05 MST"
          type: string
        serviceName:
          description: "Outputs the name of the service the response is from"
          type: string
    DeviceCommand:
      description: "Defines read/write capabilities native to the device"
      type: object
      properties:
        name:
          type: string
        isHidden:
          type: boolean
          description: "Indicate the visibility of the DeviceCommand via a CoreCommand."
        readWrite:
          type: string
          description: "Read/Write Permissions set for this DeviceCommand. The value can be R, W, or RW. R enables GET command, and W enables SET command in the Core Command Service."
          enum:
            - R
            - W
            - RW
        resourceOperations:
          type: array
          items:
            $ref: '#/components/schemas/ResourceOperation'
      required:
        - name
        - readWrite
        - resourceOperations
    UpdateDeviceCommand:
      type: object
      properties:
        name:
          type: string
        isHidden:
          type: boolean
          description: "Indicate the visibility of the DeviceCommand via a CoreCommand."
      required:
        - name
    DeviceCommandRequest:
      allOf:
        - $ref: '#/components/schemas/BaseRequest'
      type: object
      properties:
        profileName:
          type: string
          description: "The unique name of a device profile"
        deviceCommand:
          $ref: '#/components/schemas/DeviceCommand'
      required:
        - profileName
        - deviceCommand
    UpdateDeviceCommandRequest:
      allOf:
        - $ref: '#/components/schemas/BaseRequest'
      type: object
      properties:
        profileName:
          type: string
          description: "The unique name of a device profile"
        deviceCommand:
          $ref: '#/components/schemas/UpdateDeviceCommand'
      required:
        - profileName
        - deviceCommand
    ResourceProperties:
      description: "Defines constraints with regard to the range of acceptable values assigned to an event reading and defined as a property within a device profile."
      type: object
      properties:
        valueType:
          type: string
          description: "Indicates the datatype of the value property"
          enum:
            - Bool
            - String
            - Uint8
            - Uint16
            - Uint32
            - Uint64
            - Int8
            - Int16
            - Int32
            - Int64
            - Float32
            - Float64
            - Binary
            - BoolArray
            - StringArray
            - Uint8Array
            - Uint16Array
            - Uint32Array
            - Uint64Array
            - Int8Array
            - Int16Array
            - Int32Array
            - Int64Array
            - Float32Array
            - Float64Array
        readWrite:
          type: string
          description: "Read/Write Permissions set for this ResourceProperties. The value can be R, W, or RW. R enables GET command, and W enables SET command in the Core Command Service."
          enum:
            - R
            - W
            - RW
        units:
          type: string
          description: A string which describes the measurement units associated with a property value  Examples include "deg/s", "degreesFarenheit", "G", or "% Relative Humidity"
        minimum:
          type: number
          description: Minimum value that can be get/set from this property
        maximum:
          type: number
          description: Maximum value that can be get/set from this property
        defaultValue:
          type: string
          description: Default value set to this property if no argument is passed. If present, should be compatible with the Type field
        mask:
          type: integer
          minimum: 0
          description: Mask to be applied prior to get/set of property. Only valid where Type is one of the integer types.
        shift:
          type: integer
          description: Shift to be applied after masking, prior to get/set of property. Only valid where Type is one of the integer types
        scale:
          type: number
          description: Multiplicative factor to be applied after shifting, prior to get/set of property. Only valid where Type is one of the integer or float types
        offset:
          type: number
          description: Additive factor to be applied after multiplying, prior to get/set of property. Only valid where Type is one of the integer or float types
        base:
          type: number
          description: 'Base for property to be applied to, leave 0 for no power operation (i.e. base ^ property: 2 ^ 10). Only valid where Type is one of the integer or float types.'
        assertion:
          type: string
          description: Required value of the property, set for checking error state.  Failing an assertion condition will mark the device with an error state
        mediaType:
          type: string
          description: A string value used to indicate the type of binary data if Type=binary
        optional:
          description: A map of optional properties for the given resource
          type: object
          additionalProperties:
            type: object
      required:
        - valueType
        - readWrite
    ProtocolProperties:
      description: A map of properties for the given protocol
      type: object
      additionalProperties:
        type: object
    ResourceOperation:
      description: "Defines an operation of which a device is capable."
      type: object
      properties:
        deviceResource:
          type: string
          description: The replacement of Object field. Must name a DeviceResource in this profile
        defaultValue:
          type: string
          description: If present, should be compatible with the Type field of the named DeviceResource
        mappings:
          type: object
          description: Only valid where the Type of the named DeviceResource is String
          additionalProperties:
            type: string
      required:
        - deviceResource
    UpdateDeviceRequest:
      allOf:
        - $ref: '#/components/schemas/BaseRequest'
      description: "A request to update an existing device definition. 'id' and 'deviceName' must be populated in order to identify the device. Any other property that is populated in the request will be updated. Empty/blank properties will not be considered."
      type: object
      properties:
        device:
          $ref: '#/components/schemas/UpdateDevice'
      required:
        - device
    UpdateDeviceProfileRequest:
      allOf:
        - $ref: '#/components/schemas/BaseRequest'
      description: "A request to update an existing device profile definition. 'id' and 'name' must be populated in order to identify the profile. Any other property that is populated in the request will be updated. Empty/blank properties will not be considered."
      type: object
      properties:
        profile:
          $ref: '#/components/schemas/UpdateDeviceProfile'
      required:
        - profile
    UpdateDeviceServiceRequest:
      allOf:
        - $ref: '#/components/schemas/BaseRequest'
      description: "A request to update an existing device service definition. 'id' and 'deviceServiceName' must be populated in order to identify the service. Any other property that is populated in the request will be updated. Empty/blank properties will not be considered."
      type: object
      properties:
        service:
          $ref: '#/components/schemas/UpdateDeviceService'
      required:
        - service
    UpdateProvisionWatcherRequest:
      allOf:
        - $ref: '#/components/schemas/BaseRequest'
      description: "A request to update an existing provision watcher definition. 'id' and 'name' must be populated in order to identify the provisionwatcher. Any other property that is populated in the request will be updated. Empty/blank properties will not be considered."
      type: object
      properties:
        provisionwatcher:
          $ref: '#/components/schemas/UpdateProvisionWatcher'
      required:
        - provisionwatcher
    VersionResponse:
      description: "A response returned from the /version endpoint whose purpose is to report out the latest version supported by the service."
      type: object
      properties:
        apiVersion:
          description: "A version number shows the API version in DTOs."
          type: string
        version:
          description: "The latest version supported by the service."
          type: string
        serviceName:
          description: "Outputs the name of the service the response is from"
          type: string
    Unit:
      description: "express magnitudes of a physical quantity"
      type: object
      properties:
        source:
          type: string
          description: "helps provide the location of documentation about the origins and details of the units specified"
        values:
          type: array
          items:
            type: string
          description: "a list of arbitrary unit representation to be interpreted by the EdgeX data provider/consumer"
    UnitsOfMeasure:
      description: "Units of Measure definition"
      type: object
      properties:
        source:
          type: string
          description: "top level location of documentation about the origins and details of the units specified"
        units:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Unit'
    UnitsOfMeasureResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
      type: object
      properties:
        uom:
          $ref: '#/components/schemas/UnitsOfMeasure'
  parameters:
    offsetParam:
      in: query
      name: offset
      required: false
      schema:
        type: integer
        minimum: 0
        default: 0
      description: "The number of items to skip before starting to collect the result set."
    limitParam:
      in: query
      name: limit
      required: false
      schema:
        type: integer
        minimum: -1
        default: 20
      description: "The numbers of items to return.  Specify -1 will return all remaining items after offset.  The maximum will be the MaxResultCount as defined in the configuration of service."
    correlatedRequestHeader:
      in: header
      name: X-Correlation-ID
      description: "A unique identifier correlating a request to its associated response, facilitating tracing through being included on requests originating from the initiating request."
      schema:
        type: string
        format: uuid
      example: "14a42ea6-c394-41c3-8bcd-a29b9f5e6835"
    acceptHeader:
      in: header
      name: Accept
      description: "indicates which content types, expressed as MIME types, the client is able to understand"
      schema:
        type: string
        enum:
          - application/json
          - application/toml
    labelsParam:
      in: query
      name: labels
      required: false
      schema:
        type: string
      description: "Allows for querying a given object by associated user-defined label. More than one label may be specified via a comma-delimited list."
  headers:
    correlatedResponseHeader:
      description: "A response header that returns the unique correlation ID used to initiate the request."
      schema:
        type: string
        format: uuid
      example: "14a42ea6-c394-41c3-8bcd-a29b9f5e6835"
  examples:
    200Example:
      value:
        apiVersion: "v3"
        requestId: "2463bff9-aa53-4bc4-bebf-42fe81146ea8"
        statusCode: 200
    400Example:
      value:
        apiVersion: "v3"
        requestId: "73f0932c-0148-11eb-adc1-0242ac120002"
        statusCode: 400
        message: "Bad Request"
    404Example:
      value:
        apiVersion: "v3"
        requestId: "84c9489c-0148-11eb-adc1-0242ac120002"
        statusCode: 404
        message: "Not Found"
    409Example:
      value:
        apiVersion: "v3"
        requestId: "8a41b3f4-0148-11eb-adc1-0242ac120002"
        statusCode: 409
        message: "Data Duplicate"
    409DeleteExample:
      value:
        apiVersion: "v3"
        requestId: "8a41b3f4-0148-11eb-adc1-0242ac120002"
        statusCode: 409
        message: "associated object exists"
    423Example:
      value:
        apiVersion: "v3"
        requestId: "8a41b3f4-0148-11eb-adc1-0242ac120002"
        statusCode: 423
        message: "Locked"
    500Example:
      value:
        apiVersion: "v3"
        requestId: "9524082e-96c0-42bb-b5d0-50c869444cc7"
        statusCode: 500
        message: "Internal Server Error"
    MultiPOSTStatusExample:
      value:
        - apiVersion: "v3"
          requestId: "592b98aa-1e4e-46f2-992a-9e6ef844270f"
          statusCode: 201
          id: "6f52dc3c-5548-4142-baa6-052ac4bece93"
        - apiVersion: "v3"
          requestId: "d3742440-c319-4a9f-a488-b54cf992e143"
          statusCode: 409
          message: "Duplicated"
        - apiVersion: "v3"
          requestId: "791846bd-e702-4c7a-9d22-3ceee2f08427"
          statusCode: 500
          message: "Internal Server Error"
    MultiPOSTNoIdStatusExample:
      value:
        - apiVersion: "v3"
          requestId: "592b98aa-1e4e-46f2-992a-9e6ef844270f"
          statusCode: 201
        - apiVersion: "v3"
          requestId: "d3742440-c319-4a9f-a488-b54cf992e143"
          statusCode: 400
          message: "Duplicated"         
        - apiVersion: "v3"
          requestId: "8e025b94-1512-4ec4-a9bd-3111cb278379"
          statusCode: 404
          message: "Not Found"  
        - apiVersion: "v3"
          requestId: "791846bd-e702-4c7a-9d22-3ceee2f08427"
          statusCode: 500
          message: "Internal Server Error" 
    MultiUpdateStatusExample:
      value:
        - apiVersion: "v3"
          requestId: "592b98aa-1e4e-46f2-992a-9e6ef844270f"
          statusCode: 200
        - apiVersion: "v3"
          requestId: "8e025b94-1512-4ec4-a9bd-3111cb278379"
          statusCode: 404
          message: "Not Found"
        - apiVersion: "v3"
          requestId: "791846bd-e702-4c7a-9d22-3ceee2f08427"
          statusCode: 500
          message: "Internal Server Error"
    AddDeviceRequest:
      value:
        - apiVersion: v3
          device:
            name: AWS-IOT-Button1
            description: Home automation system
            adminState: UNLOCKED
            operatingState: UP
            labels:
              - home
              - hvac
              - thermostat
            location: "{lat:45.45,long:47.80}"
            serviceName: device-modbus
            profileName: Google-Home-profile
            autoEvents:
              - interval: 300ms
                onChange: true
                sourceName: CurrentHumidity
            protocols:
              modbus-tcp:
                Address: "localhost"
                Port: "502"
                UnitID: "1"
            tags:
              tag1:
                field1: "field1Value"
                field2: "field2Value"
              tag2:
                field3: "field3Value"
                field4: "field4Value"
                field5: "field5Value"
            properties:
              DeviceInstance:
                instanceName: "myInstance"
                instanceId: "instance1"
              Firmware:
                firmwareId: "firmwareABC"
                firmwareVersion: "v1.1.2"
    UpdateDeviceRequest:
      value:
        - apiVersion: v3
          device:
            id: "edaa7c0f-05c6-4368-89f1-3be5e197cf6a"
            name: "AWS-IOT-Button1"
            operatingState: "DOWN"
            labels:
              - "home"
            autoEvents:
              - interval: "100ms"
                onChange: true
                sourceName: "CurrentHumidity"
        - apiVersion: v3
          device:
            id: "771de9f4-b5a3-4eba-b5e7-ec6e14fa3de7"
            name: "AWS-IOT-Button2"
            description: "Home automation system"
            adminState: "LOCKED"
            operatingState: "UP"
    AddDeviceServiceRequest:
      value:
        - requestId: "e6e8a2f4-eb14-4649-9e2b-175247911369"
          apiVersion: v3
          service:
            name: home-thermostat-device-service
            description: manage homethermostats
            adminState: UNLOCKED
            labels:
              - hvac
              - thermostat
            baseAddress: http://home-device-service:49990
    AddDeviceProfileRequest:
      value:
        - requestId: "e6e8a2f4-eb14-4649-9e2b-175247911369"
          apiVersion: v3
          profile:
            name: "Simple-Device-Profile"
            manufacturer: "Simple Corp."
            model: "SP-01"
            labels:
              - "modbus"
            description: "Example of Simple Device Profile"
            deviceResources:
              - name: "SwitchButton"
                description: "Switch On/Off."
                properties:
                  valueType: "String"
                  readWrite: "RW"
                  defaultValue: "On"
                  units: "On/Off"
            deviceCommands:
              - name: "Switch"
                readWrite: "RW"
                resourceOperations:
                  - deviceResource: "SwitchButton"
                    DefaultValue: "false"
    AddDeviceCommandRequest:
      value:
        - requestId: "e6e8a2f4-eb14-4649-9e2b-175247911369"
          apiVersion: v3
          profileName: "Simple-Device-Profile"
          deviceCommand:
            name: "Switch"
            readWrite: "RW"
            resourceOperations:
              - deviceResource: "SwitchButton"
                DefaultValue: "false"
    AddDeviceResourceRequest:
      value:
        - requestId: "e6e8a2f4-eb14-4649-9e2b-175247911369"
          apiVersion: v3
          profileName: "Simple-Device-Profile"
          resource:
            name: "SwitchButton"
            description: "Switch On/Off."
            properties:
              valueType: "String"
              readWrite: "RW"
              defaultValue: "On"
              units: "On/Off"
    AddProvisionWatcherRequest:
      value:
        - requestId: "fb34e122-84d6-4c4c-a0ba-ac181021dc6b"
          apiVersion: v3
          provisionwatcher:
            name: "Simple-Provision-Watcher"
            labels:
              - "simple"
            identifiers:
              "address": "localhost"
              "port": "3[0-9]{2}"
            blockingidentifiers:
              "port":
                - "397"
                - "398"
                - "399"
            adminState: "UNLOCKED"
            discoveredDevice:
              profileName: "device-simple"
              serviceName: "device-simple"
              adminState: "UNLOCKED"
              properties:
                DeviceNameTemplate:
                  valueReplace: true
                  template: "device-name-{{Address}}-{{Port}"
    GetAllDevicesResponse:
      value:
        apiVersion: "v3"
        requestId: "479439fa-0148-11eb-adc1-0242ac120002"
        statusCode: 200
        totalCount: 3
        devices:
          - id: "55b68fcf-0fd2-445a-9fae-670b37fb9274"
            name: "Random-Boolean-Device"
            description: "Example of Device Virtual"
            created: 1600927134931
            modified: 1600927134931
            adminState: "UNLOCKED"
            operatingState: "UP"
            labels:
              - device-virtual-example
            location: ""
            serviceName: "device-virtual"
            profileName: "Random-Boolean-Device"
            autoEvents:
              - interval: "10s"
                onChange: false
                sourceName: "Bool"
            protocols:
              other:
                Address: "device-virtual-bool-01"
                Port: "300"
            tags:
              tag1:
                field1: "field1Value"
                field2: "field2Value"
              tag2:
                field3: "field3Value"
                field4: "field4Value"
                field5: "field5Value"
            properties:
              DeviceInstance:
                instanceName: "myInstance"
                instanceId: "instance1"
              Firmware:
                firmwareId: "firmwareABC"
                firmwareVersion: "v1.1.2"
          - id: "03bd5ce0-b967-4165-a335-775fea604142"
            name: "Random-UnsignedInteger-Device"
            description: "Example of Device Virtual"
            created: 1600927134949
            modified: 1600927134949
            adminState: "UNLOCKED"
            operatingState: "UP"
            labels:
              - device-virtual-example
            location: ""
            serviceName: "device-virtual"
            profileName: "Random-Boolean-Device"
            autoEvents:
              - interval: "20s"
                onChange: false
                sourceName: "Uint8"
              - interval: "20s"
                onChange: false
                sourceName: "Uint16"
            protocols:
              other:
                Address: "device-virtual-uint-01"
                Port: "300"
            tags:
              tag1:
                field1: "field1Value"
                field2: "field2Value"
              tag2:
                field3: "field3Value"
                field4: "field4Value"
                field5: "field5Value"
            properties:
              DeviceInstance:
                instanceName: "myInstance"
                instanceId: "instance2"
              Firmware:
                firmwareId: "firmwareXYZ"
                firmwareVersion: "v3.1.0"
    GetAllDeviceProfilesResponse:
      value:
        apiVersion: "v3"
        requestId: "bc979763-afde-492c-b0a2-79ff3025b6de"
        statusCode: 200
        totalCount: 3
        profiles:
        - id: "9d33b6fd-f38b-4f0e-aef4-0332578ff2c0"
          name: "Device-Virtual-Profile"
          description: "Example of Device-Virtual"
          created: 1600927134904
          modified: 1600927134904
          manufacturer: "IOTech"
          model: "Device-Virtual-01"
          labels:
            - device-virtual-example
          deviceResources:
            - description: "Generate random float32 value"
              name: "Float32"
              properties:
                type: "Float32"
                readWrite: "RW"
                defaultValue: "0"
          deviceCommands:
            - name: "Float32"
              readWrite: "RW"
              resourceOperations:
                - deviceResource: "Float32"
                  defaultValue: "0.0123"
        - id: "3edf4fe9-b3b8-4f78-bb94-ff55f7d9f316"
          name: "Device-Modbus-Profile"
          description: "Example of Device-Modbus"
          created: 1600927134904
          modified: 1600927134904
          manufacturer: "IOTech"
          model: "Device-Modbus-01"
          labels:
            - device-modbus-example
          deviceResources:
            - description: "Generate random float32 value"
              name: "Float32"
              properties:
                type: "Float32"
                readWrite: "RW"
                defaultValue: "0"
          deviceCommands:
            - name: "Float32"
              readWrite: "RW"
              resourceOperations:
                - deviceResource: "1"
                  defaultValue: "false"
    GetAllProvisionWatchersResponse:
      value:
        apiVersion: "v3"
        requestId: "4e63c9b9-9cc4-45e4-9bf0-6d994a3860b4"
        statusCode: 200
        totalCount: 3
        provisionwatchers:
          - id: "1ff7762f-c432-4af0-9a5d-756bbc92744b"
            name: "virtual-watcher"
            created: 1600927134890
            modified: 1600927134890
            labels:
              - virtual
            identifiers:
              "address": "localhost"
              "port": "3[0-9]{2}"
            blockingIdentifiers:
              "port":
                - "397"
                - "398"
                - "399"
            adminState: "UNLOCKED"
            discoveredDevice:
              profileName: "device-virtual"
              serviceName: "device-virtual"
              adminState: "UNLOCKED"
              autoEvents:
                - sourceName: "Bool"
                  interval: "10s"
                  onChange: false
              properties:
                DeviceNameTemplate:
                  valueReplace: true
                  template: "device-name-{{Address}}-{{Port}"
          - id: "90c971f0-cb84-4bda-a9f0-d9494196b54d"
            name: "simple-watcher"
            created: 0
            modified: 0
            labels:
              - simple
            identifiers:
              "address": "localhost"
              "port": "4[0-9]{2}"
            blockingIdentifiers:
              "port":
                - "497"
                - "498"
                - "499"
            adminState: "UNLOCKED"
            discoveredDevice:
              profileName: "device-simple"
              serviceName: "device-simple"
              adminState: "UNLOCKED"
    UnitsOfMeasureResponseExample:
      value:
        apiVersion: "v3"
        statusCode: 200
        uom:
          source: "reference to source for all UoM if not specified below"
          units:
            "temperature":
              source: "www.weather.com"
              value:
                - "C"
                - "F"
                - "K"
            "weights":
              source: "www.usa.gov/federal-agencies/weights-and-measures-division"
              value:
                - "lbs"
                - "ounces"
                - "kilos"
                - "grams"
paths:
  /device:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
    post:
      summary: "Allows provisioning of a new device"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AddDeviceRequest'
            examples:
              AddDeviceRequest:
                $ref: '#/components/examples/AddDeviceRequest'
      responses:
        '207':
          description: "Indicates a multi-part response supportive of accepting multiple requests at once. The 'statusCode' property of each response in the returned array will indicate success or failure."
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - $ref: '#/components/schemas/ErrorResponse'
                    - $ref: '#/components/schemas/BaseWithIdResponse'
              examples:
                MultiPOSTStatusExample:
                  $ref: '#/components/examples/MultiPOSTStatusExample'
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                400Example:
                  $ref: '#/components/examples/400Example'
        '500':
          description: An unexpected error occurred on the server
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
    patch:
      summary: "Allows updates to an existing device"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/UpdateDeviceRequest'
            examples:
              UpdateDeviceRequest:
                $ref: '#/components/examples/UpdateDeviceRequest'
      responses:
        '207':
          description: "Indicates a multi-part response supportive of accepting multiple requests at once. The 'statusCode' property of each response in the returned array will indicate success or failure."
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - $ref: '#/components/schemas/ErrorResponse'
                    - $ref: '#/components/schemas/BaseWithIdResponse'
              examples:
                MultiUpdateStatusExample:
                  $ref: '#/components/examples/MultiUpdateStatusExample'
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                400Example:
                  $ref: '#/components/examples/400Example'
        '500':
          description: An unexpected error occurred on the server
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
  /device/all:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/limitParam'
      - $ref: '#/components/parameters/labelsParam'
    get:
      summary: "Given the entire range of devices sorted by last modified descending, returns a portion of that range according to the offset and limit parameters. Devices may also be filtered by label."
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiDevicesResponse'
              examples:
                GetAllDevicesResponse:
                  $ref: '#/components/examples/GetAllDevicesResponse'
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                400Example:
                  $ref: '#/components/examples/400Example'
        '500':
          description: "Internal Server Error"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
  '/device/check/name/{name}':
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - name: name
        in: path
        required: true
        schema:
          type: string
        description: "The name of the device you want to check on."
    get:
      summary: "Returned status code indicates if the device exists or not."
      responses:
        '200':
          description: "Device exists"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                200Example:
                  $ref: '#/components/examples/200Example'
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                400Example:
                  $ref: '#/components/examples/400Example'
        '404':
          description: "The requested resource does not exist"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                404Example:
                  $ref: '#/components/examples/404Example'
        '500':
          description: "Internal Server Error"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
  '/device/name/{name}':
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - name: name
        in: path
        required: true
        schema:
          type: string
        description: "The name of the device you wish to load, datatype string."
    get:
      summary: "Returns a device by name"
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceResponse'
              example:
                apiVersion: "v3"
                requestId: "75ca2b65-f8ef-44f7-a995-a29c53ce111b"
                statusCode: 200
                device:
                  id: "55b68fcf-0fd2-445a-9fae-670b37fb9274"
                  name: "Random-Boolean-Device"
                  description: "Example of Device Virtual"
                  created: 1600926440123
                  modified: 1600928666321
                  adminState: "UNLOCKED"
                  operatingState: "UP"
                  labels:
                    - device-virtual-example
                  location: ""
                  serviceName: "device-virtual"
                  profileName: "Random-Boolean-Device"
                  autoEvents:
                    - interval: "10s"
                      onChange: false
                      sourceName: "Bool"
                  protocols:
                    other:
                      Address: "device-virtual-bool-01"
                      Port: "300"
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                400Example:
                  $ref: '#/components/examples/400Example'
        '404':
          description: "The requested resource does not exist"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                404Example:
                  $ref: '#/components/examples/404Example'
        '500':
          description: "Internal Server Error"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
    delete:
      summary: "Delete a device by name"
      responses:
        '200':
          description: "Delete successful"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
              examples:
                200Example:
                  $ref: '#/components/examples/200Example'
        '404':
          description: "The requested resource does not exist"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                404Example:
                  $ref: '#/components/examples/404Example'
        '500':
          description: "Internal Server Error"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
  '/device/profile/name/{name}':
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/limitParam'
      - name: name
        in: path
        required: true
        schema:
          type: string
        description: "The name identifying a device profile"
    get:
      summary: "Returns all devices assigned to the specified device profile"
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiDevicesResponse'
              examples:
                GetAllDevicesResponse:
                  $ref: '#/components/examples/GetAllDevicesResponse'
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                400Example:
                  $ref: '#/components/examples/400Example'
        '500':
          description: "Internal Server Error"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
  '/device/service/name/{name}':
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/limitParam'
      - name: name
        in: path
        required: true
        schema:
          type: string
        description: "The name identifying a device service"
    get:
      summary: "Returns all devices assigned to the specified device service"
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiDevicesResponse'
              examples:
                GetAllDevicesResponse:
                  $ref: '#/components/examples/GetAllDevicesResponse'
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                400Example:
                  $ref: '#/components/examples/400Example'
        '500':
          description: "Internal Server Error"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
  /deviceprofile:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
    post:
      summary: "Allows creation of a new device profile"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AddDeviceProfileRequest'
            examples:
              AddDeviceRequest:
                $ref: '#/components/examples/AddDeviceProfileRequest'
      responses:
        '207':
          description: "Indicates a multi-part response supportive of accepting multiple requests at once. The 'statusCode' property of each response in the returned array will indicate success or failure."
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - $ref: '#/components/schemas/ErrorResponse'
                    - $ref: '#/components/schemas/BaseWithIdResponse'
              examples:
                MultiPOSTStatusExample:
                  $ref: '#/components/examples/MultiPOSTStatusExample'
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                400Example:
                  $ref: '#/components/examples/400Example'
        '500':
          description: An unexpected error occurred on the server
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
    put:
      summary: "Allows updates to an existing device profile"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/UpdateDeviceProfileRequest'
            examples:
              AddDeviceRequest:
                $ref: '#/components/examples/AddDeviceProfileRequest'
      responses:
        '207':
          description: "Indicates a multi-part response supportive of accepting multiple requests at once. The 'statusCode' property of each response in the returned array will indicate success or failure."
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - $ref: '#/components/schemas/ErrorResponse'
                    - $ref: '#/components/schemas/BaseWithIdResponse'
              examples:
                MultiUpdateStatusExample:
                  $ref: '#/components/examples/MultiUpdateStatusExample'
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                400Example:
                  $ref: '#/components/examples/400Example'
        '423':
          description: "profile change is not allowed when StrictDeviceProfileDeletes config is enabled"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                423Example:
                  $ref: '#/components/examples/423Example'
        '500':
          description: An unexpected error occurred on the server
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
  /deviceprofile/uploadfile:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
    post:
      summary: "Allows creation of a new device profile via an uploaded YAML file"
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: 'The Device Profile YAML file binary'
      responses:
        '201':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseWithIdResponse'
              example:
                apiVersion: "v3"
                requestId: "327d9c1e-ac41-41cb-ae83-e78d74472cd8"
                statusCode: 201
                id: "1dc44f6c-a557-4d4a-9d2b-ccdadd674c9d"
        '400':
          description: "Invalid request."
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                400Example:
                  $ref: '#/components/examples/400Example'
        '409':
          description: "Conflict detected. Device profile name and command names must be universally unique."
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                409Example:
                  $ref: '#/components/examples/409Example'
        '500':
          description: "An unexpected error happened on the server."
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
    put:
      summary: "Allows updates to an existing device profile from file"
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: 'The Device Profile YAML file binary'
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseWithIdResponse'
              example:
                apiVersion: "v3"
                requestId: "778b4234-917d-4df7-84dd-a99c33c3ec3b"
                statusCode: 200
        '400':
          description: "Invalid request."
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                400Example:
                  $ref: '#/components/examples/400Example'
        '409':
          description: "Conflict detected. Device profile name must be universally unique."
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                409Example:
                  $ref: '#/components/examples/409Example'
        '423':
          description: "profile change is not allowed when StrictDeviceProfileChanges config is enabled"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                423Example:
                  $ref: '#/components/examples/423Example'
        '500':
          description: "An unexpected error happened on the server."
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
  /deviceprofile/all:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/limitParam'
      - $ref: '#/components/parameters/labelsParam'
    get:
      summary: "Given the entire range of device profiles sorted by last modified descending, returns a portion of that range according to the offset and limit parameters. Device profiles may also be filtered by label."
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiDeviceProfilesResponse'
              examples:
                GetAllDeviceProfilesResponse:
                  $ref: '#/components/examples/GetAllDeviceProfilesResponse'
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                400Example:
                  $ref: '#/components/examples/400Example'
        '500':
          description: "Internal Server Error"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
  '/deviceprofile/name/{name}':
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - name: name
        in: path
        required: true
        schema:
          type: string
        description: "The unique name of a device profile"
    get:
      summary: "Returns a device profile by its name"
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceProfileResponse'
              example:
               apiVersion: "v3"
               requestId: "374387ad-18ef-4f5c-8b67-6844bec31310"
               statusCode: 200
               profile:
                id: "9d33b6fd-f38b-4f0e-aef4-0332578ff2c0"
                name: ""
                description: "Example of Device-Virtual"
                created: 1600927134904
                modified: 1600927134904
                manufacturer: "IOTech"
                model: "Device-Virtual-01"
                labels:
                  - device-virtual-example
                deviceResources:
                  - description: "Generate random float32 value"
                    name: "Float32"
                    properties:
                      valueType: "Float32"
                      readWrite: "RW"
                      defaultValue: "0"
                deviceCommands:
                  - name: "Float32"
                    readWrite: "RW"
                    resourceOperations:
                      - deviceResource: "Float32"
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                400Example:
                  $ref: '#/components/examples/400Example'
        '404':
          description: "The requested resource does not exist"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                404Example:
                  $ref: '#/components/examples/404Example'
        '500':
          description: "Internal Server Error"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
    delete:
      summary: "Delete a device profile by its unique name. This operation will fail if there are devices actively using the profile."
      responses:
        '200':
          description: "Delete successful"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
              examples:
                200Example:
                  $ref: '#/components/examples/200Example'
        '404':
          description: "The requested resource does not exist"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                404Example:
                  $ref: '#/components/examples/404Example'
        '409':
          description: "The requested resource is locked"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                409DeleteExample:
                  $ref: '#/components/examples/409DeleteExample'
        '423':
          description: "profile deletion is not allowed when StrictDeviceProfileDeletes config is enabled"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                423Example:
                  $ref: '#/components/examples/423Example'
        '500':
          description: "Internal Server Error"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
  '/deviceprofile/basicinfo':
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
    patch:
      summary: "Allows basic information updates to an existing device profile, such as profile's description, manufacturer, model and label fields."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/DeviceProfileBasicInfoRequest'
            example:
              - apiVersion: "v3"
                requestId: "bc979763-afde-492c-b0a2-79ff3025b6de"
                basicinfo:
                  name: "Device-Virtual-Profile"
                  manufacturer: "Simple Corp."
      responses:
        '207':
          description: "Indicates a multi-part response supportive of accepting multiple requests at once. The 'statusCode' property of each response in the returned array will indicate success or failure."
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - $ref: '#/components/schemas/ErrorResponse'
                    - $ref: '#/components/schemas/BaseResponse'
              examples:
                MultiUpdateStatusExample:
                  $ref: '#/components/examples/MultiUpdateStatusExample'
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                400Example:
                  $ref: '#/components/examples/400Example'
        '500':
          description: An unexpected error occurred on the server
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
  '/deviceprofile/deviceCommand':
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
    post:
      summary: "Allows creation of device commands of an existing device profile"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/DeviceCommandRequest'
            examples:
              AddDeviceCommandRequest:
                $ref: '#/components/examples/AddDeviceCommandRequest'
      responses:
        '207':
          description: "Indicates a multi-part response supportive of accepting multiple requests at once. The 'statusCode' property of each response in the returned array will indicate success or failure."
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - $ref: '#/components/schemas/ErrorResponse'
                    - $ref: '#/components/schemas/BaseResponse'
              examples:
                MultiPOSTStatusExample:
                  $ref: '#/components/examples/MultiPOSTNoIdStatusExample'
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                400Example:
                  $ref: '#/components/examples/400Example'
        '500':
          description: An unexpected error occurred on the server
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
    patch:
      summary: "Allows the isHidden field of the existing device commands to be updated."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/UpdateDeviceCommandRequest'
            example:
              - apiVersion: "v3"
                requestId: "bc979763-afde-492c-b0a2-79ff3025b6de"
                profileName: "Device-Virtual-Profile"
                devicecommand:
                  "name": "Switch"
                  "isHidden": "true"
      responses:
        '207':
          description: "Indicates a multi-part response supportive of accepting multiple requests at once. The 'statusCode' property of each response in the returned array will indicate success or failure."
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - $ref: '#/components/schemas/ErrorResponse'
                    - $ref: '#/components/schemas/BaseResponse'
              examples:
                MultiUpdateStatusExample:
                  $ref: '#/components/examples/MultiUpdateStatusExample'
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                400Example:
                  $ref: '#/components/examples/400Example'
        '500':
          description: An unexpected error occurred on the server
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
  '/deviceprofile/name/{name}/deviceCommand/{commandName}':
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - name: name
        in: path
        required: true
        schema:
          type: string
        description: "The unique name of a device profile"
      - name: commandName
        in: path
        required: true
        schema:
          type: string
        description: "The unique name of a device command"
    delete:
      summary: "Delete a device command by its unique name. This operation will fail if there are devices actively using the profile."
      responses:
        '200':
          description: "Delete successful"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
              examples:
                200Example:
                  $ref: '#/components/examples/200Example'
        '404':
          description: "The requested resource does not exist"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                404Example:
                  $ref: '#/components/examples/404Example'
        '409':
          description: "The requested resource is locked"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                409DeleteExample:
                  $ref: '#/components/examples/409DeleteExample'
        '423':
          description: "profile change is not allowed when StrictDeviceProfileChanges config is enabled"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                423Example:
                  $ref: '#/components/examples/423Example'
        '500':
          description: "Internal Server Error"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
  '/deviceprofile/resource':
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
    post:
      summary: "Allows creation of device resources of an existing device profile"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/DeviceResourceRequest'
            examples:
              AddDeviceResourceRequest:
                $ref: '#/components/examples/AddDeviceResourceRequest'
      responses:
        '207':
          description: "Indicates a multi-part response supportive of accepting multiple requests at once. The 'statusCode' property of each response in the returned array will indicate success or failure."
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf: 
                    - $ref: '#/components/schemas/BaseResponse'
                    - $ref: '#/components/schemas/ErrorResponse'
              examples:
                MultiPOSTStatusExample:
                  $ref: '#/components/examples/MultiPOSTNoIdStatusExample'
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                400Example:
                  $ref: '#/components/examples/400Example'
        '500':
          description: An unexpected error occurred on the server
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
    patch:
      summary: "Allows the description and isHidden fields of the existing device resources to be updated."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/UpdateDeviceResourceRequest'
            example:
              - apiVersion: "v3"
                requestId: "bc979763-afde-492c-b0a2-79ff3025b6de"
                profileName: "Device-Virtual-Profile"
                resource:
                  "name": "Float32"
                  "description": "random float32 value"
                  "isHidden": "false"
      responses:
        '207':
          description: "Indicates a multi-part response supportive of accepting multiple requests at once. The 'statusCode' property of each response in the returned array will indicate success or failure."
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - $ref: '#/components/schemas/ErrorResponse'
                    - $ref: '#/components/schemas/BaseResponse'
              examples:
                MultiUpdateStatusExample:
                  $ref: '#/components/examples/MultiUpdateStatusExample'
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                400Example:
                  $ref: '#/components/examples/400Example'
        '500':
          description: An unexpected error occurred on the server
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
  '/deviceprofile/name/{name}/resource/{resourceName}':
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - name: name
        in: path
        required: true
        schema:
          type: string
        description: "The unique name of a device profile"
      - name: resourceName
        in: path
        required: true
        schema:
          type: string
        description: "The unique name of a device resource"
    delete:
      summary: "Delete a device resource by its unique name. This operation will fail if there are devices actively using the profile."
      responses:
        '200':
          description: "Delete successful"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
              examples:
                200Example:
                  $ref: '#/components/examples/200Example'
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                400Example:
                  $ref: '#/components/examples/400Example'
        '404':
          description: "The requested resource does not exist"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                404Example:
                  $ref: '#/components/examples/404Example'
        '409':
          description: "The requested resource is locked"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                409DeleteExample:
                  $ref: '#/components/examples/409DeleteExample'
        '423':
          description: "profile change is not allowed when StrictDeviceProfileChanges config is enabled"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                423Example:
                  $ref: '#/components/examples/423Example'
        '500':
          description: "Internal Server Error"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
  '/deviceprofile/manufacturer/{manufacturer}':
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/limitParam'
      - name: manufacturer
        in: path
        required: true
        schema:
          type: string
        description: "The manufacturer for the device profiles in which you're interested."
    get:
      summary: "Returns a list of device profiles for the given manufacturer."
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiDeviceProfilesResponse'
              examples:
                GetAllDeviceProfilesResponse:
                  $ref: '#/components/examples/GetAllDeviceProfilesResponse'
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                400Example:
                  $ref: '#/components/examples/400Example'
        '500':
          description: "Internal Server Error"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
  '/deviceprofile/manufacturer/{manufacturer}/model/{model}':
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/limitParam'
      - name: manufacturer
        in: path
        required: true
        schema:
          type: string
        description: "The manufacturer for the device profiles in which you're interested."
      - name: model
        in: path
        required: true
        schema:
          type: string
        description: "The model of the device profiles in which you're interested."
    get:
      summary: "Returns a list of device profiles for the given manufacturer and model."
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/MultiDeviceProfilesResponse'
              examples:
                GetAllDeviceProfilesResponse:
                  $ref: '#/components/examples/GetAllDeviceProfilesResponse'
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                400Example:
                  $ref: '#/components/examples/400Example'
        '500':
          description: "Internal Server Error"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
  '/deviceprofile/model/{model}':
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/limitParam'
      - name: model
        in: path
        required: true
        schema:
          type: string
        description: "The model assigned to the device profiles in which you're interested."
    get:
      summary: "Returns a list of device profiles for the given model."
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiDeviceProfilesResponse'
              examples:
                GetAllDeviceProfilesResponse:
                  $ref: '#/components/examples/GetAllDeviceProfilesResponse'
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                400Example:
                  $ref: '#/components/examples/400Example'
        '500':
          description: "Internal Server Error"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
  /deviceresource/profile/{profileName}/resource/{resourceName}:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - name: profileName
        in: path
        required: true
        schema:
          type: string
        description: "The unique name of a device profile"
      - name: resourceName
        in: path
        required: true
        schema:
          type: string
        description: "The unique name of a device resource"
    get:
      summary: "Returns a device resource for the given profileName and resourceName."
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceResourceResponse'
              example:
                apiVersion: "v3"
                statusCode: 200
                resource:
                  name: "float32-value"
                  description: "random float32 value"
                  properties:
                    valueType: "Float32"
                    readWrite: "R"
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                400Example:
                  $ref: '#/components/examples/400Example'
        '404':
          description: "The requested resource does not exist"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                404Example:
                  $ref: '#/components/examples/404Example'
        '500':
          description: "Internal Server Error"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
  /deviceservice:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
    post:
      summary: "Add a new DeviceService - name must be unique."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AddDeviceServiceRequest'
            examples:
              AddDeviceServiceRequest:
                $ref: '#/components/examples/AddDeviceServiceRequest'
      responses:
        '207':
          description: "Indicates a multi-part response supportive of accepting multiple requests at once. The 'statusCode' property of each response in the returned array will indicate success or failure."
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - $ref: '#/components/schemas/ErrorResponse'
                    - $ref: '#/components/schemas/BaseWithIdResponse'
              examples:
                MultiPOSTStatusExample:
                  $ref: '#/components/examples/MultiPOSTStatusExample'
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                400Example:
                  $ref: '#/components/examples/400Example'
        '500':
          description: An unexpected error occurred on the server
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
    patch:
      summary: "Allows updates to an existing device service"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDeviceServiceRequest'
            example:
              - requestId: "d3367878-c46b-4263-b0af-1ccac37aab6e"
                apiVersion: v3
                service:
                  id: "edaa7c0f-05c6-4368-89f1-3be5e197cf6a"
                  name: "home-thermostat-device-service"
                  description: "Home automation system"
                  labels:
                    - "home"
              - requestId: "5accf5a9-9c7e-4160-bbbb-03d1cb25b492"
                apiVersion: v3
                service:
                  id: "aee709c7-1b30-4db4-9256-2e7eb2073b2f"
                  name: "Google-Home-device-service"
                  adminState: "UNLOCKED"
                  baseAddress: "http://home-device-service:49980"
      responses:
        '207':
          description: "Indicates a multi-part response supportive of accepting multiple requests at once. The 'statusCode' property of each response in the returned array will indicate success or failure."
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - $ref: '#/components/schemas/ErrorResponse'
                    - $ref: '#/components/schemas/BaseWithIdResponse'
              examples:
                MultiUpdateStatusExample:
                  $ref: '#/components/examples/MultiUpdateStatusExample'
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                400Example:
                  $ref: '#/components/examples/400Example'
        '500':
          description: An unexpected error occurred on the server
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
  /deviceservice/all:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/limitParam'
      - $ref: '#/components/parameters/labelsParam'
    get:
      summary: "Given the entire range of device services sorted by last modified descending, returns a portion of that range according to the offset and limit parameters. Device services may also be filtered by label."
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiDeviceServicesResponse'
              example:
                apiVersion: "v3"
                requestId: "4c7c47a7-10e0-4489-99c5-f639b7d7eb5c"
                statusCode: 200
                totalCount: 3
                services:
                  - id: "1ff7762f-c432-4af0-9a5d-756bbc92744b"
                    name: "device-virtual"
                    created: 1600927134890
                    modified: 1600927134890
                    description: "Example"
                    adminState: "UNLOCKED"
                    labels:
                      - virtual
                    baseAddress: "http://edgex-device-virtual:59990"
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                400Example:
                  $ref: '#/components/examples/400Example'
        '500':
          description: "Internal Server Error"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
  '/deviceservice/name/{name}':
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - name: name
        in: path
        required: true
        schema:
          type: string
        description: "The unique name of the device service you want to load."
    get:
      summary: "Returns a device service by its unique name"
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceServiceResponse'
              example:
                apiVersion: "v3"
                requestId: "5e46b1fe-fb3e-4bc5-b84c-0ea8f9e0b511"
                statusCode: 200
                service:
                  id: "1ff7762f-c432-4af0-9a5d-756bbc92744b"
                  name: "device-virtual"
                  description: "Example"
                  created: 1600927134890
                  modified: 1600927134890
                  adminState: "UNLOCKED"
                  labels:
                    - virtual
                  baseAddress: "http://edgex-device-virtual:59990"
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                400Example:
                  $ref: '#/components/examples/400Example'
        '404':
          description: "The requested resource does not exist"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                404Example:
                  $ref: '#/components/examples/404Example'
        '500':
          description: "Internal Server Error"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
    delete:
      summary: "Delete a device service by its unique name"
      responses:
        '200':
          description: "Delete successful"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
              examples:
                200Example:
                  $ref: '#/components/examples/200Example'
        '404':
          description: "The requested resource does not exist"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                404Example:
                  $ref: '#/components/examples/404Example'
        '409':
          description: "The requested resource is locked"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                409DeleteExample:
                  $ref: '#/components/examples/409DeleteExample'
        '500':
          description: "Internal Server Error"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
  '/provisionwatcher':
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
    post:
      summary: "Add a new ProvisionWatcher - name must be unique."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AddProvisionWatcherRequest'
            examples:
              AddProvisionWatcherRequest:
                $ref: '#/components/examples/AddProvisionWatcherRequest'
      responses:
        '207':
          description: "Indicates a multi-part response supportive of accepting multiple requests at once. The 'statusCode' property of each response in the returned array will indicate success or failure."
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - $ref: '#/components/schemas/ErrorResponse'
                    - $ref: '#/components/schemas/BaseWithIdResponse'
              examples:
                MultiPOSTStatusExample:
                  $ref: '#/components/examples/MultiPOSTStatusExample'
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                400Example:
                  $ref: '#/components/examples/400Example'
        '500':
          description: "An unexpected error occurred on the server"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
    patch:
      summary: "Allows updates to an existing provision watcher"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProvisionWatcherRequest'
            example:
              - requestId: "d3367878-c46b-4263-b0af-1ccac37aab6e"
                apiVersion: v3
                provisionwatcher:
                  id: "edaa7c0f-05c6-4368-89f1-3be5e197cf6a"
                  name: "simple-identifier"
                  identifiers:
                    "address": "localhost"
                    "port": "3[0-9]{2}"
                  adminState: "UNLOCKED"
                  labels:
                    - "simple"
              - requestId: "5accf5a9-9c7e-4160-bbbb-03d1cb25b492"
                apiVersion: v3
                provisionwatcher:
                  id: "aee709c7-1b30-4db4-9256-2e7eb2073b2f"
                  name: "virtual-identifier"
                  discoveredDevice:
                    profileName: "device-virtual"
                    serviceName: "device-virtual"
      responses:
        '207':
          description: "Indicates a multi-part response supportive of accepting multiple requests at once. The 'statusCode' property of each response in the returned array will indicate success or failure."
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - $ref: '#/components/schemas/ErrorResponse'
                    - $ref: '#/components/schemas/BaseWithIdResponse'
              examples:
                MultiUpdateStatusExample:
                  $ref: '#/components/examples/MultiUpdateStatusExample'
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                400Example:
                  $ref: '#/components/examples/400Example'
        '500':
          description: An unexpected error occurred on the server
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
  /provisionwatcher/all:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/limitParam'
      - $ref: '#/components/parameters/labelsParam'
    get:
      summary: "Given the entire range of provision watchers sorted by last modified descending, returns a portion of that range according to the offset and limit parameters. Provision watchers may also be filtered by label."
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiProvisionWatchersResponse'
              examples:
                GetAllProvisionWatchersResponse:
                  $ref: '#/components/examples/GetAllProvisionWatchersResponse'
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                400Example:
                  $ref: '#/components/examples/400Example'
        '500':
          description: "Internal Server Error"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
  '/provisionwatcher/name/{name}':
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - name: name
        in: path
        required: true
        schema:
          type: string
        description: "The unique name of a provision watcher"
    get:
      summary: "Returns a provision watcher by its unique name"
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisionWatcherResponse'
              example:
                apiVersion: "v3"
                requestId: "4e63c9b9-9cc4-45e4-9bf0-6d994a3860b4"
                statusCode: 200
                provisionwatcher:
                  id: "1ff7762f-c432-4af0-9a5d-756bbc92744b"
                  name: "virtual-watcher"
                  created: 1600927134890
                  modified: 1600927134890
                  labels:
                    - virtual
                  identifiers:
                    "address": "localhost"
                    "port": "3[0-9]{2}"
                  blockingIdentifiers:
                    "port":
                      - "397"
                      - "398"
                      - "399"
                  adminState: "UNLOCKED"
                  discoveredDevice:
                    profileName: "device-virtual"
                    serviceName: "device-virtual"
                    adminState: "UNLOCKED"
                    autoEvents:
                      - sourceName: "Bool"
                        interval: "10s"
                        onChange: false
                    properties:
                      DeviceNameTemplate:
                        valueReplace: true
                        template: "device-name-{{Address}}-{{Port}"
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                400Example:
                  $ref: '#/components/examples/400Example'
        '404':
          description: "The requested resource does not exist"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                404Example:
                  $ref: '#/components/examples/404Example'
        '500':
          description: "Internal Server Error"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
    delete:
      summary: "Delete a provision watcher by its unique name"
      responses:
        '200':
          description: "Delete successful"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
              examples:
                200Example:
                  $ref: '#/components/examples/200Example'
        '404':
          description: "The requested resource does not exist"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                404Example:
                  $ref: '#/components/examples/404Example'
        '500':
          description: "Internal Server Error"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
  /provisionwatcher/service/name/{name}:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/limitParam'
      - name: name
        in: path
        required: true
        schema:
          type: string
        description: "The name identifying a device service"
    get:
      summary: "Returns all provision watchers with specified device service name"
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiProvisionWatchersResponse'
              examples:
                GetAllProvisionWatchersResponse:
                  $ref: '#/components/examples/GetAllProvisionWatchersResponse'
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                400Example:
                  $ref: '#/components/examples/400Example'
        '500':
          description: "Internal Server Error"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
  /provisionwatcher/profile/name/{name}:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/limitParam'
      - name: name
        in: path
        required: true
        schema:
          type: string
        description: "The name identifying a device profile"
    get:
      summary: "Returns all provision watchers with specified device profile name"
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiProvisionWatchersResponse'
              examples:
                GetAllProvisionWatchersResponse:
                  $ref: '#/components/examples/GetAllProvisionWatchersResponse'
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                400Example:
                  $ref: '#/components/examples/400Example'
        '500':
          description: "Internal Server Error"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
  /uom:
    get:
      summary: "Returns the Units of Measure definition"
      parameters:
        - $ref: '#/components/parameters/acceptHeader'
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitsOfMeasureResponse'
              examples:
                UnitsOfMeasureResponse:
                  $ref: '#/components/examples/UnitsOfMeasureResponseExample'
            application/yaml:
              schema:
                $ref: '#/components/schemas/UnitsOfMeasure'
        '500':
          description: "Internal Server Error"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
  /config:
    get:
      summary: "Returns the current configuration of the service."
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigResponse'
              example:
                apiVersion: "v3"
                serviceName: "core-metadata"
                config:
                  Writeable:
                    LogLevel: "INFO"
                  Clients:
                    CoreData:
                      Host: "edgex-core-data"
                      Port: 59880
                      Protocol: "http"
                    Notifications:
                      Host: "edgex-support-notifications"
                      Port: 59860
                      Protocol: "http"
                  Database:
                    Username: "meta"
                    Password: "password"
                    Type: "redisdb"
                    Timeout: "5s"
                    Host: "edgex-redis"
                    Port: 6379
                    Name: "metadata"
                  Notifications:
                    Content: "Device update: "
                    Description: "Metadata device notice"
                    Label: "metadata"
                    PostDeviceChanges: true
                    Sender: "edgex-core-metadata"
                    Slug: "device-change-"
                  Registry:
                    Host: "edgex-core-consul"
                    Port: 8500
                    Type: "consul"
                  Service:
                    BootTimeout: 30000
                    CheckInterval: "10s"
                    Host: "edgex-core-metadata"
                    Port: 59881
                    SeverBindAddr: ""
                    Protocol: "http"
                    StartupMsg: "This is the EdgeX Core Metadata Microservice"
                    MaxResultCount: 50000
                    Timeout: "5s"
                  SecretStore:
                    Host: "edgex-vault"
                    Port: 8200
                    Path: "v1/secret/edgex/core-metadata/"
                    Protocol: "http"
                    Namespace: ""
                    RootCaCertPath: ""
                    ServerName: "edgex-vault"
                    Authentication:
                      AuthType: "X-Vault-Token"
                      AuthToken: ""
                    TokenFile: "/tmp/edgex/secrets/core-metadata/secrets-token.json"
        '500':
          description: "Internal Server Error"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
  /ping:
    get:
      summary: "A simple 'ping' endpoint that can be used as a service healthcheck"
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PingResponse'
              example:
                apiVersion: "v3"
                timestamp: 'Thu Jan 28 00:32:42 UTC 2021'
                serviceName: "core-metadata"
        '500':
          description: "Internal Server Error"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
  /version:
    get:
      summary: "A simple 'version' endpoint that will return the current version of the service"
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionResponse'
              example:
                apiVersion: "v3"
                version: 3.0.0
                serviceName: "core-metadata"
        '500':
          description: "Internal Server Error"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
