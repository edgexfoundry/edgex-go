openapi: 3.0.0
info:
  title: core-metadata
  version: 1.2.1
servers:
- url: http://localhost:48081/api
paths:
  /v1/addressable:
    get:
      description: Return all addressable objects sorted by database generated ID.
      responses:
        200:
          description: List of addressable
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/addressable'
        413:
          description: If the number returned exceeds the max limit.
        500:
          description: For unknown or unanticipated issues.
    put:
      description: Update the addressable identified by the ID or name in the object
        provided.
      requestBody:
        $ref: '#/components/requestBodies/addressable'
      responses:
        200:
          description: Boolean on success of update request
        400:
          description: For malformed or unparsable requests
        404:
          description: If no addressable with the provided ID is found.
        409:
          description: If the addressable is currently in use
        500:
          description: For unknown or unanticipated issues or for any duplicate name
            (key) error.
    post:
      description: Add a new addressable, where name must be unique.
      requestBody:
        $ref: '#/components/requestBodies/addressable'
      responses:
        200:
          description: New database generated ID for the new addressable
        400:
          description: For malformed or unparsable requests
        409:
          description: If the name is determined to not be unique with regard to others
        500:
          description: For unknown or unanticipated issues or for any duplicate name
            (key) error.
  /v1/addressable/address/{address}:
    get:
      description: Return addressable objects with given address. List may be empty
        if none are associated with the address.
      parameters:
      - name: address
        in: path
        description: Address (as in URL address)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: List of addressable matching address
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/addressable'
        400:
          description: For malformed or unparsable requests
        500:
          description: For unknown or unanticipated issues.
  /v1/addressable/id/{id}:
    delete:
      description: Remove the addressable designated by the database generated ID
        for the addressable.
      parameters:
      - name: id
        in: path
        description: Database generated ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Boolean on success of delete request
        404:
          description: If no addressable with the provided ID is found.
        409:
          description: If the adressable is still in use
        500:
          description: For unknown or unanticipated issues
  /v1/addressable/name/{name}:
    get:
      description: Return addressable with matching name, where name should be unique.
      parameters:
      - name: name
        in: path
        description: Unique name of addressable
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: addressable matching on name
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/addressable'
        400:
          description: For malformed or unparsable requests
        404:
          description: If no addressable with the provided name is found
        500:
          description: For unknown or unanticipated issues.
    delete:
      description: Remove the addressable designated by unique name ID..
      parameters:
      - name: name
        in: path
        description: Unique name of addressable
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Boolean on success of delete request
        400:
          description: For malformed or unparsable requests
        404:
          description: If no addressable with the provided name is found.
        500:
          description: For unknown or unanticipated issues.
  /v1/addressable/port/{port}:
    get:
      description: Return addressable objects with given port. List may be empty if
        none are associated with the port.
      parameters:
      - name: port
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: List of addressable matching port
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/addressable'
        400:
          description: For malformed or unparsable requests
        500:
          description: For unknown or unanticipated issues
  /v1/addressable/publisher/{publisher}:
    get:
      description: Return addressable objects with given publisher. List may be empty
        if none are associated with the publisher.
      parameters:
      - name: publisher
        in: path
        description: Publisher name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: List of addressable matching publisher
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/addressable'
        400:
          description: For malformed or unparsable requests
        500:
          description: For unknown or unanticipated issues.
  /v1/addressable/topic/{topic}:
    get:
      description: Return addressable objects with given topic. List may be empty
        if none are associated with the topic.
      parameters:
      - name: topic
        in: path
        description: Topic name, as used by the messaging provider.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: List of addressable matching topic
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/addressable'
        400:
          description: For malformed or unparsable requests
        500:
          description: for unknown or unanticipated issues.
  /v1/addressable/{id}:
    get:
      description: Fetch a specific addressable by database generated ID. May return
        null if no addressable matches on ID.
      parameters:
      - name: id
        in: path
        description: Database generated ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: addressable
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/addressable'
        404:
          description: If no addressable with the provided ID is found
        500:
          description: For unknown or unanticipated issues
  /v1/command:
    get:
      description: Return all command objects.
      responses:
        200:
          description: Boolean on success of get request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/command'
        413:
          description: if the number returned exceeds the max limit.
        500:
          description: for unknown or unanticipated errors
  /v1/command/device/{id}:
    get:
      description: Fetch commands by device ID.
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Boolean on success of get request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/command'
        404:
          description: If no device exists for the provided ID.
        500:
          description: For unknown or unanticipated issues.
  /v1/command/name/{name}:
    get:
      description: Return command objects with given name. Name is not unique for
        all of EdgeX but is unique per any associated device profile.
      parameters:
      - name: name
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Boolean on success of get request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/command'
        400:
          description: For malformed or unparsable requests
        500:
          description: For unknown or unanticipated issues.
  /v1/command/{id}:
    get:
      description: Fetch a specific command by database generated ID. May return null
        if no commands with the ID is found.
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Boolean on success of get request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/command'
        404:
          description: If no command with the provided ID is found.
        500:
          description: For unknown or unanticipated issues.
  /v1/config:
    get:
      description: Fetch the current state of the service's configuration.
      responses:
        200:
          description: The service's configuration as JSON document
        400:
          description: Request is invalid or unparseable or if the
            underlying configuration cannot be serialized to JSON properly.
  /v1/device:
    get:
      description: Return all devices sorted by ID.
      responses:
        200:
          description: List of device
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/device'
        413:
          description: If the number returned exceeds the max limit
        500:
          description: For unknown or unanticipated issues
    put:
      description: Update the device identified by the ID or name stored in the object
        provided.
      requestBody:
        $ref: '#/components/requestBodies/device'
      responses:
        200:
          description: Boolean on success of update request
        400:
          description: If the request is malformed or unparsable
        404:
          description: If the device cannot be found by the ID provided.
        500:
          description: For unknown or unanticipated issues.
    post:
      description: Add a new device, where name must be unique.
      requestBody:
        $ref: '#/components/requestBodies/device'
      responses:
        200:
          description: Database generated ID for the new device
        400:
          description: If the request is malformed or unparsable or if an associated
            object, such as addressable, profile, service cannot be found with the ID or
            name provided
        409:
          description: If the name is determined to not be unique with regard to others.
        500:
          description: For unknown or unanticipated issues.
  /v1/device/check/{token}:
    get:
      description: Obtain a device by either name or ID, where the ID must be a
        valid GUID.
      parameters:
      - name: token
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: JSON payload representing the device
        400:
          description: For incorrect or unparsable requests
        404:
          description: Device was not found
  /v1/device/id/{id}:
    delete:
      description: Remove the device designated by database generated ID. This does
        not remove associated objects such as addressable, service, profile, etc.
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Boolean on success of delete request
        400:
          description: For incorrect or unparsable requests
        404:
          description: If the device cannot be found by the ID provided.
  /v1/device/label/{label}:
    get:
      description: Find all devices having at least one label matching the label provided.
        List may be empty if no device match.
      parameters:
      - name: label
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: List of devices matching on specified label
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/device'
        400:
          description: For incorrect or unparsable requests
        500:
          description: For unknown or unanticipated issues.
  /v1/device/name/{name}:
    get:
      description: Return device matching given name, where device name should be unique.
      parameters:
      - name: name
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Device matching on name
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/device'
        400:
          description: For incorrect or unparsable requests
        404:
          description: If the device cannot be found by the name provided.
        500:
          description: For unknown or unanticipated issues.
    put:
      description: Set the admin or operating state of the device by unique name of
        the device.
      parameters:
      - name: name
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/device'
      responses:
        200:
          description: Boolean on success of update request
        400:
          description: For incorrect or unparsable requests
        404:
          description: If the device cannot be found by the name provided.
        500:
          description: For unknown or unanticipated issues.
    delete:
      description: Remove the device designated by unique name. This does not remove
        associated objects such as addressable, service, profile, etc.
      parameters:
      - name: name
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Boolean on success of delete request
        400:
          description: For incorrect or unparsable requests
        404:
          description: If the device cannot be found by the name provided.
  /v1/device/name/{name}/lastconnected/{time}:
    put:
      description: Update the last connected time of the device by unique name of
        the device.
      parameters:
      - name: time
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: name
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Boolean on success of update request
        400:
          description: For incorrect or unparsable requests
        404:
          description: If the device cannot be found by the name provided.
        500:
          description: For unknown or unanticipated issues.
  /v1/device/name/{name}/lastconnected/{time}/{notify}:
    put:
      description: Update the last connected time of the device by unique name of
        the device.
      parameters:
      - name: time
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: name
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: notify
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Boolean on success of update request
        400:
          description: For incorrect or unparsable requests
        404:
          description: If the device cannot be found by the name provided.
        500:
          description: For unknown or unanticipated issues.
  /v1/device/name/{name}/lastreported/{time}:
    put:
      description: Update the last reported time of the device by unique name of the
        device.
      parameters:
      - name: time
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: name
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Boolean on success of update request
        400:
          description: For incorrect or unparsable requests
        404:
          description: If the device cannot be found by the name provided.
        500:
          description: For unknown or unanticipated issues.
  /v1/device/name/{name}/lastreported/{time}/{notify}:
    put:
      description: Update the last reported time of the device by unique name of the
        device.
      parameters:
      - name: time
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: name
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: notify
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Boolean on success of update request
        400:
          description: For incorrect or unparsable requests
        404:
          description: If the device cannot be found by the name provided.
        500:
          description: For unknown or unanticipated issues.
  /v1/device/profile/{profileId}:
    get:
      description: Find all devices associated with the device profile with the specified
        profile database generated ID. List may be empty if no device match.
      parameters:
      - name: profileId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: List of devices associated with the device profile
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/device'
        404:
          description: If no device profile match on the ID provided.
        500:
          description: For unknown or unanticipated issues.
  /v1/device/profilename/{profilename}:
    get:
      description: Find all devices associated with the device profile with the specified
        profile name. List may be empty if no device match.
      parameters:
      - name: profilename
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: List of devices associated with the profile
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/device'
        400:
          description: For incorrect or unparsable requests
        404:
          description: If the device cannot be found by the ID provided.
        500:
          description: For unknown or unanticipated issues.
  /v1/device/service/{serviceId}:
    get:
      description: Find all devices associated with the device service with the specified
        device service database generated ID. List may be empty if no device
        match.
      parameters:
      - name: serviceId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: List of devices associated with the device service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/device'
        404:
          description: If no device service match on the ID provided.
        500:
          description: For unknown or unanticipated issues.
  /v1/device/servicename/{servicename}:
    get:
      description: Find all devices associated with the device service with the specified
        service name where device service names must be unique.
      parameters:
      - name: servicename
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: List of devices associated with the device service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/device'
        400:
          description: For incorrect or unparsable requests
        404:
          description: If the device cannot be found by the name provided.
        500:
          description: For unknown or unanticipated issues.
  /v1/device/{id}:
    get:
      description: Fetch a specific device by database generated ID. May return null
        if no device with the ID is found.
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Device matching on the ID
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/device'
        400:
          description: For incorrect or unparsable requests
        404:
          description: If the device cannot be found by the name provided.
        500:
          description: For unknown or unanticipated issues.
    put:
      description: Set the admin or operating state of the device, as referenced by
        the database generated ID of the device to the state provided, either enabled
        or disabled.
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/device'
      responses:
        200:
          description: Status code indicating success
        400:
          description: For incorrect or unparsable requests
        404:
          description: If no device exists by the ID provided.
        500:
          description: For unanticipated or unknown issues encountered.
  /v1/device/{id}/lastconnected/{time}:
    put:
      description: Update the last connected time of the device by database generated ID.
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: time
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Boolean on success of update request
        400:
          description: For incorrect or unparsable requests
        404:
          description: If the device cannot be found by the name provided.
        500:
          description: For unknown or unanticipated issues.
  /v1/device/{id}/lastconnected/{time}/{notify}:
    put:
      description: Update the last connected time of the device by database generated ID.
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: time
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: notify
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Boolean on success of update request
        400:
          description: For incorrect or unparsable requests
        404:
          description: If the device cannot be found by the name provided.
        500:
          description: For unknown or unanticipated issues.
  /v1/device/{id}/lastreported/{time}:
    put:
      description: Update the last reported time of the device by database generated ID.
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: time
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Boolean on success of update request
        400:
          description: For incorrect or unparsable requests
        404:
          description: If the device cannot be found by the name provided.
        500:
          description: For unknown or unanticipated issues.
  /v1/device/{id}/lastreported/{time}/{notify}:
    put:
      description: Update the last reported time of the device by database generated ID.
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: time
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: notify
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Boolean on success of update request
        400:
          description: For incorrect or unparsable requests
        404:
          description: If the device cannot be found by the name provided.
        500:
          description: For unknown or unanticipated issues.
  /v1/deviceprofile:
    get:
      description: Return all profiles sorted by ID.
      responses:
        200:
          description: List of profiles
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/deviceprofile'
        413:
          description: If the number returned exceeds the max limit
        500:
          description: For unknown or unanticipated issues
    put:
      description: Update the device profile identified by the ID or name stored in
        the object provided.
      requestBody:
        $ref: '#/components/requestBodies/deviceprofile'
      responses:
        200:
          description: Boolean on success of delete request
        400:
          description: For malformed or unparsable requests
        404:
          description: If the profile cannot be found by the ID provided
        409:
          description: If the profile contains duplicate command or profile names,
            or if the device profile is in use by one or more provision watchers or
            devices.
        500:
          description: For unknown or unanticipated issues
    post:
      description: Add a new device profile, and associated command objects, where name
        must be unique.
      requestBody:
        $ref: '#/components/requestBodies/deviceprofile'
      responses:
        200:
          description: Database generated ID for the new device profile
        400:
          description: For malformed or unparsable requests
        409:
          description: If the profile's name matches an existing device profile.
        500:
          description: For unknown or unanticipated issues
  /v1/deviceprofile/id/{id}:
    delete:
      description: Remove the device profile designated by database generated ID. This
        does not remove associated commands.
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Boolean on success of delete request
        404:
          description: If the device profile cannot be found with the ID provided
        409:
          description: If devices or provision watchers still reference the profile
        500:
          description: For unknown or unanticipated issues
  /v1/deviceprofile/label/{label}:
    get:
      description: Find all device profiles having at least one label matching the
        label provided. List may be empty if no profiles match.
      parameters:
      - name: label
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: List of device profile matching on specified label
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/deviceprofile'
        400:
          description: For malformed or unparsable requests
        500:
          description: for unknown or unanticipated issues
  /v1/deviceprofile/manufacturer/{manufacturer}:
    get:
      description: Find all device profiles with a manufacture attribute matching that
        provided. List may be empty if no profiles match.
      parameters:
      - name: manufacturer
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: List of device profile matching on specified manufacturer.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/deviceprofile'
        400:
          description: For malformed or unparsable requests
        500:
          description: For unknown or unanticipated issues
  /v1/deviceprofile/manufacturer/{manufacturer}/model/{model}:
    get:
      description: Find all device profiles with a manufacturer or model attribute matching
        that provided, either matching provides a hit). List may be empty if no profiles
        match.
      parameters:
      - name: model
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: manufacturer
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: List of device profile matching on specified manufacturer and/or
            model.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/devicereport'
        400:
          description: For malformed or unparsable requests
        500:
          description: For unknown or unanticipated issues
  /v1/deviceprofile/model/{model}:
    get:
      description: Find all device profiles with a model attribute matching that provided.
        List may be empty if no profiles match.
      parameters:
      - name: model
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: List of device profile matching on specified model.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/deviceprofile'
        400:
          description: For malformed or unparsable requests
        500:
          description: For unknown or unanticipated issues
  /v1/deviceprofile/name/{name}:
    get:
      description: Return the device profile matching given name, where profile names should
        be unique. May be null if no profiles matches on the name provided.
      parameters:
      - name: name
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Device profile matching on name
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/deviceprofile'
        400:
          description: For malformed or unparsable requests
        404:
          description: If the device profile cannot be found by the name provided
        500:
          description: For unknown or unanticipated issues
    delete:
      description: Remove the device profile designated by unique name. This does not
        remove associated commands.
      parameters:
      - name: name
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Boolean on success of delete request
        400:
          description: For malformed or unparsable requests
        404:
          description: If the device profile cannot be found by the name provided
        409:
          description: If devices or provision watchers still reference the profile
        500:
          description: For unknown or unanticipated issues
  /v1/deviceprofile/upload:
    post:
      description: Add a new device profile (and associated command objects) via YAML
        content, where name must be unique.
      responses:
        200:
          description: Database generated ID for the new device profile
        400:
          description: If the YAML file is empty
        409:
          description: If the profile's name matches an existing device profile.
        500:
          description: For unknown or unanticipated issues
  /v1/deviceprofile/uploadfile:
    post:
      description: Add a new device profile and associated command objects via YAML
        profile file where name must be unique.
      responses:
        200:
          description: Database generated ID for the new device profile
        400:
          description: If the YAML file is empty
        409:
          description: If the profile's name matches an existing device profile.
        500:
          description: for unknown or unanticipated issues
  /v1/deviceprofile/yaml/name/{name}:
    get:
      description: Return, in yaml form, the device profiles matching given name where profile
        names should be unique. May be null if no profiles matches on the name provided.
      parameters:
      - name: name
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Device profile in YAML matching on name
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/deviceprofile'
        400:
          description: For malformed or unparsable requests
        404:
          description: If the device profile cannot be found by the name provided
        500:
          description: For unknown or unanticipated issues
  /v1/deviceprofile/yaml/{id}:
    get:
      description: Fetch the profile identified by database generated ID and return
        as a YAML string.
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Device profile in YAML format
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/deviceprofile'
        404:
          description: if the device profile cannot be found by the ID provided
        500:
          description: for unknown or unanticipated issues
  /v1/deviceprofile/{id}:
    get:
      description: Fetch a specific profile by database generated ID. May return null
        if no profile with the ID is found.
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Device profile matching on ID
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/deviceprofile'
        404:
          description: If the device profile cannot be found by the ID provided
        500:
          description: For unknown or unanticipated issues
  /v1/devicereport:
    get:
      description: Return all device reports sorted by ID.
      responses:
        200:
          description: List of device reports
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/devicereport'
        413:
          description: If the number returned exceeds the max limit.
        500:
          description: For unknown or unanticipated issues
    put:
      description: Update the device report identified by the ID or name in the object
        provided. Id is used first, name is used second for identification purposes.
      requestBody:
        $ref: '#/components/requestBodies/devicereport'
      responses:
        200:
          description: Boolean on success of update request
        400:
          description: For malformed or unparsable requests
        404:
          description: If any referenced object cannot be found by its provided name
        500:
          description: For unknown or unanticipated issues
    post:
      description: Add a new device report where name must be unique.
      requestBody:
        $ref: '#/components/requestBodies/devicereport'
      responses:
        200:
          description: Database generated ID for the new device report
        400:
          description: For malformed or unparsable requests
        404:
          description: If any referenced object cannot be found by its provided name
        500:
          description: For unknown or unanticipated issues
  /v1/devicereport/devicename/{devicename}:
    get:
      description: Return device reports with associated device matching given name
        where device names should be unique. May be an empty list if no device matches
        on the name provided.
      parameters:
      - name: devicename
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: device reports matching on device name
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/devicereport'
        400:
          description: For malformed or unparsable requests
        500:
          description: For unknown or unanticipated issues
  /v1/devicereport/id/{id}:
    delete:
      description: Remove the device report designated by database generated ID.
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Boolean on success of delete request
        404:
          description: If no device report is found with the provided ID
        500:
          description: For unknown or unanticipated issues
  /v1/devicereport/name/{name}:
    get:
      description: Return device report matching given name where device report names should
        be unique. May be null if no report matches on the name provided.
      parameters:
      - name: name
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Device report matching on name
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/devicereport'
        400:
          description: For malformed or unparsable requests
        404:
          description: If no device report is found with the provided name
        500:
          description: For unknown or unanticipated issues
    delete:
      description: Remove the device report designated by name.
      parameters:
      - name: name
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Boolean on success of delete request
        400:
          description: For malformed or unparsable requests
        404:
          description: If no device report is found with the provided name
        500:
          description: For unknown or unanticipated issues
  /v1/devicereport/valueDescriptorsFor/{devicename}:
    get:
      description: Return list of value descriptor names associated with device reports
        associated with name of the device provided. May be an empty list if no device
        matches on the name provided.
      parameters:
      - name: devicename
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Value descriptor names
        400:
          description: For malformed or unparsable requests
        500:
          description: For unknown or unanticipated issues
  /v1/devicereport/{id}:
    get:
      description: Fetch a specific device report by database generated ID. May return
        null if no report with the ID is found.
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Device report matching on the ID
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/devicereport'
        404:
          description: If no device report is found with the provided ID
        500:
          description: For unknown or unanticipated issues
  /v1/deviceservice:
    get:
      description: Return all device services sorted by ID.
      responses:
        200:
          description: List of profiles
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/deviceservice'
        413:
          description: If the number of device services exceeds the current max limit.
        500:
          description: For unknown or unanticipated issues
    put:
      description: Update the device service identified by the ID or name stored in
        the object provided.P 404) if the device service cannot
        be found by the ID provided.
      requestBody:
        $ref: '#/components/requestBodies/deviceservice'
      responses:
        200:
          description: Boolean on success of update request
        400:
          description: For malformed or unparsable requests
        404:
          description: If no device service is found with the provided name or ID
        503:
          description: For unknown or unanticipated issues
    post:
      description: Add a new device service where name must be unique.
      requestBody:
        $ref: '#/components/requestBodies/deviceservice'
      responses:
        200:
          description: Database generated ID for the new device service
        400:
          description: No addressable was provided for the new device service
        404:
          description: If an associated addressable (by ID or name) is not found
        409:
          description: If the addressable name is determined to not be unique with
            regard to others
        500:
          description: For unknown or unanticipated issues
  /v1/deviceservice/addressable/{addressableId}:
    get:
      description: Find all device servicess associated with the addressable with the
        specified addressable database generated ID. List may be empty if
        no device service match.
      parameters:
      - name: addressableId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: List of device services associated with the addressable
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/deviceservice'
        404:
          description: If no addressablee is found for the provided ID
        500:
          description: For unknown or unanticipated issues
  /v1/deviceservice/addressablename/{addressablename}:
    get:
      description: Find all device serices associated with the addressable with the
        specified addressable name. List may be empty if no device services match.
      parameters:
      - name: addressablename
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: List of device services associated with the addressable
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/deviceservice'
        404:
          description: If no addressable is found for the provided ID
        500:
          description: For unknown or unanticipated issues
  /v1/deviceservice/id/{id}:
    delete:
      description: Remove the device service designated by database generated ID.
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Boolean on success of delete request
        404:
          description: If no device service is found for the provided ID
        500:
          description: For unknown or unanticipated issues
  /v1/deviceservice/label/{label}:
    get:
      description: Find all device services having at least one label matching the
        label provided. List may be empty if no device services match.
      parameters:
      - name: label
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: List of device service matching on specified label
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/deviceservice'
        400:
          description: For malformed or unparsable requests
        500:
          description: For unknown or unanticipated issues
  /v1/deviceservice/name/{name}:
    get:
      description: Return the device service matching given name where service names should
        be unique. May be null if no services matches on the name provided.
      parameters:
      - name: name
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Device service matching on name
        400:
          description: For malformed or unparsable requests
        404:
          description: If no device service is found for the provided ID
        500:
          description: For unknown or unanticipated issues
    delete:
      description: Remove the device service designated by name.
      parameters:
      - name: name
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Boolean on success of delete request
        400:
          description: For malformed or unparsable requests
        404:
          description: If no device service is found for the provided ID
        503:
          description: For unknown or unanticipated issues
  /v1/deviceservice/name/{name}/adminstate/{adminState}:
    put:
      description: Update the admin state of the device service by device service
        name.
      parameters:
      - name: name
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: adminState
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Boolean on success of update request
        400:
          description: For malformed or unparsable requests
        404:
          description: If no device service is found for the provided ID
        500:
          description: For unknown or unanticipated issues
  /v1/deviceservice/name/{name}/lastconnected/{time}:
    put:
      description: Update the last connected time of the device service by unique
        name of the device service.
      parameters:
      - name: time
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: name
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Boolean on success of update request
        400:
          description: For malformed or unparsable requests
        404:
          description: If no device service is found for the provided ID
        503:
          description: For unknown or unanticipated issues
  /v1/deviceservice/name/{name}/lastreported/{time}:
    put:
      description: Update the last reported time of the device service by unique name
        of the device service.
      parameters:
      - name: time
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: name
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Boolean on success of update request
        400:
          description: For malformed or unparsable requests
        404:
          description: If no device service is found for the provided ID
        500:
          description: For unknown or unanticipated issues
  /v1/deviceservice/name/{name}/opstate/{opState}:
    put:
      description: Update the op status time of the device service by unique name
        of the device service.
      parameters:
      - name: opState
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: name
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Boolean on success of update request
        400:
          description: For malformed or unparsable requests
        404:
          description: If no device service is found for the provided ID
        500:
          description: For unknown or unanticipated issues
  /v1/deviceservice/{id}:
    get:
      description: Fetch a specific device service by database generated ID. May return
        null if no service with the ID is found
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Device service matching on ID
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/deviceservice'
        404:
          description: If no device service is found for the provided ID
        500:
          description: For unknown or unanticipated issues
  /v1/deviceservice/{id}/adminstate/{adminState}:
    put:
      description: Update the admin state of the device service by database generated ID.
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: adminState
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Boolean on success of update request
        400:
          description: For malformed or unparsable requests
        404:
          description: If no device service is found for the provided ID
        500:
          description: For unknown or unanticipated issues
  /v1/deviceservice/{id}/lastconnected/{time}:
    put:
      description: Update the last connected time of the device service by database
        generated ID.
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: time
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Boolean on success of update request
        400:
          description: For malformed or unparsable requests
        404:
          description: If no device service is found for the provided ID
        500:
          description: For unknown or unanticipated issues
  /v1/deviceservice/{id}/lastreported/{time}:
    put:
      description: Update the last reported time of the device service by database
        generated ID.
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: time
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Boolean on success of update request
        400:
          description: For malformed or unparsable requests
        404:
          description: If no device service is found for the provided ID
        503:
          description: For unknown or unanticipated issues
  /v1/deviceservice/{id}/opstate/{opState}:
    put:
      description: Update the op state of the device service by database generated ID.
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opState
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Boolean on success of update request
        400:
          description: For malformed or unparsable requests
        404:
          description: If no device service is found for the provided ID
        500:
          description: For unknown or unanticipated issues
  /v1/ping:
    get:
      description: ping
      responses:
        200:
          description: Successful Response
  /v1/provisionwatcher:
    get:
      description: Return all provision watcher objects sorted by database generated ID.
      responses:
        200:
          description: List of provision watchers
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/provisionwatcher'
        413:
          description: If the number returned exceeds the max limit.
        500:
          description: For unknown or unanticipated issues.
    put:
      description: Update the provision watcher identified by the ID or name in the
        object provided.
      requestBody:
        $ref: '#/components/requestBodies/provisionwatcher'
      responses:
        200:
          description: Boolean on success of update request
        400:
          description: For malformed or unparsable requests
        404:
          description: If no provision watcher with the provided ID is found.
        500:
          description: For unknown or unanticipated issues or for any duplicate name
            (key) error.
    post:
      description: Add a new provision watcher where name must be unique.
      requestBody:
        $ref: '#/components/requestBodies/provisionwatcher'
      responses:
        200:
          description: New database generated ID for the new provision watcher
        400:
          description: For malformed or unparsable requests
        409:
          description: If an associated object such as profile cannot be found
            with the ID or name provided or if the watcher name is determined to not
            be unique with regard to others
        500:
          description: For unknown or unanticipated issues or for any duplicate name
            (key) error.
  /v1/provisionwatcher/{id}:
    get:
      description: Fetch a specific provision watcher by database generated ID. May
        return null if no provision watcher matches on ID.
      parameters:
        - name: id
          in: path
          description: Database generated ID
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        200:
          description: Provision watcher
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/provisionwatcher'
        404:
          description: If no provision watcher with the provided ID is found.
        500:
          description: For unknown or unanticipated issues
  /v1/provisionwatcher/id/{id}:
    delete:
      description: Remove the provision watcher designated by the database generated
        ID for the provision watcher.
      parameters:
        - name: id
          in: path
          description: Database generated ID
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        200:
          description: Boolean on success of delete request
        404:
          description: If no provision watcher with the provided ID is found.
        500:
          description: For unknown or unanticipated issues
  /v1/provisionwatcher/identifier/{key}/{value}:
    get:
      description: Find the provision watchers associated with the ID key/value
        pair.
      parameters:
      - name: key
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: value
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: List of provision watchers associated with the device service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/provisionwatcher'
        400:
          description: For malformed or unparsable requests
        500:
          description: For unknown or unanticipated issues.
  /v1/provisionwatcher/name/{name}:
    get:
      description: Return provision watcher with matching name where name should be unique.
        May be null if none match.
      parameters:
      - name: name
        in: path
        description: Unique name of provision watcher
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Provision watcher matching on name
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/provisionwatcher'
        400:
          description: For malformed or unparsable requests
        404:
          description: If no provision watcher with the provided name is found.
        500:
          description: For unknown or unanticipated issues.
    delete:
      description: Remove the provision watcher designated by unique name ID.
      parameters:
      - name: name
        in: path
        description: Unique name of provision watcher
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Boolean on success of delete request
        400:
          description: For malformed or unparsable requests
        404:
          description: If no provision watcher with the provided name is found.
        500:
          description: For unknown or unanticipated issues.
  /v1/provisionwatcher/profile/{profileId}:
    get:
      description: Find all provision watchers associated with the device profile with
        the specified profile database generated ID. List may be empty if
        no provision watchers match.
      parameters:
      - name: profileId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: List of provision watchers associated with the device profile
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/provisionwatcher'
        404:
          description: If no device profile match on the ID provided.
        500:
          description: For unknown or unanticipated issues.
  /v1/provisionwatcher/profilename/{profilename}:
    get:
      description: Find all provision watchers associated with the device profile with
        the specified profile name. List may be empty if no provision watcher match.
      parameters:
      - name: profilename
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: List of provision watchers associated with the profile
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/provisionwatcher'
        400:
          description: For malformed or unparsable requests
        404:
          description: If no device profile match on the ID provided.
        500:
          description: For unknown or unanticipated issues.
  /v1/provisionwatcher/service/{serviceId}:
    get:
      description: Find the provision watchers associated with the device service with
        the specified service database generated ID. List may be empty if
        no provision watchers match.
      parameters:
      - name: serviceId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: List of provision watchers associated with the device service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/provisionwatcher'
        404:
          description: If no device service match on the ID provided.
        500:
          description: For unknown or unanticipated issues.
  /v1/provisionwatcher/servicename/{servicename}:
    get:
      description: Find the provision watchers associated with the device service with
        the specified service name. List may be none if no provision watcher match.
      parameters:
      - name: servicename
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: List of provision watchers associated with the device service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/provisionwatcher'
        400:
          description: For malformed or unparsable requests
        404:
          description: If no device service match on the ID provided.
        500:
          description: For unknown or unanticipated issues.
  /version:
    get:
      description: Get the API version
      responses:
        200:
          description: The service's API version as JSON document
components:
  schemas:
    addressable:
      title: addressable
      required:
      - method
      type: object
      properties:
        address:
          title: address
          type: string
        created:
          title: created
          type: integer
        id:
          title: id
          type: string
        method:
          title: method
          type: string
        modified:
          title: modified
          type: integer
        name:
          title: name
          type: string
        origin:
          title: origin
          type: integer
        password:
          title: password
          type: string
        path:
          title: path
          type: string
        port:
          title: port
          type: integer
        protocol:
          title: protocol
          type: string
        publisher:
          title: publisher
          type: string
        topic:
          title: topic
          type: string
        user:
          title: user
          type: string
    autoevent:
      title: autoevent
      type: object
      properties:
        frequency:
          title: frequency
          type: string
        onchange:
          title: onchange
          type: boolean
        resource:
          title: resource
          type: string
    command:
      title: command
      type: object
      properties:
        created:
          title: created
          type: integer
        get:
          $ref: '#/components/schemas/command_get'
        id:
          title: id
          type: string
        modified:
          title: modified
          type: integer
        name:
          title: name
          type: string
        origin:
          title: origin
          type: integer
        put:
          $ref: '#/components/schemas/command_put'
    device:
      title: device
      type: object
      properties:
        adminState:
          title: adminState
          type: string
        autoevents:
          type: array
          items:
            title: autoevent
            $ref: '#/components/schemas/autoevent'
        created:
          title: created
          type: integer
        description:
          title: description
          type: string
        id:
          title: id
          type: string
        labels:
          title: labels
          uniqueItems: false
          type: array
          items:
            title: labels
            type: string
        lastConnected:
          title: lastConnected
          type: integer
        lastReported:
          title: lastReported
          type: integer
        modified:
          title: modified
          type: integer
        name:
          title: name
          type: string
        operatingState:
          title: operatingState
          type: string
        origin:
          title: origin
          type: integer
        protocols:
          type: object
          additionalProperties: true
          example: {"modbus-tcp":{"host":"localhost","port":"1234","unitID":"1"}}
      description: Device or sensor supplying data and taking actuation commands
    deviceprofile:
      title: deviceprofile
      type: object
      properties:
        created:
          title: created
          type: integer
        description:
          title: description
          type: string
        id:
          title: id
          type: string
        labels:
          title: labels
          uniqueItems: false
          type: array
          items:
            title: labels
            type: string
        manufacturer:
          title: manufacturer
          type: string
        model:
          title: model
          type: string
        modified:
          title: modified
          type: integer
        name:
          title: name
          type: string
        origin:
          title: origin
          type: integer
        resources:
          title: resources
          uniqueItems: false
          type: array
          items:
            title: resources
            type: string
      description: Template describing devices and sensors of the same nature in reporting
        the same data and offering the same commands
    devicereport:
      title: devicereport
      type: object
      properties:
        action:
          title: action
          type: string
        created:
          title: created
          type: integer
        device:
          title: device
          type: string
        expected:
          title: expected
          uniqueItems: false
          type: array
          items:
            title: expected
            type: string
        id:
          title: id
          type: string
        modified:
          title: modified
          type: integer
        name:
          title: name
          type: string
        origin:
          title: origin
          type: integer
      description: Description of values (value descriptors) that should be collected
        per device on a interval action
    deviceservice:
      title: deviceservice
      type: object
      properties:
        addressable:
          $ref: '#/components/schemas/device_addressable'
        adminState:
          title: adminState
          type: string
        created:
          title: created
          type: integer
        description:
          title: description
          type: string
        id:
          title: id
          type: string
        labels:
          title: labels
          uniqueItems: false
          type: array
          items:
            title: labels
            type: string
        lastConnected:
          title: lastConnected
          type: integer
        lastReported:
          title: lastReported
          type: integer
        modified:
          title: modified
          type: integer
        name:
          title: name
          type: string
        operatingState:
          title: operatingState
          type: string
        origin:
          title: origin
          type: integer
      description: Manages devices and interfaces with core data
    provisionwatcher:
      title: provisionwatcher
      type: object
      properties:
        created:
          title: created
          type: integer
        id:
          title: id
          type: string
        modified:
          title: modified
          type: integer
        name:
          title: name
          type: string
        origin:
          title: origin
          type: integer
    command_get_responses:
      type: object
      properties:
        code:
          title: code
          type: string
        description:
          title: description
          type: string
        expectedValues:
          title: expectedValues
          type: string
    command_get:
      type: object
      properties:
        responses:
          $ref: '#/components/schemas/command_get_responses'
        path:
          title: path
          type: string
    command_put:
      type: object
      properties:
        path:
          title: path
          type: string
    device_addressable:
      type: object
      properties:
        address:
          title: address
          type: string
        created:
          title: created
          type: integer
        id:
          title: id
          type: string
        modified:
          title: modified
          type: integer
        name:
          title: name
          type: string
        origin:
          title: origin
          type: integer
        password:
          title: password
          type: string
        path:
          title: path
          type: string
        port:
          title: port
          type: integer
        protocol:
          title: protocol
          type: string
        publisher:
          title: publisher
          type: string
        topic:
          title: topic
          type: string
        user:
          title: user
          type: string
  requestBodies:
    deviceservice:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/deviceservice'
      required: true
    device:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/device'
      required: true
    provisionwatcher:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/provisionwatcher'
      required: true
    addressable:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/addressable'
      required: true
    deviceprofile:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/deviceprofile'
      required: true
    devicereport:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/devicereport'
      required: true
