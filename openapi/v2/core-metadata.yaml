openapi: 3.0.0
info:
  title: Edgex Foundry - Core Metadata API
  description: "This is the definition of the API for the Core Metadata service in the EdgeX Foundry IOT microservice platform. Core Metadata is responsible for all information related to provisioned devices and their associated services."
  version: 2.x
servers:
  - url: 'http://localhost:48081/api/v2'
    description: URL for local development and testing
components:
  schemas:
    AddDeviceRequest:
      allOf:
        - $ref: '#/components/schemas/BaseRequest'
      description: "A request to add a new device associated with a specific device service and conforming to a specific device profile."
      type: object
      properties:
        device:
          $ref: '#/components/schemas/CreateDevice'
      required:
        - device
    AddDeviceProfileRequest:
      allOf:
        - $ref: '#/components/schemas/BaseRequest'
      description: "A request to add a new device profile. When making this request, the ID property should not be populated."
      type: object
      properties:
        profile:
          $ref: '#/components/schemas/CreateDeviceProfile'
      required:
        - profile
    AddDeviceServiceRequest:
      allOf:
        - $ref: '#/components/schemas/BaseRequest'
      description: "A request to add a new DeviceService - name must be unique"
      type: object
      properties:
        service:
          $ref: '#/components/schemas/CreateDeviceService'
      required:
        - service
    AutoEvent:
      type: object
      properties:
        frequency:
          type: string
          description: Frequency indicates how often the specific resource needs to be polled. It represents as a duration string. The format of this field is to be an unsigned integer followed by a unit which may be "ms", "s", "m" or "h" representing milliseconds, seconds, minutes or hours. Eg, "100ms", "24h"
        onChange:
          type: boolean
          description: OnChange indicates whether the device service will generate an event only, if the reading value is different from the previous one. If true, only generate events when readings change
        resource:
          type: string
          description: Resource indicates the name of the resource in the device profile which describes the event to generate
      required:
        - frequency
        - resource
    BaseRequest:
      description: "Defines basic properties which all use-case specific request DTO instances should support."
      type: object
      properties:
        requestId:
          description: "Uniquely identifies this request. For implementation, recommend this value be generated by the type's constructor."
          type: string
          format: uuid
          example: "e6e8a2f4-eb14-4649-9e2b-175247911369"
    BaseResponse:
      description: "Defines basic properties which all use-case specific response DTO instances should support"
      type: object
      properties:
        apiVersion:
          description: "A version number shows the API version in DTOs."
          type: string
        requestId:
          description: "Uniquely identifies the request that resulted in this response."
          type: string
          format: uuid
          example: "e6e8a2f4-eb14-4649-9e2b-175247911369"
        statusCode:
          description: "A numeric code signifying the operational status of the response."
          type: integer
        message:
          description: "A field that can contain a free-form message, such as an error message."
          type: string
    BaseWithIdResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
      description: "Defines basic properties which all use-case specific response DTO instances should support"
      type: object
      properties:
        id:
          description: "The unique identifier for the instance."
          type: string
          format: uuid
    Command:
      type: object
      properties:
        created:
          type: integer
          description: Created is a timestamp indicating when the entity was created.
        modified:
          type: integer
        id:
          type: string
          format: uuid
        name:
          type: string
          description: Command name (unique on the profile). Must name a DeviceCommand or a DeviceResource in this profile
        get:
          type: boolean
          description: Get Command enabled. At least one of Get and Put must be present
        put:
          type: boolean
          description: Put Command enabled. At least one of Get and Put must be present
      required:
        - name
    Device:
      type: object
      properties:
        apiVersion:
          type: string
        id:
          type: string
          format: uuid
          description: ID uniquely identifies the device, a UUID for example
        created:
          type: integer
          description: Created is a timestamp indicating when the entity was created.
        modified:
          type: integer
          description: Modified is a timestamp indicating when the entity was last modified.
        name:
          type: string
          description: Unique name for identifying a device
        description:
          type: string
        adminState:
          type: string
          description: Admin state (locked/unlocked)
        operatingState:
          type: string
          description: Operating state (enabled/disabled)
        lastConnected:
          type: integer
          description: Time (milliseconds) that the device last provided any feedback or responded to any request
        lastReported:
          type: integer
          description: Time (milliseconds) that the device reported data to the core microservice
        labels:
          type: array
          description: Other labels applied to the device to help with searching
          items:
            type: string
        location:
          type: object
          description: Device service specific location (interface{} is an empty interface so it can be anything)
        serviceName:
          type: string
          description: Associated Device Service - One per device
        profileName:
          type: string
          description: Associated Device Profile - Describes the device
        autoEvents:
          type: array
          description: A list of auto-generated events coming from the device
          items:
            $ref: '#/components/schemas/AutoEvent'
        protocols:
          type: object
          description: A map of supported protocols for the given device
          additionalProperties:
            $ref: '#/components/schemas/ProtocolProperties'
        notify:
          type: boolean
          description: If the 'notify' property is set to true, the device service managing the device will receive a notification
    CreateDevice:
      type: object
      properties:
        name:
          type: string
          description: Unique name for identifying a device
        description:
          type: string
        adminState:
          type: string
          description: Admin state (locked/unlocked)
        operatingState:
          type: string
          description: Operating state (enabled/disabled)
        labels:
          type: array
          description: Other labels applied to the device to help with searching
          items:
            type: string
        location:
          type: object
          description: Device service specific location (interface{} is an empty interface so it can be anything)
        serviceName:
          type: string
          description: Associated Device Service - One per device
        profileName:
          type: string
          description: Associated Device Profile - Describes the device
        autoEvents:
          type: array
          description: A list of auto-generated events coming from the device
          items:
            $ref: '#/components/schemas/AutoEvent'
        protocols:
          type: object
          description: A map of supported protocols for the given device
          additionalProperties:
            $ref: '#/components/schemas/ProtocolProperties'
        notify:
          type: boolean
          description: If the 'notify' property is set to true, the device service managing the device will receive a notification
      required:
        - name
        - adminState
        - operatingState
        - serviceName
        - profileName
        - protocols
    UpdateDevice:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: ID uniquely identifies the device, a UUID for example
        name:
          type: string
          description: Unique name for identifying a device
        description:
          type: string
          description: Description of the device
        adminState:
          type: string
          description: Admin state (locked/unlocked)
        operatingState:
          type: string
          description: Operating state (enabled/disabled)
        labels:
          type: array
          description: Other labels applied to the device to help with searching
          items:
            type: string
        location:
          type: object
          description: Device service specific location (interface{} is an empty interface so it can be anything)
        serviceName:
          type: string
          description: Associated Device Service - One per device
        profileName:
          type: string
          description: Associated Device Profile - Describes the device
        autoEvents:
          type: array
          description: A list of auto-generated events coming from the device
          items:
            $ref: '#/components/schemas/AutoEvent'
        protocols:
          type: object
          description: A map of supported protocols for the given device
          additionalProperties:
            $ref: '#/components/schemas/ProtocolProperties'
        notify:
          type: boolean
          description: If the 'notify' property is set to true, the device service managing the device will receive a notification
    DeviceProfile:
      description: "A profile defining a class of device to be onboarded, including its capabilities and data format."
      type: object
      properties:
        apiVersion:
          type: string
        id:
          type: string
          format: uuid
          description: Uniquely identifies this request. For implementation, recommend this value be generated by the type's constructor
        name:
          type: string
          description: Non-database identifier (must be unique)
        description:
          type: string
          description: Description.
        created:
          type: integer
          description: Created is a timestamp indicating when the entity was created.
        modified:
          type: integer
          description: Modified is a timestamp indicating when the entity was last modified.
        manufacturer:
          type: string
          description: Manufacturer of the device
        model:
          type: string
          description: Model of the device
        labels:
          type: array
          description: Labels used to search for groups of profiles
          items:
            type: string
        deviceResources:
          type: array
          items:
            $ref: '#/components/schemas/DeviceResource'
        deviceCommands:
          type: array
          items:
            $ref: '#/components/schemas/ProfileResource'
        coreCommands:
          type: array
          description: List of commands to Get/Put information for devices associated with this profile
          items:
            $ref: '#/components/schemas/Command'
    CreateDeviceProfile:
      description: "A profile defining a class of device to be onboarded, including its capabilities and data format."
      type: object
      properties:
        name:
          type: string
          description: Non-database identifier (must be unique)
        description:
          type: string
          description: Description.
        manufacturer:
          type: string
          description: Manufacturer of the device
        model:
          type: string
          description: Model of the device
        labels:
          type: array
          description: Labels used to search for groups of profiles
          items:
            type: string
        deviceResources:
          type: array
          items:
            $ref: '#/components/schemas/DeviceResource'
        deviceCommands:
          type: array
          items:
            $ref: '#/components/schemas/ProfileResource'
        coreCommands:
          type: array
          description: List of commands to Get/Put information for devices associated with this profile
          items:
            $ref: '#/components/schemas/Command'
      required:
        - name
        - deviceResources
    UpdateDeviceProfile:
      description: "A profile defining a class of device to be onboarded, including its capabilities and data format."
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Uniquely identifies this request. For implementation, recommend this value be generated by the type's constructor.
        name:
          type: string
          description: Non-database identifier (must be unique)
        description:
          type: string
          description: Description
        manufacturer:
          type: string
          description: Manufacturer of the device
        model:
          type: string
          description: Model of the device
        labels:
          type: array
          description: Labels used to search for groups of profiles
          items:
            type: string
        deviceResources:
          type: array
          items:
            $ref: '#/components/schemas/DeviceResource'
        deviceCommands:
          type: array
          items:
            $ref: '#/components/schemas/ProfileResource'
        coreCommands:
          type: array
          description: List of commands to Get/Put information for devices associated with this profile
          items:
            $ref: '#/components/schemas/Command'
    DeviceProfileResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
      type: object
      properties:
        profile:
          $ref: '#/components/schemas/DeviceProfile'
    MultiDeviceProfilesResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
      type: object
      properties:
        profiles:
          type: array
          items:
            $ref: '#/components/schemas/DeviceProfile'
    DeviceResource:
      description: "DeviceResource represents a value on a device that can be read or written."
      type: object
      properties:
        description:
          type: string
        name:
          type: string
        tag:
          type: string
        properties:
          $ref: '#/components/schemas/PropertyValue'
        attributes:
          type: object
          description: Each Device Service should define required and optional keys
          additionalProperties:
            type: string
      required:
        - name
    DeviceResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
      type: object
      properties:
        device:
          $ref: '#/components/schemas/Device'
    MultiDevicesResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
      type: object
      properties:
        devices:
          type: array
          items:
            $ref: '#/components/schemas/Device'
    DeviceService:
      description: "A DeviceService is responsible for proxying connectivity between a set of devices and the EdgeX Foundry core services."
      type: object
      properties:
        apiVersion:
          type: string
        created:
          type: integer
          description: Created is a timestamp indicating when the entity was created.
        modified:
          type: integer
          description: Modified is a timestamp indicating when the entity was last modified.
        description:
          type: string
        id:
          type: string
          format: uuid
          description: ID uniquely identifies the device, a UUID for example
        name:
          type: string
          description: Description of the device service
        lastConnected:
          type: integer
          description: time in milliseconds that the device service last provided any feedback or responded to any request
        lastReported:
          type: integer
          description: time in milliseconds that the device service last reported data to the core microservice
        operatingState:
          type: string
          description: operational state - either enabled or disabled
        labels:
          type: array
          description: tags or other labels applied to the device service for search or other identification needs
          items:
            type: string
        baseAddress:
          type: string
          description: BaseAddress is a fully qualified URI, e.g. <protocol>:\\<hostname>:<port>/<optional path>
        adminState:
          type: string
          description: Device Service Admin State
      required:
        - name
        - operatingState
        - adminState
        - baseAddress
    CreateDeviceService:
      description: "A DeviceService is responsible for proxying connectivity between a set of devices and the EdgeX Foundry core services."
      type: object
      properties:
        name:
          type: string
          description: Description of the device service
        description:
          type: string
        adminState:
          type: string
          description: Device Service Admin State
        operatingState:
          type: string
          description: operational state - either enabled or disabled
        labels:
          type: array
          description: tags or other labels applied to the device service for search or other identification needs
          items:
            type: string
        baseAddress:
          type: string
          description: BaseAddress is a fully qualified URI, e.g. <protocol>:\\<hostname>:<port>/<optional path>
      required:
        - name
        - operatingState
        - adminState
        - baseAddress
    UpdateDeviceService:
      description: "A DeviceService is responsible for proxying connectivity between a set of devices and the EdgeX Foundry core services."
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: ID uniquely identifies the device, a UUID for example
        name:
          type: string
          description: Description of the device service
        operatingState:
          type: string
          description: operational state - either enabled or disabled
        labels:
          type: array
          description: tags or other labels applied to the device service for search or other identification needs
          items:
            type: string
        baseAddress:
          type: string
          description: BaseAddress is a fully qualified URI, e.g. <protocol>:\\<hostname>:<port>/<optional path>
        adminState:
          type: string
          description: Device Service Admin State
    DeviceServiceResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
      type: object
      properties:
        service:
          $ref: '#/components/schemas/DeviceService'
    MultiDeviceServicesResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
      type: object
      properties:
        services:
          type: array
          items:
            $ref: '#/components/schemas/DeviceService'
    ErrorResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
      description: "A response type for returning a generic error to the caller."
      type: object
    ConfigResponse:
      description: "Provides a response containing the configuration for the targeted service."
      type: object
      properties:
        config:
          description: "A string-ified representation of the service's configuration. For purposes of this specification, a string has been used since configuration structure differs from service to service."
          type: string
    MetricsResponse:
      description: "A response from the /metrics endpoint providing memory and cpu utilization stats."
      type: object
      properties:
        memAlloc:
          description: "Alloc is bytes of allocated heap objects."
          type: integer
        memFrees:
          description: "Frees is the cumulative count of heap objects freed."
          type: integer
        memLiveObjects:
          description: "The number of live objects is Mallocs - Frees."
          type: integer
        memMallocs:
          description: "The cumulative count of heap objects allocated."
          type: integer
        memSys:
          description: "The total bytes of memory obtained from the OS."
          type: integer
        memTotalAlloc:
          description: "Cumulative bytes allocated for heap objects."
          type: integer
        cpuBusyAvg:
          description: "Indicates the average level of CPU utilization"
          type: number
    PingResponse:
      type: object
      properties:
        timestamp:
          description: "Outputs the current server timestamp in RFC1123 format"
          example: "Mon, 02 Jan 2006 15:04:05 MST"
          type: string
    ProfileResource:
      description: "Defines read/write capabilities native to the device"
      type: object
      properties:
        name:
          type: string
        get:
          type: array
          items:
            $ref: '#/components/schemas/ResourceOperation'
        set:
          type: array
          items:
            $ref: '#/components/schemas/ResourceOperation'
      required:
        - name
    PropertyValue:
      description: "Defines constraints with regard to the range of acceptable values assigned to an event reading and defined as a property within a device profile."
      type: object
      properties:
        type:
          type: string
          description: "ValueDescriptor Type of property after transformations. Optional: uint8, uint16, uint32, uint64, int8, int16, int32, int64, float32, float64, bool, string, binary, uint8array, uint16array, uint32array, uint64array, int8array, int16array, int32array, int64array, float32array, float64array, boolarray."
        readWrite:
          type: string
          description: "Read/Write Permissions set for this property. Optional: R, W, RW"
        units:
          type: string
          description: A string which describes the measurement units associated with a property value  Examples include "deg/s", "degreesFarenheit", "G", or "% Relative Humidity"
        minimum:
          type: string
          description: Minimum value that can be get/set from this property
        maximum:
          type: string
          description: Maximum value that can be get/set from this property
        defaultValue:
          type: string
          description: Default value set to this property if no argument is passed. If present, should be compatible with the Type field
        mask:
          type: string
          description: Mask to be applied prior to get/set of property. Only valid where Type is one of the integer types.
        shift:
          type: string
          description: Shift to be applied after masking, prior to get/set of property. Only valid where Type is one of the integer types
        scale:
          type: string
          description: Multiplicative factor to be applied after shifting, prior to get/set of property. Only valid where Type is one of the integer or float types
        offset:
          type: string
          description: Additive factor to be applied after multiplying, prior to get/set of property. Only valid where Type is one of the integer or float types
        base:
          type: string
          description: 'Base for property to be applied to, leave 0 for no power operation (i.e. base ^ property: 2 ^ 10). Only valid where Type is one of the integer or float types.'
        assertion:
          type: string
          description: Required value of the property, set for checking error state.  Failing an assertion condition will mark the device with an error state
        mediaType:
          type: string
          description: A string value used to indicate the type of binary data if Type=binary
      required:
        - type
        - readwrite
    ProtocolProperties:
      type: object
      additionalProperties:
        type: string
    ResourceOperation:
      description: "Defines an operation of which a device is capable."
      type: object
      properties:
        index:
          type: string
        operation:
          type: string
        deviceResource:
          type: string
          description: The replacement of Object field. Must name a DeviceResource in this profile
        parameter:
          type: string
          description: If present, should be compatible with the Type field of the named DeviceResource
        mappings:
          type: object
          description: Only valid where the Type of the named DeviceResource is String
          additionalProperties:
            type: string
      required:
        - deviceResource
    RequestEnvelope:
      description: "A wrapper type for use when sending a request to the /batch endpoint. Each individual request type in the HTTP request should be wrapped in an envelope to facilitate instantiation of the correct routing handler. See property descriptions below for more details."
      type: object
      properties:
        action:
          type: string
          description: "Indicates the type of operation applicable to the wrapped request. Valid values are 'create','read','update','delete', and 'command'"
        content:
          type: string
          format: byte
          description: "A byte array containing a marshalled request type instance. This is the specific, semantically identifiable request -- such as an AddDeviceRequest."
        strategy:
          type: string
          description: "Indicates the expectation of whether a response should be produced synchronously or asynchronously. If asynchronously, desire for either a polling or push/callback should be provided. Valid values are 'sync','async-push','async-poll'"
        type:
          type: string
          description: "The name of the type applicable to the request instance contained in the 'content' property."
        version:
          description: "Proposed field for explicitly defining version of request DTO. This is for advertising compatibility between a publisher/subscriber or requester/receiver"
          type: string
          example: "2.0.x"
      required:
        - action
        - content
        - strategy
        - type
        - version
    ResponseEnvelope:
      description: "A wrapper type for use when receiving a response from the /batch endpoint. Each individual response type in the HTTP response should be wrapped in an envelope to facilitate unmarshalling by the client. See property descriptions below for more details."
      type: object
      properties:
        action:
          type: string
          description: "Indicates the type of operation applicable to the wrapped response. This should be recapitulated from the originating request. Valid values are 'create','read','update','delete', and 'command'"
        content:
          type: string
          format: byte
          description: "A byte array containing a marshalled response type instance. This is the specific, semantically identifiable response -- such as an BaseWithIdResponse."
        strategy:
          type: string
          description: "Recapitulates the expectation with regard to the delivery of response that was specified on the originating request. Valid values are 'sync','async-push','async-poll'"
        type:
          type: string
          description: "The name of the type applicable to the response instance contained in the 'content' property."
        version:
          description: "Proposed field for explicitly defining version of response DTO. This is for advertising compatibility between a publisher/subscriber or requester/receiver"
          type: string
          example: "2.0.x"
      required:
        - action
        - content
        - strategy
        - type
        - version
    UpdateDeviceRequest:
      allOf:
        - $ref: '#/components/schemas/BaseRequest'
      description: "A request to update an existing device definition. 'id' and 'deviceName' must be populated in order to identify the device. If the 'notify' property is set to true, the device service managing the device will receive a notification. Any other property that is populated in the request will be updated. Empty/blank properties will not be considered."
      type: object
      properties:
        device:
          $ref: '#/components/schemas/UpdateDevice'
      required:
        - device
    UpdateDeviceProfileRequest:
      allOf:
        - $ref: '#/components/schemas/BaseRequest'
      description: "A request to update an existing device profile definition. 'id' and 'name' must be populated in order to identify the profile. Any other property that is populated in the request will be updated. Empty/blank properties will not be considered."
      type: object
      properties:
        profile:
          $ref: '#/components/schemas/UpdateDeviceProfile'
      required:
        - profile
    UpdateDeviceServiceRequest:
      allOf:
        - $ref: '#/components/schemas/BaseRequest'
      description: "A request to update an existing device service definition. 'id' and 'deviceServiceName' must be populated in order to identify the service. Any other property that is populated in the request will be updated. Empty/blank properties will not be considered."
      type: object
      properties:
        service:
          $ref: '#/components/schemas/UpdateDeviceService'
      required:
        - service
    VersionResponse:
      description: "A response returned from the /version endpoint whose purpose is to report out the latest version supported by the service."
      type: object
      properties:
        version:
          description: "The latest version supported by the service."
          type: string
  parameters:
    offsetParam:
      in: query
      name: offset
      required: false
      schema:
        type: integer
        minimum: 0
        default: 0
      description: "The number of items to skip before starting to collect the result set."
    limitParam:
      in: query
      name: limit
      required: false
      schema:
        type: integer
        minimum: -1
        default: 20
      description: "The numbers of items to return.  Specify -1 will return all remaining items after offset.  The maximum will be the MaxResultCount as defined in the configuration of service."
    correlatedRequestHeader:
      in: header
      name: X-Correlation-ID
      description: "A unique identifier correlating a request to its associated response, facilitating tracing through being included on requests originating from the initiating request."
      schema:
        type: string
        format: uuid
      required: true
      example: "14a42ea6-c394-41c3-8bcd-a29b9f5e6835"
    labelsParam:
      in: query
      name: labels
      required: false
      schema:
        type: string
      description: "Allows for querying a given object by associated user-defined label. More than one label may be specified via a comma-delimited list."
  headers:
    correlatedResponseHeader:
      description: "A response header that returns the unique correlation ID used to initiate the request."
      schema:
        type: string
        format: uuid
      required: true
      example: "14a42ea6-c394-41c3-8bcd-a29b9f5e6835"
  examples:
    200Example:
      value:
        apiVersion: "v2"
        requestId: "2463bff9-aa53-4bc4-bebf-42fe81146ea8"
        statusCode: 200
        message: ""
    400Example:
      value:
        apiVersion: "v2"
        requestId: "73f0932c-0148-11eb-adc1-0242ac120002"
        statusCode: 400
        message: "Bad Request"
    404Example:
      value:
        apiVersion: "v2"
        requestId: "84c9489c-0148-11eb-adc1-0242ac120002"
        statusCode: 404
        message: "Not Found"
    409Example:
      value:
        apiVersion: "v2"
        requestId: "8a41b3f4-0148-11eb-adc1-0242ac120002"
        statusCode: 409
        message: "Data Duplicate"
    423Example:
      value:
        apiVersion: "v2"
        requestId: "8a41b3f4-0148-11eb-adc1-0242ac120002"
        statusCode: 423
        message: "Locked"
    500Example:
      value:
        apiVersion: "v2"
        requestId: "9524082e-96c0-42bb-b5d0-50c869444cc7"
        statusCode: 500
        message: "Internal Server Error"
    MultiPOSTStatusExample:
      value:
        - apiVersion: "v2"
          requestId: "592b98aa-1e4e-46f2-992a-9e6ef844270f"
          statusCode: 201
          id: "6f52dc3c-5548-4142-baa6-052ac4bece93"
          message: ""
        - apiVersion: "v2"
          requestId: "d3742440-c319-4a9f-a488-b54cf992e143"
          statusCode: 409
          message: "Duplicated"
        - apiVersion: "v2"
          requestId: "791846bd-e702-4c7a-9d22-3ceee2f08427"
          statusCode: 500
          message: "Internal Server Error"
    MultiUpdateStatusExample:
      value:
        - apiVersion: "v2"
          requestId: "592b98aa-1e4e-46f2-992a-9e6ef844270f"
          statusCode: 200
          message: ""
        - apiVersion: "v2"
          requestId: "8e025b94-1512-4ec4-a9bd-3111cb278379"
          statusCode: 404
          message: "Not Found"
        - apiVersion: "v2"
          requestId: "d3742440-c319-4a9f-a488-b54cf992e143"
          statusCode: 409
          message: "Duplicated"
        - apiVersion: "v2"
          requestId: "791846bd-e702-4c7a-9d22-3ceee2f08427"
          statusCode: 500
          message: "Internal Server Error"
    AddDeviceRequest:
      value:
        - requestId: "e6e8a2f4-eb14-4649-9e2b-175247911369"
          device:
            name: AWS IOT Button1
            description: Home automation system
            adminState: UNLOCKED
            operatingState: ENABLED
            labels:
              - home
              - hvac
              - thermostat
            location: "{lat:45.45,long:47.80}"
            serviceName: Google Home device service
            profileName: Google Home profile
            autoEvents:
              - frequency: 300ms
                onChange: true
                resource: CurrentHumidity
            protocols:
              modbus-tcp:
                host: localhost
                port: '1234'
                unitID: '1'
            notify: false
    AddDeviceServiceRequest:
      value:
        - requestId: "e6e8a2f4-eb14-4649-9e2b-175247911369"
          service:
            name: home thermostat device service
            description: manage homethermostats
            adminState: UNLOCKED
            operatingState: ENABLED
            labels:
              - hvac
              - thermostat
            baseAddress: http://home-device-service:49990
    AddDeviceProfileRequest:
      value:
        - requestId: "e6e8a2f4-eb14-4649-9e2b-175247911369"
          profile:
            name: "Simple-Device-Profile"
            manufacturer: "Simple Corp."
            model: "SP-01"
            labels:
              - "modbus"
            description: "Example of Simple Device Profile"

            deviceResources:
              - name: "SwitchButton"
                description: "Switch On/Off."
                properties:
                  type: "String"
                  readWrite: "RW"
                  defaultValue: "On"
                  units: "On/Off"
            deviceCommands:
              - name: "Switch"
                get:
                  - { deviceResource: "SwitchButton" }
                set:
                  - { deviceResource: "SwitchButton", parameter: "false" }
            coreCommands:
              - name: "Switch"
                get: true
                put: true
    GetAllDevicesResponse:
      value:
        apiVersion: "v2"
        requestId: "479439fa-0148-11eb-adc1-0242ac120002"
        statusCode: 200
        message: ""
        devices:
          - apiVersion: "v2"
            id: "55b68fcf-0fd2-445a-9fae-670b37fb9274"
            name: "Random-Boolean-Device"
            description: "Example of Device Virtual"
            created: 1600927134931
            modified: 1600927134931
            adminState: "UNLOCKED"
            operatingState: "ENABLED"
            lastConnected: 0
            lastReported: 0
            lables:
              - device-virtual-example
            location: ""
            serviceName: "device-virtual"
            profileName: "Random-Boolean-Device"
            autoEvents:
              - frequency: "10s"
                onChange: false
                resource: "Bool"
            protocols:
              - other:
                  Address: "device-virtual-bool-01"
                  Port: "300"
          - apiVersion: "v2"
            id: "03bd5ce0-b967-4165-a335-775fea604142"
            name: "Random-UnsignedInteger-Device"
            description: "Example of Device Virtual"
            created: 1600927134949
            modified: 1600927134949
            adminState: "UNLOCKED"
            operatingState: "ENABLED"
            lastConnected: 0
            lastReported: 0
            lables:
              - device-virtual-example
            location: ""
            serviceName: "device-virtual"
            profileName: "Random-Boolean-Device"
            autoEvents:
              - frequency: "20s"
                onChange: false
                resource: "Uint8"
              - frequency: "20s"
                onChange: false
                resource: "Uint16"
            protocols:
              - other:
                  Address: "device-virtual-uint-01"
                  Port: "300"
    GetAllDeviceProfilesResponse:
      value:
        apiVersion: "v2"
        requestId: "bc979763-afde-492c-b0a2-79ff3025b6de"
        statusCode: 200
        message: ""
        profiles:
        - apiVersion: "v2"
          id: "9d33b6fd-f38b-4f0e-aef4-0332578ff2c0"
          name: "Device-Virtual-Profile"
          description: "Example of Device-Virtual"
          created: 1600927134904
          modified: 1600927134904
          manufacturer: "IOTech"
          model: "Device-Virtual-01"
          labels:
            - device-virtual-example
          deviceResources:
            - description: "Generate random float32 value"
              name: "Float32"
              properties:
                type: "Float32"
                readWrite: "RW"
                defaultValue: "0"
          deviceCommands:
            - name: "Float32"
              get:
                - index: "1"
                  operation: "get"
                  deviceResource: "Float32"
              set:
                - index: "1"
                  operation: "set"
                  deviceResource: "Float32"
                  parameter: "false"
          coreCommands:
            - id: "c75d4e0a-aedc-41f5-a8c8-79aa3376818a"
              name: "Float32"
              created: 1601012840000
              modified: 1601012840000
              get: true
              put: true
        - apiVersion: "v2"
          id: "3edf4fe9-b3b8-4f78-bb94-ff55f7d9f316"
          name: "Device-Modbus-Profile"
          description: "Example of Device-Modbus"
          created: 1600927134904
          modified: 1600927134904
          manufacturer: "IOTech"
          model: "Device-Modbus-01"
          labels:
            - device-modbus-example
          deviceResources:
            - description: "Generate random float32 value"
              name: "Float32"
              properties:
                type: "Float32"
                readWrite: "RW"
                defaultValue: "0"
          deviceCommands:
            - name: "Float32"
              get:
                - index: "1"
                  operation: "get"
                  deviceResource: "Float32"
              set:
                - index: "1"
                  operation: "set"
                  deviceResource: "Float32"
                  parameter: "false"
          coreCommands:
            - id: "f200df81-7d9f-4227-b6af-011396f5204f"
              name: "Float32"
              created: 1601012840000
              modified: 1601012840000
              get: true
              put: true
paths:
  /batch:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
    post:
      servers:
      - url:  http://localhost:48081/api
      summary: "Accepts an arbitrary number of RequestEnvelope instances. Each RequestEnvelope has a 'content' property that holds a specific request type. This endpoint is operation agnostic will route the request to the appropriate handler implementation within the service. Version is not denoted as part of the route since it is included as a property on each RequestEnvelope."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/RequestEnvelope'
      responses:
        '207':
          description: "Indicates a multi-part response supportive of accepting multiple requests at once. The 'statusCode' property of each response in the returned array will indicate success or failure."
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseEnvelope'
              examples:
                MultiPOSTStatusExample:
                  $ref: '#/components/examples/MultiPOSTStatusExample'
  /device:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
    post:
      summary: "Allows provisioning of a new device"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AddDeviceRequest'
            examples:
              AddDeviceRequest:
                $ref: '#/components/examples/AddDeviceRequest'
      responses:
        '207':
          description: "Indicates a multi-part response supportive of accepting multiple requests at once. The 'statusCode' property of each response in the returned array will indicate success or failure."
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - $ref: '#/components/schemas/ErrorResponse'
                    - $ref: '#/components/schemas/BaseWithIdResponse'
              examples:
                MultiPOSTStatusExample:
                  $ref: '#/components/examples/MultiPOSTStatusExample'
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                400Example:
                  $ref: '#/components/examples/400Example'
        '500':
          description: An unexpected error occurred on the server
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
    patch:
      summary: "Allows updates to an existing device"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDeviceRequest'
            example:
              requestId: "d3367878-c46b-4263-b0af-1ccac37aab6e"
              device:
                - id: "edaa7c0f-05c6-4368-89f1-3be5e197cf6a"
                  name: "AWS IOT Button1"
                  operatingState: "DISABLED"
                  labels:
                    - "home"
                  autoEvents:
                    - frequency: "100ms"
                      onChange: true
                      resource: "CurrentHumidity"
                - id: "771de9f4-b5a3-4eba-b5e7-ec6e14fa3de7"
                  name: "AWS IOT Button2"
                  description: "Home automation system"
                  adminState: "LOCKED"
                  operatingState: "ENABLED"
      responses:
        '207':
          description: "Indicates a multi-part response supportive of accepting multiple requests at once. The 'statusCode' property of each response in the returned array will indicate success or failure."
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - $ref: '#/components/schemas/ErrorResponse'
                    - $ref: '#/components/schemas/BaseWithIdResponse'
              examples:
                MultiUpdateStatusExample:
                  $ref: '#/components/examples/MultiUpdateStatusExample'
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                400Example:
                  $ref: '#/components/examples/400Example'
        '500':
          description: An unexpected error occurred on the server
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
  /device/all:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/limitParam'
      - $ref: '#/components/parameters/labelsParam'
    get:
      summary: "Given the entire range of devices sorted by last modified descending, returns a portion of that range according to the offset and limit parameters. Devices may also be filtered by label."
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiDevicesResponse'
              examples:
                GetAllDevicesResponse:
                  $ref: '#/components/examples/GetAllDevicesResponse'
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                400Example:
                  $ref: '#/components/examples/400Example'
        '500':
          description: "Internal Server Error"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
  '/device/check/id/{id}':
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: "An ID of datatype string, by default a GUID."
    get:
      summary: "Returned status code indicates if the device exists or not."
      responses:
        '200':
          description: "Device exists"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                200Example:
                  $ref: '#/components/examples/200Example'
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                400Example:
                  $ref: '#/components/examples/400Example'
        '404':
          description: "The requested resource does not exist"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                404Example:
                  $ref: '#/components/examples/404Example'
        '500':
          description: "Internal Server Error"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
  '/device/check/name/{name}':
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - name: name
        in: path
        required: true
        schema:
          type: string
        description: "The name of the device you want to check on."
    get:
      summary: "Returned status code indicates if the device exists or not."
      responses:
        '200':
          description: "Device exists"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                200Example:
                  $ref: '#/components/examples/200Example'
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                400Example:
                  $ref: '#/components/examples/400Example'
        '404':
          description: "The requested resource does not exist"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                404Example:
                  $ref: '#/components/examples/404Example'
        '500':
          description: "Internal Server Error"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
  '/device/id/{id}':
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: "An ID of datatype string, by default a GUID."
    get:
      summary: "Returns a device by ID"
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceResponse'
              example:
                apiVersion: "v2"
                requestId: "99c4ae00-9e77-461a-92ce-950764191d71"
                statusCode: 200
                message: ""
                device:
                  apiVersion: "v2"
                  id: "55b68fcf-0fd2-445a-9fae-670b37fb9274"
                  name: "Random-Boolean-Device"
                  description: "Example of Device Virtual"
                  created: 1600926440123
                  modified: 1600928666321
                  adminState: "UNLOCKED"
                  operatingState: "ENABLED"
                  lastConnected: 0
                  lastReported: 0
                  lables:
                    - device-virtual-example
                  location: ""
                  serviceName: "device-virtual"
                  profileName: "Random-Boolean-Device"
                  autoEvents:
                    - frequency: "10s"
                      onChange: false
                      resource: "Bool"
                  protocols:
                    - other:
                        Address: "device-virtual-bool-01"
                        Port: "300"
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                400Example:
                  $ref: '#/components/examples/400Example'
        '404':
          description: "The requested resource does not exist"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                404Example:
                  $ref: '#/components/examples/404Example'
        '500':
          description: "Internal Server Error"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
    delete:
      summary: "Delete a device by ID"
      responses:
        '200':
          description: "Delete successful"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                200Example:
                  $ref: '#/components/examples/200Example'
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                400Example:
                  $ref: '#/components/examples/400Example'
        '404':
          description: "The requested resource does not exist"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                404Example:
                  $ref: '#/components/examples/404Example'
        '500':
          description: "Internal Server Error"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
  '/device/name/{name}':
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - name: name
        in: path
        required: true
        schema:
          type: string
        description: "The name of the device you wish to load, datatype string."
    get:
      summary: "Returns a device by name"
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceResponse'
              example:
                apiVersion: "v2"
                requestId: "75ca2b65-f8ef-44f7-a995-a29c53ce111b"
                statusCode: 200
                message: ""
                device:
                  apiVersion: "v2"
                  id: "55b68fcf-0fd2-445a-9fae-670b37fb9274"
                  name: "Random-Boolean-Device"
                  description: "Example of Device Virtual"
                  created: 1600926440123
                  modified: 1600928666321
                  adminState: "UNLOCKED"
                  operatingState: "ENABLED"
                  lastConnected: 0
                  lastReported: 0
                  lables:
                    - device-virtual-example
                  location: ""
                  serviceName: "device-virtual"
                  profileName: "Random-Boolean-Device"
                  autoEvents:
                    - frequency: "10s"
                      onChange: false
                      resource: "Bool"
                  protocols:
                    - other:
                        Address: "device-virtual-bool-01"
                        Port: "300"
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                400Example:
                  $ref: '#/components/examples/400Example'
        '404':
          description: "The requested resource does not exist"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                404Example:
                  $ref: '#/components/examples/404Example'
        '500':
          description: "Internal Server Error"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
    delete:
      summary: "Delete a device by name"
      responses:
        '200':
          description: "Delete successful"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                200Example:
                  $ref: '#/components/examples/200Example'
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                400Example:
                  $ref: '#/components/examples/400Example'
        '404':
          description: "The requested resource does not exist"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                404Example:
                  $ref: '#/components/examples/404Example'
        '500':
          description: "Internal Server Error"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
  '/device/profile/id/{id}':
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/limitParam'
      - name: id
        in: path
        required: true
        schema:
          type: string
        description: "The unique id of a device profile"
    get:
      summary: "Returns all devices assigned to the specified device profile"
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiDevicesResponse'
              examples:
                GetAllDevicesResponse:
                  $ref: '#/components/examples/GetAllDevicesResponse'
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                400Example:
                  $ref: '#/components/examples/400Example'
        '500':
          description: "Internal Server Error"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
  '/device/profile/name/{name}':
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/limitParam'
      - name: name
        in: path
        required: true
        schema:
          type: string
        description: "The name identifying a device profile"
    get:
      summary: "Returns all devices assigned to the specified device profile"
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiDevicesResponse'
              examples:
                GetAllDevicesResponse:
                  $ref: '#/components/examples/GetAllDevicesResponse'
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                400Example:
                  $ref: '#/components/examples/400Example'
        '500':
          description: "Internal Server Error"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
  '/device/service/id/{id}':
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/limitParam'
      - name: id
        in: path
        required: true
        schema:
          type: string
        description: "The unique id of a device service"
    get:
      summary: "Returns all devices assigned to the specified device service"
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiDevicesResponse'
              examples:
                GetAllDevicesResponse:
                  $ref: '#/components/examples/GetAllDevicesResponse'
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                400Example:
                  $ref: '#/components/examples/400Example'
        '500':
          description: "Internal Server Error"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
  '/device/service/name/{name}':
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/limitParam'
      - name: name
        in: path
        required: true
        schema:
          type: string
        description: "The name identifying a device service"
    get:
      summary: "Returns all devices assigned to the specified device service"
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiDevicesResponse'
              examples:
                GetAllDevicesResponse:
                  $ref: '#/components/examples/GetAllDevicesResponse'
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                400Example:
                  $ref: '#/components/examples/400Example'
        '500':
          description: "Internal Server Error"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
  /deviceprofile:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
    post:
      summary: "Allows creation of a new device profile"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AddDeviceProfileRequest'
            examples:
              AddDeviceRequest:
                $ref: '#/components/examples/AddDeviceProfileRequest'
      responses:
        '207':
          description: "Indicates a multi-part response supportive of accepting multiple requests at once. The 'statusCode' property of each response in the returned array will indicate success or failure."
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - $ref: '#/components/schemas/ErrorResponse'
                    - $ref: '#/components/schemas/BaseWithIdResponse'
              examples:
                MultiPOSTStatusExample:
                  $ref: '#/components/examples/MultiPOSTStatusExample'
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                400Example:
                  $ref: '#/components/examples/400Example'
        '500':
          description: An unexpected error occurred on the server
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
    put:
      summary: "Allows updates to an existing device profile"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/UpdateDeviceProfileRequest'
            examples:
              AddDeviceRequest:
                $ref: '#/components/examples/AddDeviceProfileRequest'
      responses:
        '207':
          description: "Indicates a multi-part response supportive of accepting multiple requests at once. The 'statusCode' property of each response in the returned array will indicate success or failure."
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - $ref: '#/components/schemas/ErrorResponse'
                    - $ref: '#/components/schemas/BaseWithIdResponse'
              examples:
                MultiUpdateStatusExample:
                  $ref: '#/components/examples/MultiUpdateStatusExample'
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                400Example:
                  $ref: '#/components/examples/400Example'
        '500':
          description: An unexpected error occurred on the server
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
  /deviceprofile/uploadfile:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
    post:
      summary: "Allows creation of a new device profile via an uploaded YAML file"
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                filename:
                  type: string
                  format: binary
      responses:
        '201':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseWithIdResponse'
              example:
                apiVersion: "v2"
                requestId: "327d9c1e-ac41-41cb-ae83-e78d74472cd8"
                statusCode: 201
                id: "1dc44f6c-a557-4d4a-9d2b-ccdadd674c9d"
                message: ""
        '400':
          description: "Invalid request."
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                400Example:
                  $ref: '#/components/examples/400Example'
        '409':
          description: "Conflict detected. Device profile name and command names must be universally unique."
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                409Example:
                  $ref: '#/components/examples/409Example'
        '500':
          description: "An unexpected error happened on the server."
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
    put:
      summary: "Allows updates to an existing device profile from file"
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                filename:
                  type: string
                  format: binary
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseWithIdResponse'
              example:
                apiVersion: "v2"
                requestId: "778b4234-917d-4df7-84dd-a99c33c3ec3b"
                statusCode: 200
                message: ""
        '400':
          description: "Invalid request."
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                400Example:
                  $ref: '#/components/examples/400Example'
        '409':
          description: "Conflict detected. Device profile name must be universally unique."
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                409Example:
                  $ref: '#/components/examples/409Example'
        '500':
          description: "An unexpected error happened on the server."
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
  /deviceprofile/all:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/limitParam'
      - $ref: '#/components/parameters/labelsParam'
    get:
      summary: "Given the entire range of device profiles sorted by last modified descending, returns a portion of that range according to the offset and limit parameters. Device profiles may also be filtered by label."
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiDeviceProfilesResponse'
              examples:
                GetAllDeviceProfilesResponse:
                  $ref: '#/components/examples/GetAllDeviceProfilesResponse'
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                400Example:
                  $ref: '#/components/examples/400Example'
        '500':
          description: "Internal Server Error"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
  '/deviceprofile/id/{id}':
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: "An ID of datatype string, by default a GUID."
    get:
      summary: "Returns a device profile by ID"
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceProfileResponse'
              example:
               apiVersion: "v2"
               requestId: "83260e7c-1bf0-4103-b736-7b2ac3db7993"
               statusCode: 200
               message: ""
               profile:
                apiVersion: "v2"
                id: "9d33b6fd-f38b-4f0e-aef4-0332578ff2c0"
                name: "device-virtual"
                description: "Example of Device-Virtual"
                created: 1600927134904
                modified: 1600927134904
                manufacturer: "IOTech"
                model: "Device-Virtual-01"
                labels:
                  - device-virtual-example
                deviceResources:
                  - description: "Generate random float32 value"
                    name: "Float32"
                    properties:
                      type: "Float32"
                      readWrite: "RW"
                      defaultValue: "0"
                deviceCommands:
                  - name: "Float32"
                    get:
                      - index: "1"
                        operation: "get"
                        deviceResource: "Float32"
                    set:
                      - index: "1"
                        operation: "set"
                        deviceResource: "Float32"
                        parameter: "false"
                coreCommands:
                  - id: "c75d4e0a-aedc-41f5-a8c8-79aa3376818a"
                    name: "Float32"
                    created: 1601012840000
                    modified: 1601012840000
                    get: true
                    put: true
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                400Example:
                  $ref: '#/components/examples/400Example'
        '404':
          description: "The requested resource does not exist"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                404Example:
                  $ref: '#/components/examples/404Example'
        '500':
          description: "Internal Server Error"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
    delete:
      summary: "Delete a device profile by ID. This operation will fail if there are devices actively using the profile."
      responses:
        '200':
          description: "Delete successful"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                200Example:
                  $ref: '#/components/examples/200Example'
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                400Example:
                  $ref: '#/components/examples/400Example'
        '404':
          description: "The requested resource does not exist"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                404Example:
                  $ref: '#/components/examples/404Example'
        '423':
          description: "The requested resource is locked"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                423Example:
                  $ref: '#/components/examples/423Example'
        '500':
          description: "Internal Server Error"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
  '/deviceprofile/name/{name}':
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - name: name
        in: path
        required: true
        schema:
          type: string
        description: "The unique name of a device profile"
    get:
      summary: "Returns a device profile by its name"
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceProfileResponse'
              example:
               apiVersion: "v2"
               requestId: "374387ad-18ef-4f5c-8b67-6844bec31310"
               statusCode: 200
               message: ""
               profile:
                apiVersion: "v2"
                id: "9d33b6fd-f38b-4f0e-aef4-0332578ff2c0"
                name: ""
                description: "Example of Device-Virtual"
                created: 1600927134904
                modified: 1600927134904
                manufacturer: "IOTech"
                model: "Device-Virtual-01"
                labels:
                  - device-virtual-example
                deviceResources:
                  - description: "Generate random float32 value"
                    name: "Float32"
                    properties:
                      type: "Float32"
                      readWrite: "RW"
                      defaultValue: "0"
                deviceCommands:
                  - name: "Float32"
                    get:
                      - index: "1"
                        operation: "get"
                        deviceResource: "Float32"
                    set:
                      - index: "1"
                        operation: "set"
                        deviceResource: "Float32"
                        parameter: "false"
                coreCommands:
                  - id: "c75d4e0a-aedc-41f5-a8c8-79aa3376818a"
                    name: "Float32"
                    created: 1601012840000
                    modified: 1601012840000
                    get: true
                    put: true
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                400Example:
                  $ref: '#/components/examples/400Example'
        '404':
          description: "The requested resource does not exist"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                404Example:
                  $ref: '#/components/examples/404Example'
        '500':
          description: "Internal Server Error"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
    delete:
      summary: "Delete a device profile by its unique name. This operation will fail if there are devices actively using the profile."
      responses:
        '200':
          description: "Delete successful"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                200Example:
                  $ref: '#/components/examples/200Example'
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                400Example:
                  $ref: '#/components/examples/400Example'
        '404':
          description: "The requested resource does not exist"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                404Example:
                  $ref: '#/components/examples/404Example'
        '423':
          description: "The requested resource is locked"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                423Example:
                  $ref: '#/components/examples/423Example'
        '500':
          description: "Internal Server Error"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
  '/deviceprofile/manufacturer/{manufacturer}':
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/limitParam'
      - name: manufacturer
        in: path
        required: true
        schema:
          type: string
        description: "The manufacturer for the device profiles in which you're interested."
    get:
      summary: "Returns a list of device profiles for the given manufacturer."
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiDeviceProfilesResponse'
              examples:
                GetAllDeviceProfilesResponse:
                  $ref: '#/components/examples/GetAllDeviceProfilesResponse'
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                400Example:
                  $ref: '#/components/examples/400Example'
        '500':
          description: "Internal Server Error"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
  '/deviceprofile/manufacturer/{manufacturer}/model/{model}':
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/limitParam'
      - name: manufacturer
        in: path
        required: true
        schema:
          type: string
        description: "The manufacturer for the device profiles in which you're interested."
      - name: model
        in: path
        required: true
        schema:
          type: string
        description: "The model of the device profiles in which you're interested."
    get:
      summary: "Returns a list of device profiles for the given manufacturer and model."
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/MultiDeviceProfilesResponse'
              examples:
                GetAllDeviceProfilesResponse:
                  $ref: '#/components/examples/GetAllDeviceProfilesResponse'
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                400Example:
                  $ref: '#/components/examples/400Example'
        '500':
          description: "Internal Server Error"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
  '/deviceprofile/model/{model}':
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/limitParam'
      - name: model
        in: path
        required: true
        schema:
          type: string
        description: "The model assigned to the device profiles in which you're interested."
    get:
      summary: "Returns a list of device profiles for the given model."
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiDeviceProfilesResponse'
              examples:
                GetAllDeviceProfilesResponse:
                  $ref: '#/components/examples/GetAllDeviceProfilesResponse'
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                400Example:
                  $ref: '#/components/examples/400Example'
        '500':
          description: "Internal Server Error"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
  /deviceservice:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
    post:
      summary: "Add a new DeviceService - name must be unique."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AddDeviceServiceRequest'
            examples:
              AddDeviceServiceRequest:
                $ref: '#/components/examples/AddDeviceServiceRequest'
      responses:
        '207':
          description: "Indicates a multi-part response supportive of accepting multiple requests at once. The 'statusCode' property of each response in the returned array will indicate success or failure."
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - $ref: '#/components/schemas/ErrorResponse'
                    - $ref: '#/components/schemas/BaseWithIdResponse'
              examples:
                MultiPOSTStatusExample:
                  $ref: '#/components/examples/MultiPOSTStatusExample'
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                400Example:
                  $ref: '#/components/examples/400Example'
        '500':
          description: An unexpected error occurred on the server
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
    patch:
      summary: "Allows updates to an existing device service"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDeviceServiceRequest'
            example:
              - requestId: "d3367878-c46b-4263-b0af-1ccac37aab6e"
                service:
                - id: "edaa7c0f-05c6-4368-89f1-3be5e197cf6a"
                  name: "home thermostat device service"
                  description: "Home automation system"
                  operatingState: "ENABLED"
                  labels:
                    - "home"
              - requestId: "5accf5a9-9c7e-4160-bbbb-03d1cb25b492"
                service:
                - id: "aee709c7-1b30-4db4-9256-2e7eb2073b2f"
                  name: "Google Home device service"
                  operatingState: "ENABLED"
                  adminState: "ENABLED"
                  baseAddress: "http://home-device-service:49980"
      responses:
        '207':
          description: "Indicates a multi-part response supportive of accepting multiple requests at once. The 'statusCode' property of each response in the returned array will indicate success or failure."
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - $ref: '#/components/schemas/ErrorResponse'
                    - $ref: '#/components/schemas/BaseWithIdResponse'
              examples:
                MultiUpdateStatusExample:
                  $ref: '#/components/examples/MultiUpdateStatusExample'
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                400Example:
                  $ref: '#/components/examples/400Example'
        '500':
          description: An unexpected error occurred on the server
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
  /deviceservice/all:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/limitParam'
      - $ref: '#/components/parameters/labelsParam'
    get:
      summary: "Given the entire range of device services sorted by last modified descending, returns a portion of that range according to the offset and limit parameters. Device services may also be filtered by label."
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiDeviceServicesResponse'
              example:
                apiVersion: "v2"
                requestId: "4c7c47a7-10e0-4489-99c5-f639b7d7eb5c"
                statusCode: 200
                message: ""
                services:
                  - apiVersion: "v2"
                    id: "1ff7762f-c432-4af0-9a5d-756bbc92744b"
                    name: "device-virtual"
                    created: 1600927134890
                    modified: 1600927134890
                    description: "Example"
                    lastConnected: 0
                    lastReported: 0
                    adminState: "UNLOCKED"
                    operatingState: "ENABLED"
                    labels:
                      - virtual
                    baseAddress: "http://edgex-device-virtual:49990"
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                400Example:
                  $ref: '#/components/examples/400Example'
        '500':
          description: "Internal Server Error"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
  '/deviceservice/id/{id}':
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: "An ID of datatype string, by default a GUID."
    get:
      summary: "Returns a device service by ID"
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceServiceResponse'
              example:
                apiVersion: "v2"
                requestId: "4e63c9b9-9cc4-45e4-9bf0-6d994a3860b4"
                statusCode: 200
                message: ""
                service:
                  apiVersion: "v2"
                  id: "1ff7762f-c432-4af0-9a5d-756bbc92744b"
                  name: "device-virtual"
                  description: "Example"
                  created: 1600927134890
                  modified: 1600927134890
                  lastConnected: 0
                  lastReported: 0
                  adminState: "UNLOCKED"
                  operatingState: "ENABLED"
                  labels:
                    - virtual
                  baseAddress: "http://edgex-device-virtual:49990"
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                400Example:
                  $ref: '#/components/examples/400Example'
        '404':
          description: "The requested resource does not exist"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                404Example:
                  $ref: '#/components/examples/404Example'
        '500':
          description: "Internal Server Error"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
    delete:
      summary: "Delete a device service by ID"
      responses:
        '200':
          description: "Delete successful"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                200Example:
                  $ref: '#/components/examples/200Example'
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                400Example:
                  $ref: '#/components/examples/400Example'
        '404':
          description: "The requested resource does not exist"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                404Example:
                  $ref: '#/components/examples/404Example'
        '423':
          description: "The requested resource is locked"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                423Example:
                  $ref: '#/components/examples/423Example'
        '500':
          description: "Internal Server Error"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
  '/deviceservice/name/{name}':
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - name: name
        in: path
        required: true
        schema:
          type: string
        description: "The unique name of the device service you want to load."
    get:
      summary: "Returns a device service by its unique name"
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceServiceResponse'
              example:
                apiVersion: "v2"
                requestId: "5e46b1fe-fb3e-4bc5-b84c-0ea8f9e0b511"
                statusCode: 200
                message: ""
                service:
                  apiVersion: "v2"
                  id: "1ff7762f-c432-4af0-9a5d-756bbc92744b"
                  name: "device-virtual"
                  description: "Example"
                  created: 1600927134890
                  modified: 1600927134890
                  lastConnected: 0
                  lastReported: 0
                  adminState: "UNLOCKED"
                  operatingState: "ENABLED"
                  labels:
                    - virtual
                  baseAddress: "http://edgex-device-virtual:49990"
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                400Example:
                  $ref: '#/components/examples/400Example'
        '404':
          description: "The requested resource does not exist"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                404Example:
                  $ref: '#/components/examples/404Example'
        '500':
          description: "Internal Server Error"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
    delete:
      summary: "Delete a device service by its unique name"
      responses:
        '200':
          description: "Delete successful"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                200Example:
                  $ref: '#/components/examples/200Example'
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                400Example:
                  $ref: '#/components/examples/400Example'
        '404':
          description: "The requested resource does not exist"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                404Example:
                  $ref: '#/components/examples/404Example'
        '423':
          description: "The requested resource is locked"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                423Example:
                  $ref: '#/components/examples/423Example'
        '500':
          description: "Internal Server Error"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
  /config:
    get:
      summary: "Returns the current configuration of the service."
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigResponse'
              example:
                apiVersion: "v2"
                requestId: "d138fccc-f39a-4fd0-bd32-50d52a131f66"
                statusCode: 200
                message: ""
                config:
                  Writeable:
                    EnableValueDescriptorManagement: false
                    LogLevel: "INFO"
                  Clients:
                    Logging:
                      Host: "localhost"
                      Port: 48061
                      Protocol: "http"
                    CoreData:
                      Host: "edgex-core-data"
                      Port: 48080
                      Protocol: "http"
                    Notifications:
                      Host: "edgex-support-notifications"
                      Port: 48060
                      Protocol: "http"
                  Databases:
                    Primary:
                      Username: "meta"
                      Password: "password"
                      Type: "redisdb"
                      Timeout: 5000
                      Host: "edgex-redis"
                      Port: 6379
                      Name: "metadata"
                  Logging:
                    EnableRemote: false
                    File: ""
                  Notifications:
                    Content: "Device update: "
                    Description: "Metadata device notice"
                    Label: "metadata"
                    PostDeviceChanges: true
                    Sender: "edgex-core-metadata"
                    Slug: "device-change-"
                  Registry:
                    Host: "edgex-core-consul"
                    Port: 8500
                    Type: "consul"
                  Service:
                    BootTimeout: 30000
                    CheckInterval: "10s"
                    Host: "edgex-core-metadata"
                    Port: 48081
                    SeverBindAddr: ""
                    Protocol: "http"
                    StartupMsg: "This is the EdgeX Core Metadata Microservice"
                    MaxResultCount: 50000
                    Timeout: 5000
                  SecretStore:
                    Host: "edgex-vault"
                    Port: 8200
                    Path: "v1/secret/edgex/metadata/"
                    Protocol: "http"
                    Namespace: ""
                    RootCaCertPath: ""
                    ServerName: "edgex-vault"
                    Authentication:
                      AuthType: "X-Vault-Token"
                      AuthToken: ""
                    AdditionalRetryAttempts: 10
                    RetryWaitPeriod: "1s"
                    TokenFile: "/vault/config/assets/resp-init.json"
                  Startup:
                    Duration: 30
                    Interval: 1
        '500':
          description: "Internal Server Error"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
  /metrics:
    get:
      summary: "An endpoint that can be used to obtain CPU/Memory usage stats for a given service."
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsResponse'
              example:
                apiVersion: "v2"
                requestId: "dc418c01-e270-447a-961a-170f774af4ab"
                statusCode: 200
                message: ""
                metrics:
                  memAlloc: 877192
                  memFrees: 2248915
                  memLiveObjects: 6522
                  memMallocs: 2255437
                  memSys: 72876280
                  memTotalAlloc: 203821192
                  cpuBusyAvg: 2.2521221920656003
        '500':
          description: "Internal Server Error"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
  /ping:
    get:
      summary: "A simple 'ping' endpoint that can be used as a service healthcheck"
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PingResponse'
              example:
                apiVersion: "v2"
                requestId: "894f5cba-8372-4a89-a7eb-921fe56801b5"
                statusCode: 200
                message: ""
                timestamp: "1600926440"
        '500':
          description: "Internal Server Error"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
  /version:
    get:
      summary: "A simple 'version' endpoint that will return the current version of the service"
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionResponse'
              example:
                apiVersion: "v2"
                requestId: "01f9b481-62a4-48c8-a7e4-8badcc944475"
                statusCode: 200
                message: ""
                version: "master"
        '500':
          description: "Internal Server Error"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
