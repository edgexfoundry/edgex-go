openapi: 3.0.0
info:
  title: Edgex Foundry - Core Metadata API
  description: "This is the definition of the API for the Core Metadata service in the EdgeX Foundry IOT microservice platform. Core Metadata is responsible for all information related to provisioned devices and their associated services."
  version: 2.x
servers:
  - url: 'http://localhost:48081/api/v2'
    description: URL for local development and testing
components:
  schemas:
    AddAddressableRequest:
      allOf:
        - $ref: '#/components/schemas/BaseRequest'
      description: "A request to add a new addressable."
      type: object
      properties:
        name:
          type: string
        protocol:
          type: string
        method:
          type: string
        address:
          type: string
        port:
          type: integer
        path:
          type: string
        publisher:
          type: string
        user:
          type: string
        password:
          type: string
        topic:
          type: string
      required:
        - name
        - protocol
        - address
    AddAddressableResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
      description: "A response type for use in adding an Addressable. The ID of the new record will be returned to the caller. An optional message property allows for miscellaneous information to be returned."
      type: object
      properties:
        id:
          type: string
          format: uuid
        message:
          type: string
      required:
        - id
    AddDeviceRequest:
      allOf:
        - $ref: '#/components/schemas/BaseRequest'
      description: "A request to add a new device associated with a specific device service and conforming to a specific device profile."
      type: object
      properties:
        deviceName:
          type: string
        serviceName:
          type: string
        profileName:
          type: string
        adminState:
          type: string
        operatingState:
          type: string
        autoEvents:
          type: array
          items:
            $ref: '#/components/schemas/AutoEvent'
        protocols:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ProtocolProperties'
      required:
        - deviceName
        - serviceName
        - profileName
        - protocols
    AddDeviceResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
      description: "A response type for use in adding a Device. The ID of the new record will be returned to the caller. An optional message property allows for miscellaneous information to be returned."
      type: object
      properties:
        id:
          type: string
          format: uuid
        message:
          type: string
      required:
        - id
    AddDeviceProfileRequest:
      allOf:
        - $ref: '#/components/schemas/BaseRequest'
      description: "A request to add a new device profile. When making this request, the ID property should not be populated."
      type: object
      properties:
        profile:
          $ref: '#/components/schemas/DeviceProfile'
    AddDeviceProfileResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
      description: "A response type for use in adding a Device Profile. The ID of the new record will be returned to the caller. An optional message property allows for miscellaneous information to be returned."
      type: object
      properties:
        id:
          type: string
          format: uuid
        message:
          type: string
      required:
        - id
    AddDeviceServiceRequest:
      allOf:
        - $ref: '#/components/schemas/BaseRequest'
      description: "A request to add a new DeviceService - name must be unique and the specified addressable must already exist"
      type: object
      properties:
        deviceServiceName:
          type: string
        addressableName:
          type: string
        operatingState:
          description: "Can only be set to ENABLED or DISABLED"
          type: string
        labels:
          type: array
          items:
            type: string
        adminState:
          description: "Can only be set to LOCKED or UNLOCKED"
          type: string
      required:
        - deviceServiceName
        - addressableName
        - operatingState
        - adminState
    AddDeviceServiceResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
      description: "A response type for use in adding a Device Service. The ID of the new record will be returned to the caller. An optional message property allows for miscellaneous information to be returned."
      type: object
      properties:
        id:
          type: string
          format: uuid
        message:
          type: string
      required:
        - id
    AddressableResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
      type: object
      properties:
        addressable:
          $ref: '#/components/schemas/Addressable'
    Addressable:
      type: object
      properties:
        id:
          type: string
          format: uuid
        created:
          type: integer
        modified:
          type: integer
        name:
          type: string
        protocol:
          type: string
        method:
          type: string
        address:
          type: string
        port:
          type: integer
        path:
          type: string
        publisher:
          type: string
        user:
          type: string
        password:
          type: string
        topic:
          type: string
    AutoEvent:
      type: object
      properties:
        frequency:
          type: string
        onChange:
          type: boolean
        resource:
          type: string
    BaseRequest:
      description: "Defines basic properties which all use-case specific request DTO instances should support."
      type: object
      properties:
        requestId:
          description: "Uniquely identifies this request. For implementation, recommend this value be generated by the type's constructor."
          type: string
          format: uuid
          example: "e6e8a2f4-eb14-4649-9e2b-175247911369"
      required:
        - requestId
    BaseResponse:
      description: "Defines basic properties which all use-case specific response DTO instances should support"
      type: object
      properties:
        requestId:
          description: "Uniquely identifies the request that resulted in this response."
          type: string
          format: uuid
          example: "e6e8a2f4-eb14-4649-9e2b-175247911369"
        statusCode:
          description: "A numeric code signifying the operational status of the response."
          type: integer
        message:
          description: "A field that can contain a free-form message, such as an error message."
          type: string
      required:
        - requestId
        - statusCode
    Command:
      type: object
      properties:
        created:
          type: integer
        modified:
          type: integer
        id:
          type: string
          format: uuid
        name:
          type: string
        get:
          $ref: '#/components/schemas/CommandAction'
        put:
          $ref: '#/components/schemas/CommandAction'
    CommandAction:
      type: object
      properties:
        path:
          type: string
        url:
          type: string
    Device:
      type: object
      properties:
        id:
          type: string
          format: uuid
        created:
          type: integer
        modified:
          type: integer
        name:
          type: string
        description:
          type: string
        adminState:
          type: string
        operatingState:
          type: string
        addressableId:
          type: string
        addressableName:
          type: string
        lastConnected:
          type: integer
        lastReported:
          type: integer
        labels:
          type: array
          items:
            type: string
        location:
          type: object
        serviceId:
          type: string
        serviceName:
          type: string
        profileId:
          type: string
        profileName:
          type: string
        autoEvents:
          type: array
          items:
            $ref: '#/components/schemas/AutoEvent'
        protocols:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ProtocolProperties'
    DeviceProfile:
      description: "A profile defining a class of device to be onboarded, including its capabilities and data format."
      type: object
      properties:
        created:
          type: integer
        modified:
          type: integer
        description:
          type: string
        id:
          type: string
          format: uuid
        name:
          type: string
        manufacturer:
          type: string
        model:
          type: string
        labels:
          type: array
          items:
            type: string
        deviceResources:
          type: array
          items:
            $ref: '#/components/schemas/DeviceResource'
        deviceCommands:
          type: array
          items:
            $ref: '#/components/schemas/ProfileResource'
        coreCommands:
          type: array
          items:
            $ref: '#/components/schemas/Command'
    DeviceProfileResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
      type: object
      properties:
        profile:
          $ref: '#/components/schemas/DeviceProfile'
    DeviceResource:
      description: "DeviceResource represents a value on a device that can be read or written."
      type: object
      properties:
        description:
          type: string
        name:
          type: string
        tag:
          type: string
        properties:
          $ref: '#/components/schemas/PropertyValue'
        attributes:
          type: object
          additionalProperties:
            type: string
    DeviceResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
      type: object
      properties:
        device:
          $ref: '#/components/schemas/Device'
    DeviceService:
      description: "A DeviceService is responsible for proxying connectivity between a set of devices and the EdgeX Foundry core services."
      type: object
      properties:
        created:
          type: integer
        modified:
          type: integer
        description:
          type: string
        id:
          type: string
          format: uuid
        name:
          type: string
        lastConnected:
          type: integer
        lastReported:
          type: integer
        operatingState:
          type: string
        labels:
          type: array
          items:
            type: string
        addressable:
          $ref: '#/components/schemas/Addressable'
        adminState:
          type: string
    DeviceServiceResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
      type: object
      properties:
        service:
          $ref: '#/components/schemas/DeviceService'
    ErrorResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
      description: "A response type for returning a generic error to the caller."
      type: object
    ConfigRequest:
      description: "A request associated with the /config endpoint."
      allOf:
        - $ref: '#/components/schemas/BaseRequest'
      type: object
    ConfigResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
      description: "Provides a response containing the configuration for the targeted service."
      type: object
      properties:
        config:
          description: "A string-ified representation of the service's configuration. For purposes of this specification, a string has been used since configuration structure differs from service to service."
          type: string
      required:
      - config
    MetricsRequest:
      description: "A request associated with the /metrics endpoint."
      allOf:
        - $ref: '#/components/schemas/BaseRequest'
      type: object
    MetricsResponse:
      allOf:
      - $ref: '#/components/schemas/BaseResponse'
      description: "A response from the /metrics endpoint providing memory and cpu utilization stats."
      type: object
      properties:
        memAlloc:
          description: "Alloc is bytes of allocated heap objects."
          type: integer
        memFrees:
          description: "Frees is the cumulative count of heap objects freed."
          type: integer
        memLiveObjects:
          description: "The number of live objects is Mallocs - Frees."
          type: integer
        memMallocs:
          description: "The cumulative count of heap objects allocated."
          type: integer
        memSys:
          description: "The total bytes of memory obtained from the OS."
          type: integer
        memTotalAlloc:
          description: "Cumulative bytes allocated for heap objects."
          type: integer
        cpuBusyAvg:
          description: "Indicates the average level of CPU utilization"
          type: number
      required:
      - memAlloc
      - memFrees
      - memLiveObjects
      - memMallocs
      - memSys
      - memTotalAlloc
      - cpuBusyAvg
    PingRequest:
      description: "A request associated with the /ping endpoint."
      allOf:
        - $ref: '#/components/schemas/BaseRequest'
      type: object
    PingResponse:
      allOf:
      - $ref: '#/components/schemas/BaseResponse'
      type: object
      properties:
        timestamp:
          description: "Outputs the current server timestamp in RFC1123 format"
          example: "Mon, 02 Jan 2006 15:04:05 MST"
          type: string
    ProfileResource:
      description: "Defines read/write capabilities native to the device"
      type: object
      properties:
        name:
          type: string
        get:
          type: array
          items:
            $ref: '#/components/schemas/ResourceOperation'
        set:
          type: array
          items:
            $ref: '#/components/schemas/ResourceOperation'
    PropertyValue:
      description: "Defines constraints with regard to the range of acceptable values assigned to an event reading and defined as a property within a device profile."
      type: object
      properties:
        type:
          type: string
        readWrite:
          type: string
        units:
          type: string
        minimum:
          type: string
        maximum:
          type: string
        defaultValue:
          type: string
        mask:
          type: string
        shift:
          type: string
        scale:
          type: string
        offset:
          type: string
        base:
          type: string
        assertion:
          type: string
        floatEncoding:
          type: string
        mediaType:
          type: string
    ProtocolProperties:
      type: object
      additionalProperties:
        type: string
    ResourceOperation:
      description: "Defines an operation of which a device is capable."
      type: object
      properties:
        index:
          type: string
        operation:
          type: string
        deviceResource:
          type: string
        parameter:
          type: string
        deviceCommand:
          type: string
        secondary:
          type: array
          items:
            type: string
        mappings:
          type: object
          additionalProperties:
            type: string
    RequestEnvelope:
      description: "A wrapper type for use when sending a request to the /batch endpoint. Each individual request type in the HTTP request should be wrapped in an envelope to facilitate instantiation of the correct routing handler. See property descriptions below for more details."
      type: object
      properties:
        action:
          type: string
          description: "Indicates the type of operation applicable to the wrapped request. Valid values are 'create','read','update','delete', and 'command'"
        content:
          type: string
          format: byte
          description: "A byte array containing a marshalled request type instance. This is the specific, semantically identifiable request -- such as an AddDeviceRequest."
        strategy:
          type: string
          description: "Indicates the expectation of whether a response should be produced synchronously or asynchronously. If asynchronously, desire for either a polling or push/callback should be provided. Valid values are 'sync','async-push','async-poll'"
        type:
          type: string
          description: "The name of the type applicable to the request instance contained in the 'content' property."
        version:
          description: "Proposed field for explicitly defining version of request DTO. This is for advertising compatibility between a publisher/subscriber or requester/receiver"
          type: string
          example: "2.0.x"
      required:
        - action
        - content
        - strategy
        - type
        - version
    ResponseEnvelope:
      description: "A wrapper type for use when receiving a response from the /batch endpoint. Each individual response type in the HTTP response should be wrapped in an envelope to facilitate unmarshalling by the client. See property descriptions below for more details."
      type: object
      properties:
        action:
          type: string
          description: "Indicates the type of operation applicable to the wrapped response. This should be recapitulated from the originating request. Valid values are 'create','read','update','delete', and 'command'"
        content:
          type: string
          format: byte
          description: "A byte array containing a marshalled response type instance. This is the specific, semantically identifiable response -- such as an AddDeviceResponse."
        strategy:
          type: string
          description: "Recapitulates the expectation with regard to the delivery of response that was specified on the originating request. Valid values are 'sync','async-push','async-poll'"
        type:
          type: string
          description: "The name of the type applicable to the response instance contained in the 'content' property."
        version:
          description: "Proposed field for explicitly defining version of response DTO. This is for advertising compatibility between a publisher/subscriber or requester/receiver"
          type: string
          example: "2.0.x"
      required:
        - action
        - content
        - strategy
        - type
        - version
    UpdateAddressableRequest:
      allOf:
        - $ref: '#/components/schemas/BaseRequest'
      description: "A request to update an existing addressable definition. 'id' and 'name' must be populated in order to identify the addressable. Any other property that is populated in the request will be updated. Empty/blank properties will not be considered."
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        protocol:
          type: string
        method:
          type: string
        address:
          type: string
        port:
          type: integer
        path:
          type: string
        publisher:
          type: string
        user:
          type: string
        password:
          type: string
        topic:
          type: string
      required:
        - id
        - name
    UpdateAddressableResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
      description: "A response type for use in updating an Addressable. The ID of the affected record will be returned to the caller."
      type: object
      properties:
        id:
          type: string
          format: uuid
      required:
        - id
    UpdateDeviceRequest:
      allOf:
        - $ref: '#/components/schemas/BaseRequest'
      description: "A request to update an existing device definition. 'id' and 'deviceName' must be populated in order to identify the device. If the 'notify' property is set to true, the device service managing the device will receive a notification. Any other property that is populated in the request will be updated. Empty/blank properties will not be considered."
      type: object
      properties:
        adminState:
          type: string
        autoEvents:
          type: array
          items:
            $ref: '#/components/schemas/AutoEvent'
        deviceName:
          type: string
        id:
          type: string
          format: uuid
        lastConnected:
          type: integer
        lastReported:
          type: integer
        notify:
          type: boolean
        operatingState:
          type: string
        profileName:
          type: string
        protocols:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ProtocolProperties'
        serviceName:
          type: string
      required:
        - id
        - deviceName
    UpdateDeviceResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
      description: "A response type for use in updating the state of a device. The ID of the affected record will be returned to the caller."
      type: object
      properties:
        id:
          type: string
          format: uuid
      required:
        - id
    UpdateDeviceProfileRequest:
      allOf:
        - $ref: '#/components/schemas/BaseRequest'
      description: "A request to update an existing device profile definition. 'id' and 'name' must be populated in order to identify the profile. Any other property that is populated in the request will be updated. Empty/blank properties will not be considered."
      type: object
      properties:
        profile:
          $ref: '#/components/schemas/DeviceProfile'
    UpdateDeviceProfileResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
      description: "A response type for use in updating a device profile. The ID of the affected record will be returned to the caller."
      type: object
      properties:
        id:
          type: string
          format: uuid
      required:
        - id
    UpdateDeviceServiceRequest:
      allOf:
        - $ref: '#/components/schemas/BaseRequest'
      description: "A request to update an existing device service definition. 'id' and 'deviceServiceName' must be populated in order to identify the service. Any other property that is populated in the request will be updated. Empty/blank properties will not be considered."
      type: object
      properties:
        addressableName:
          type: string
        adminState:
          description: "Can only be set to LOCKED or UNLOCKED"
          type: string
        deviceServiceName:
          type: string
        id:
          type: string
          format: uuid
        labels:
          type: array
          items:
            type: string
        operatingState:
          description: "Can only be set to ENABLED or DISABLED"
          type: string
      required:
        - id
        - deviceServiceName
    UpdateDeviceServiceResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
      description: "A response type for use in updating a device service. The ID of the affected record will be returned to the caller."
      type: object
      properties:
        id:
          type: string
          format: uuid
      required:
        - id
    VersionRequest:
      description: "A request associated with the /version endpoint."
      allOf:
        - $ref: '#/components/schemas/BaseRequest'
      type: object
    VersionResponse:
      description: "A response returned from the /version endpoint whose purpose is to report out the latest version supported by the service."
      allOf:
      - $ref: '#/components/schemas/BaseResponse'
      type: object
      properties:
        version:
          description: "The latest version supported by the service."
          type: string
      required:
      - version
  parameters:
    offsetParam:
      in: query
      name: offset
      required: false
      schema:
        type: integer
        minimum: 0
      description: "The number of items to skip before starting to collect the result set."
    limitParam:
      in: query
      name: limit
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 50
        default: 20
      description: "The numbers of items to return."
    correlatedRequestHeader:
      in: header
      name: X-Correlation-ID
      description: "A unique identifier correlating a request to its associated response, facilitating tracing through being included on requests originating from the initiating request."
      schema:
        type: string
        format: uuid
      required: true
      example: "14a42ea6-c394-41c3-8bcd-a29b9f5e6835"
    labelsParam:
      in: query
      name: labels
      required: false
      schema:
        type: string
      description: "Allows for querying a given object by associated user-defined label. More than one label may be specified via a comma-delimited list."
  headers:
    correlatedResponseHeader:
      description: "A response header that returns the unique correlation ID used to initiate the request."
      schema:
        type: string
        format: uuid
      required: true
      example: "14a42ea6-c394-41c3-8bcd-a29b9f5e6835"
paths:
  /addressable:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
    post:
      summary: "Allows definition of new addressables"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AddAddressableRequest'
      responses:
        '207':
          description: "Indicates a multi-part response supportive of accepting multiple requests at once. The 'statusCode' property of each response in the returned array will indicate success or failure."
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - $ref: '#/components/schemas/ErrorResponse'
                    - $ref: '#/components/schemas/AddAddressableResponse'
    patch:
      summary: "Allows updates to an existing addressable"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/UpdateAddressableRequest'
      responses:
        '207':
          description: "Indicates a multi-part response supportive of accepting multiple requests at once. The 'statusCode' property of each response in the returned array will indicate success or failure."
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - $ref: '#/components/schemas/ErrorResponse'
                    - $ref: '#/components/schemas/UpdateAddressableResponse'
  /addressable/all:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/limitParam'
    get:
      summary: "Given the entire range of addressables sorted by last modified descending, returns a portion of that range according to the offset and limit parameters."
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AddressableResponse'
        '500':
          description: "An unexpected error occurred on the server"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorResponse'
  /addressable/host/{host}:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - name: host
        in: path
        required: true
        schema:
          type: string
        description: "The hostname or IP address of the addressable you wish to load."
    get:
      summary: "Returns an addressable by its host"
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Addressable'
        '404':
          description: "The requested resource does not exist"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: "An unexpected error occurred on the server"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /addressable/id/{id}:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: "An ID of datatype string, by default a GUID."
    get:
      summary: "Returns an addressable by ID"
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressableResponse'
        '404':
          description: "The requested resource does not exist"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: "An unexpected error occurred on the server"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: "Delete an addressable by ID"
      responses:
        '204':
          description: "Delete successful"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: "An unexpected error occurred on the server"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /addressable/name/{name}:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - name: name
        in: path
        required: true
        schema:
          type: string
        description: "The name of the addressable you wish to load, datatype string."
    get:
      summary: "Returns an addressable by name"
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressableResponse'
        '404':
          description: "The requested resource does not exist"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: "An unexpected error occurred on the server"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: "Delete an addressable by name"
      responses:
        '204':
          description: "Delete successful"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: "An unexpected error occurred on the server"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /addressable/port/{port}:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - name: port
        in: path
        required: true
        schema:
          type: integer
        description: "The port of the addressable you wish to load."
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/limitParam'
    get:
      summary: "Returns a list of all addressables listening on the specified port"
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AddressableResponse'
        '404':
          description: "The requested resource does not exist"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: "An unexpected error occurred on the server"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorResponse'
  /batch:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
    post:
      servers:
      - url:  http://localhost:48081/api
      summary: "Accepts an arbitrary number of RequestEnvelope instances. Each RequestEnvelope has a 'content' property that holds a specific request type. This endpoint is operation agnostic will route the request to the appropriate handler implementation within the service. Version is not denoted as part of the route since it is included as a property on each RequestEnvelope."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/RequestEnvelope'
      responses:
        '207':
          description: "Indicates a multi-part response supportive of accepting multiple requests at once. The 'statusCode' property of each response in the returned array will indicate success or failure."
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseEnvelope'
  /device:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
    post:
      summary: "Allows provisioning of a new device"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AddDeviceRequest'
      responses:
        '207':
          description: "Indicates a multi-part response supportive of accepting multiple requests at once. The 'statusCode' property of each response in the returned array will indicate success or failure."
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - $ref: '#/components/schemas/ErrorResponse'
                    - $ref: '#/components/schemas/AddDeviceResponse'
    patch:
      summary: "Allows updates to an existing device"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/UpdateDeviceRequest'
      responses:
        '207':
          description: "Indicates a multi-part response supportive of accepting multiple requests at once. The 'statusCode' property of each response in the returned array will indicate success or failure."
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - $ref: '#/components/schemas/ErrorResponse'
                    - $ref: '#/components/schemas/UpdateDeviceResponse'
  /device/all:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/limitParam'
      - $ref: '#/components/parameters/labelsParam'
    get:
      summary: "Given the entire range of devices sorted by last modified descending, returns a portion of that range according to the offset and limit parameters. Devices may also be filtered by label."
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceResponse'
        '500':
          description: "An unexpected error occurred on the server"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorResponse'
  /device/check/id/{id}:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: "An ID of datatype string, by default a GUID."
    get:
      summary: "Returned status code indicates if the device exists (204) or not (404)."
      responses:
        '204':
          description: "Device exists"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
        '404':
          description: "The requested resource does not exist"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: "An unexpected error occurred on the server"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/ErrorResponse'
  /device/check/name/{name}:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - name: name
        in: path
        required: true
        schema:
          type: string
        description: "The name of the device you want to check on."
    get:
      summary: "Returned status code indicates if the device exists (204) or not (404)."
      responses:
        '204':
          description: "Device exists"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
        '404':
          description: "The requested resource does not exist"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: "An unexpected error occurred on the server"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/ErrorResponse'
  /device/id/{id}:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: "An ID of datatype string, by default a GUID."
    get:
      summary: "Returns a device by ID"
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceResponse'
        '404':
          description: "The requested resource does not exist"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: "An unexpected error occurred on the server"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: "Delete a device by ID"
      responses:
        '204':
          description: "Delete successful"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: "An unexpected error occurred on the server"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/ErrorResponse'
  /device/name/{name}:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - name: name
        in: path
        required: true
        schema:
          type: string
        description: "The name of the device you wish to load, datatype string."
    get:
      summary: "Returns a device by name"
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceResponse'
        '404':
          description: "The requested resource does not exist"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: "An unexpected error occurred on the server"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: "Delete a device by name"
      responses:
        '204':
          description: "Delete successful"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: "An unexpected error occurred on the server"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /device/profile/id/{id}:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/limitParam'
      - name: id
        in: path
        required: true
        schema:
          type: string
        description: "The unique id of a device profile"
    get:
      summary: "Returns all devices assigned to the specified device profile"
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceResponse'
        '404':
          description: "The requested resource does not exist"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: "An unexpected error occurred on the server"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorResponse'
  /device/profile/name/{name}:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/limitParam'
      - name: name
        in: path
        required: true
        schema:
          type: string
        description: "The name identifying a device profile"
    get:
      summary: "Returns all devices assigned to the specified device profile"
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceResponse'
        '404':
          description: "The requested resource does not exist"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: "An unexpected error occurred on the server"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorResponse'
  /device/service/id/{id}:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/limitParam'
      - name: id
        in: path
        required: true
        schema:
          type: string
        description: "The unique id of a device service"
    get:
      summary: "Returns all devices assigned to the specified device service"
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceResponse'
        '404':
          description: "The requested resource does not exist"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: "An unexpected error occurred on the server"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorResponse'
  /device/service/name/{name}:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/limitParam'
      - name: name
        in: path
        required: true
        schema:
          type: string
        description: "The name identifying a device service"
    get:
      summary: "Returns all devices assigned to the specified device service"
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceResponse'
        '404':
          description: "The requested resource does not exist"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: "An unexpected error occurred on the server"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorResponse'
  /deviceprofile:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
    post:
      summary: "Allows creation of a new device profile"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AddDeviceProfileRequest'
      responses:
        '207':
          description: "Indicates a multi-part response supportive of accepting multiple requests at once. The 'statusCode' property of each response in the returned array will indicate success or failure."
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - $ref: '#/components/schemas/ErrorResponse'
                    - $ref: '#/components/schemas/AddDeviceProfileResponse'
    put:
      summary: "Allows updates to an existing device profile"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/UpdateDeviceProfileRequest'
      responses:
        '207':
          description: "Indicates a multi-part response supportive of accepting multiple requests at once. The 'statusCode' property of each response in the returned array will indicate success or failure."
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - $ref: '#/components/schemas/ErrorResponse'
                    - $ref: '#/components/schemas/UpdateDeviceProfileResponse'
  /deviceprofile/uploadfile:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
    post:
      summary: "Allows creation of a new device profile via an uploaded YAML file"
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                filename:
                  type: string
                  format: binary
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/AddDeviceProfileResponse'
        '400':
          description: "Invalid request."
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: "Conflict detected. Device name and command names must be universally unique."
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: "An unexpected error happened on the server."
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/ErrorResponse'
  /deviceprofile/all:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/limitParam'
      - $ref: '#/components/parameters/labelsParam'
    get:
      summary: "Given the entire range of device profiles sorted by last modified descending, returns a portion of that range according to the offset and limit parameters. Device profiles may also be filtered by label."
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceProfileResponse'
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: "An unexpected error occurred on the server"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorResponse'
  /deviceprofile/id/{id}:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: "An ID of datatype string, by default a GUID."
    get:
      summary: "Returns a device profile by ID"
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceProfileResponse'
        '404':
          description: "The requested resource does not exist"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: "An unexpected error occurred on the server"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: "Delete a device profile by ID. This operation will fail if there are devices actively using the profile."
      responses:
        '204':
          description: "Delete successful"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: "The requested resource does not exist"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: "The provided request conflicts with existing data"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: "An unexpected error occurred on the server"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /deviceprofile/name/{name}:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - name: name
        in: path
        required: true
        schema:
          type: string
        description: "The unique name of a device profile"
    get:
      summary: "Returns a device profile by its name"
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceProfileResponse'
        '404':
          description: "The requested resource does not exist"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: "An unexpected error occurred on the server"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: "Delete a device profile by its unique name. This operation will fail if there are devices actively using the profile."
      responses:
        '204':
          description: "Delete successful"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: "The requested resource does not exist"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: "The provided request conflicts with existing data"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: "An unexpected error occurred on the server"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /deviceprofile/manufacturer/{manufacturer}:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/limitParam'
      - name: manufacturer
        in: path
        required: true
        schema:
          type: string
        description: "The manufacturer for the device profiles in which you're interested."
    get:
      summary: "Returns a list of device profiles for the given manufacturer."
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceProfileResponse'
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: "An unexpected error occurred on the server"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorResponse'
  /deviceprofile/manufacturer/{manufacturer}/model/{model}:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/limitParam'
      - name: manufacturer
        in: path
        required: true
        schema:
          type: string
        description: "The manufacturer for the device profiles in which you're interested."
      - name: model
        in: path
        required: true
        schema:
          type: string
        description: "The model of the device profiles in which you're interested."
    get:
      summary: "Returns a list of device profiles for the given manufacturer and model."
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceProfileResponse'
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: "An unexpected error occurred on the server"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorResponse'
  /deviceprofile/model/{model}:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/limitParam'
      - name: model
        in: path
        required: true
        schema:
          type: string
        description: "The model assigned to the device profiles in which you're interested."
    get:
      summary: "Returns a list of device profiles for the given model."
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceProfileResponse'
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: "An unexpected error occurred on the server"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorResponse'
  /deviceservice:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
    post:
      summary: "Add a new DeviceService - name must be unique.  The Addressable must already exist and can be referenced by an included Addressable object containing the Addressable's id or name."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AddDeviceServiceRequest'
      responses:
        '207':
          description: "Indicates a multi-part response supportive of accepting multiple requests at once. The 'statusCode' property of each response in the returned array will indicate success or failure."
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - $ref: '#/components/schemas/ErrorResponse'
                    - $ref: '#/components/schemas/AddDeviceServiceResponse'
    patch:
      summary: "Allows updates to an existing device service"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDeviceServiceRequest'
      responses:
        '207':
          description: "Indicates a multi-part response supportive of accepting multiple requests at once. The 'statusCode' property of each response in the returned array will indicate success or failure."
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - $ref: '#/components/schemas/ErrorResponse'
                    - $ref: '#/components/schemas/UpdateDeviceServiceResponse'
  /deviceservice/all:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/limitParam'
      - $ref: '#/components/parameters/labelsParam'
    get:
      summary: "Given the entire range of device services sorted by last modified descending, returns a portion of that range according to the offset and limit parameters. Device services may also be filtered by label."
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceServiceResponse'
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: "An unexpected error occurred on the server"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorResponse'
  /deviceservice/id/{id}:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: "An ID of datatype string, by default a GUID."
    get:
      summary: "Returns a device service by ID"
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceServiceResponse'
        '404':
          description: "The requested resource does not exist"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: "An unexpected error occurred on the server"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: "Delete a device service by ID"
      responses:
        '204':
          description: "Delete successful"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: "An unexpected error occurred on the server"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /deviceservice/name/{name}:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - name: name
        in: path
        required: true
        schema:
          type: string
        description: "The unique name of the device service you want to load."
    get:
      summary: "Returns a device service by its unique name"
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceServiceResponse'
        '404':
          description: "The requested resource does not exist"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: "An unexpected error occurred on the server"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: "Delete a device service by its unique name"
      responses:
        '204':
          description: "Delete successful"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: "An unexpected error occurred on the server"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /deviceservice/addressable/id/{id}:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: "The unique ID of an addressable"
    get:
      summary: "Returns the device service associated with the specified addressable"
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceServiceResponse'
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: "The requested resource does not exist"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: "An unexpected error occurred on the server"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /deviceservice/addressable/name/{name}:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - name: name
        in: path
        required: true
        schema:
          type: string
        description: "The unique name of an addressable"
    get:
      summary: "Returns the device service associated with the specified addressable"
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceServiceResponse'
        '404':
          description: "The requested resource does not exist"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: "An unexpected error occurred on the server"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /config:
    post:
      summary: "Returns the current configuration of the service."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              anyOf:
                - $ref: '#/components/schemas/ConfigRequest'
                - type: array
                  items:
                    $ref: '#/components/schemas/ConfigRequest'
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigResponse'
        '207':
          description: "Indicates a multi-part response supportive of accepting multiple requests at once. The 'statusCode' property of each response in the returned array will indicate success or failure."
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - $ref: '#/components/schemas/ErrorResponse'
                    - $ref: '#/components/schemas/ConfigResponse'
        '400':
          description: "Bad request"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /metrics:
    post:
      summary: "An endpoint that can be used to obtain CPU/Memory usage stats for a given service."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              anyOf:
                - $ref: '#/components/schemas/MetricsRequest'
                - type: array
                  items:
                    $ref: '#/components/schemas/MetricsRequest'
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsResponse'
        '207':
          description: "Indicates a multi-part response supportive of accepting multiple requests at once. The 'statusCode' property of each response in the returned array will indicate success or failure."
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - $ref: '#/components/schemas/ErrorResponse'
                    - $ref: '#/components/schemas/MetricsResponse'
        '400':
          description: "Bad request"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /ping:
    post:
      summary: "A simple 'ping' endpoint that can be used as a service healthcheck"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              anyOf:
                - $ref: '#/components/schemas/PingRequest'
                - type: array
                  items:
                    $ref: '#/components/schemas/PingRequest'
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PingResponse'
        '207':
          description: "Indicates a multi-part response supportive of accepting multiple requests at once. The 'statusCode' property of each response in the returned array will indicate success or failure."
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - $ref: '#/components/schemas/ErrorResponse'
                    - $ref: '#/components/schemas/PingResponse'
        '400':
          description: "Bad request"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /version:
    post:
      summary: "A simple 'version' endpoint that will return the current version of the service"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              anyOf:
                - $ref: '#/components/schemas/VersionRequest'
                - type: array
                  items:
                    $ref: '#/components/schemas/VersionRequest'
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionResponse'
        '207':
          description: "Indicates a multi-part response supportive of accepting multiple requests at once. The 'statusCode' property of each response in the returned array will indicate success or failure."
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - $ref: '#/components/schemas/ErrorResponse'
                    - $ref: '#/components/schemas/VersionResponse'
        '400':
          description: "Bad request"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
