openapi: 3.0.0
info:
  title: Edgex Foundry - System Management Agent API
  description: "This is the definition of the API for the System Management Agent service in the EdgeX Foundry IOT microservice platform. System Management Agent is responsible for management of EdgeX microservices and supported infrastructure."
  version: 2.3.0

servers:
  - url: "http://localhost:58890/api/v2"
    description: "URL for local development and testing"

components:
  schemas:
    BaseRequest:
      description: "Defines basic properties which all use-case specific request DTO instances should support."
      type: object
      properties:
        requestId:
          description: "Uniquely identifies this request. For implementation, recommend this value be generated by the type's constructor."
          type: string
          format: uuid
          example: "e6e8a2f4-eb14-4649-9e2b-175247911369"
        apiVersion:
          description: "A version number shows the API version in DTOs."
          type: string
          example: v2
      required:
        - apiVersion
    BaseResponse:
      description: "Defines basic properties which all use-case specific response DTO instances should support"
      type: object
      properties:
        apiVersion:
          description: "A version number shows the API version in DTOs."
          type: string
          example: v2
        requestId:
          description: "Uniquely identifies the request that resulted in this response."
          type: string
          format: uuid
          example: "e6e8a2f4-eb14-4649-9e2b-175247911369"
        statusCode:
          description: "A numeric code signifying the operational status of the response."
          type: integer
        message:
          description: "A field that can contain a free-form message, such as an error message."
          type: string
    BaseWithServiceNameResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
      description: "Defines basic properties which all use-case specific response DTO instances should support"
      type: object
      properties:
        servieName:
          description: "A field indicates the original requested serviceName"
          type: string
          example: "core-data"
    BaseWithMetricsResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
      description: "Defines basic properties which all use-case specific response DTO instances should support"
      type: object
      properties:
        servieName:
          description: "A field indicates the original requested serviceName"
          type: string
          example: "core-data"
        metrics:
          description: "A response from the /metrics endpoint providing memory and cpu utilization stats."
          type: object
    BaseWithConfigResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
      description: "Defines basic properties which all use-case specific response DTO instances should support"
      type: object
      properties:
        servieName:
          description: "A field indicates the original requested serviceName"
          type: string
          example: "core-data"
        config:
          description: "An object containing the service's configuration. Please refer the configuration documentation of each service for more details at [EdgeX Foundry Documentation](https://docs.edgexfoundry.org)."
          type: object
    ErrorResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
      description: "A response type for returning a generic error to the caller."
      type: object
    OperationRequest:
      allOf:
        - $ref: '#/components/schemas/BaseRequest'
      description: "An Operation for SMA processing."
      properties:
        action:
          description: "The operation to execute on the service."
          type: string
          enum: [start, stop, restart]
        serviceName:
          description: "The service to which to apply the action."
          type: string
          example: "core-data"
    PingResponse:
      type: object
      properties:
        apiVersion:
          description: "A version number shows the API version in DTOs."
          type: string
          example: v2
        timestamp:
          description: "Outputs the current server timestamp in RFC1123 format"
          example: "Mon, 02 Jan 2006 15:04:05 MST"
          type: string
        serviceName:
          description: "Outputs the name of the service the response is from"
          type: string
    VersionResponse:
      description: "A response returned from the /version endpoint whose purpose is to report out the latest version supported by the service."
      type: object
      properties:
        apiVersion:
          description: "A version number shows the API version in DTOs."
          type: string
          example: v2
        version:
          description: "The latest version supported by the service."
          type: string
        serviceName:
          description: "Outputs the name of the service the response is from"
          type: string
    ConfigResponse:
      description: "Provides a response containing the configuration for the targeted service."
      type: object
      properties:
        apiVersion:
          description: "A version number shows the API version in DTOs."
          type: string
        config:
          description: "An object containing the service's configuration. Please refer the configuration documentation of each service for more details at [EdgeX Foundry Documentation](https://docs.edgexfoundry.org)."
          type: object
        serviceName:
          description: "Outputs the name of the service the response is from"
          type: string
    MetricsResponse:
      description: "A response from the /metrics endpoint providing memory and cpu utilization stats."
      type: object
      properties:
        apiVersion:
          description: "A version number shows the API version in DTOs."
          type: string
        serviceName:
          description: "Outputs the name of the service the response is from"
          type: string
        metrics:
          type: object
          properties:
            memAlloc:
              description: "Alloc is bytes of allocated heap objects."
              type: integer
            memFrees:
              description: "Frees is the cumulative count of heap objects freed."
              type: integer
            memLiveObjects:
              description: "The number of live objects is Mallocs - Frees."
              type: integer
            memMallocs:
              description: "The cumulative count of heap objects allocated."
              type: integer
            memSys:
              description: "The total bytes of memory obtained from the OS."
              type: integer
            memTotalAlloc:
              description: "Cumulative bytes allocated for heap objects."
              type: integer
            cpuBusyAvg:
              description: "Indicates the average level of CPU utilization"
              type: number
  parameters:
    correlatedRequestHeader:
      in: header
      name: X-Correlation-ID
      description: "A unique identifier correlating a request to its associated response, facilitating tracing through being included on requests originating from the initiating request."
      schema:
        type: string
        format: uuid
      example: "14a42ea6-c394-41c3-8bcd-a29b9f5e6835"
  headers:
    correlatedResponseHeader:
      description: "A response header that returns the unique correlation ID used to initiate the request."
      schema:
        type: string
        format: uuid
      example: "14a42ea6-c394-41c3-8bcd-a29b9f5e6835"
  examples:
    500Example:
      value:
        apiVersion: "v2"
        statusCode: 500
        message: "Internal Server Error"

paths:
  /system/health:
    get:
      summary: "Obtain health information from the targeted service."
      parameters:
        - name: services
          in: query
          description: "A comma-separated list of EdgeX service names to query for health."
          required: true
          schema:
            type: string
      responses:
        '207':
          description: "Indicates a multi-part response supportive of accepting multiple requests at once. The 'statusCode' property of each response in the returned array will indicate success or failure."
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - $ref: '#/components/schemas/BaseWithServiceNameResponse'
        '400':
          description: "Bad request"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: "Internal Server Error"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /system/metrics:
    get:
      summary: "Obtain metrics information from the targeted service(s)."
      parameters:
        - name: services
          in: query
          description: "A comma-separated list of EdgeX service names to query for metrics."
          required: true
          schema:
            type: string
      responses:
        '207':
          description: "Indicates a multi-part response supportive of accepting multiple requests at once. The 'statusCode' property of each response in the returned array will indicate success or failure."
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - $ref: '#/components/schemas/BaseWithMetricsResponse'
        '400':
          description: "Bad request"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: "Internal Server Error"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /system/config:
    get:
      summary: "Obtain configuration from the targeted service(s)."
      parameters:
        - name: services
          in: query
          description: "A comma-separated list of EdgeX service names to query for metrics."
          required: true
          schema:
            type: string
      responses:
        '207':
          description: "Indicates a multi-part response supportive of accepting multiple requests at once. The 'statusCode' property of each response in the returned array will indicate success or failure."
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - $ref: '#/components/schemas/BaseWithConfigResponse'
        '400':
          description: "Bad request"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: "Internal Server Error"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /system/operation:
    post:
      summary: "Issue a start, stop or restart action to the targeted service."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/OperationRequest'
      responses:
        '207':
          description: "Indicates a multi-part response supportive of accepting multiple requests at once. The 'statusCode' property of each response in the returned array will indicate success or failure."
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - $ref: '#/components/schemas/BaseWithServiceNameResponse'
        '400':
          description: "Bad request"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: "Internal Server Error"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /config:
    get:
      summary: "Returns the current configuration of the service."
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigResponse'
              example:
                apiVersion: "v2"
                config:
                  Writeable:
                    LogLevel: "INFO"
                  Clients:
                    edge-core-command:
                      Host: "edgex-core-command"
                      Port: 59882
                      Protocol: "http"
                    edge-core-data:
                      Host: "edgex-core-data"
                      Port: 59880
                      Protocol: "http"
                    edge-core-metadata:
                      Host: "edgex-core-metadata"
                      Port: 59881
                      Protocol: "http"
                    edge-support-scheduler:
                      Host: "edgex-support-scheduler"
                      Port: 59861
                      Protocol: "http"
                    edge-support-notifications:
                      Host: "edgex-support-notifications"
                      Port: 59860
                      Protocol: "http"
                  Service:
                    BootTimeout: 30000
                    CheckInterval: "10s"
                    Host: "edgex-core-data"
                    Port: 58890
                    SeverBindAddr: ""
                    Protocol: "http"
                    StartupMsg: "This is the System Management Agent Service"
                    MaxResultCount: 50000
                    Timeout: 20000
                  ExecutorPath: "../sys-mgmt-executor/sys-mgmt-executor"
                  MetricsMechanism: "direct-service"
                  Registry:
                    Host: "edgex-core-consul"
                    Port: 8500
                    Type: "consul"
                  SecretStore:
                    Type: "vault"
                    Host: "localhost"
                    Port: 8200
                    Path: "v1/secret/edgex/sys-mgmt-agent/"
                    Protocol: "http"
                    Namespace: ""
                    RootCaCertPath: ""
                    ServerName: ""
                    Authentication:
                      AuthType: "X-Vault-Token"
                      AuthToken: ""
                    TokenFile: "/vault/config/assets/resp-init.json"
        '500':
          description: "Interval Server Error"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
  /metrics:
    get:
      summary: "An endpoint that can be used to obtain CPU/Memory usage stats for a given service."
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsResponse'
              example:
                apiVersion: "v2"
                metrics:
                  memAlloc: 877192
                  memFrees: 2248915
                  memLiveObjects: 6522
                  memMallocs: 2255437
                  memSys: 72876280
                  memTotalAlloc: 203821192
                  cpuBusyAvg: 2.2521221920656003
        '500':
          description: "Interval Server Error"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
  /ping:
    get:
      summary: "A simple 'ping' endpoint that can be used as a service healthcheck"
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PingResponse'
              example:
                apiVersion: "v2"
                timestamp: "Mon, 02 Jan 2006 15:04:05 MST"
        '500':
          description: "Interval Server Error"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
  /version:
    get:
      summary: "A simple 'version' endpoint that will return the current version of the service"
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionResponse'
              example:
                apiVersion: "v2"
                version: "2.0.0-dev.1"
        '500':
          description: "Interval Server Error"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
