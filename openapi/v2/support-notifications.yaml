openapi: 3.0.0
info:
  title: Edgex Foundry - Support Notifications API
  description: This is the definition of the API for the Support Notifications service in the EdgeX Foundry IOT microservice platform. Support Notifications provides functionality for sending notifications via email/REST from the EdgeX Foundry platform.
  version: 2.x

servers:
  - url: http://localhost:48060/api/v2
    description: URL for local development and testing

components:
  schemas:
    AddNotificationRequest:
      allOf:
        - $ref: '#/components/schemas/BaseRequest'
      description: "A request to add a new notification."
      type: object
      properties:
        notification:
          $ref: '#/components/schemas/Notification'
      required:
        - notification
    AddSubscriptionRequest:
      allOf:
        - $ref: '#/components/schemas/BaseRequest'
      description: "A request to add a new subscription."
      type: object
      properties:
        subscription:
          $ref: '#/components/schemas/CreateSubscription'
      required:
        - subscription
    BaseRequest:
      description: "Defines basic properties which all use-case specific request DTO instances should support."
      type: object
      properties:
        requestId:
          description: "Uniquely identifies this request. For implementation, recommend this value be generated by the type's constructor."
          type: string
          format: uuid
          example: "e6e8a2f4-eb14-4649-9e2b-175247911369"
        apiVersion:
          description: "A version number shows the API version in DTOs."
          type: string
          example: v2
      required:
        - apiVersion
    BaseResponse:
      description: "Defines basic properties which all use-case specific response DTO instances should support"
      type: object
      properties:
        apiVersion:
          description: "A version number shows the API version in DTOs."
          type: string
        requestId:
          description: "Uniquely identifies the request that resulted in this response."
          type: string
          format: uuid
          example: "e6e8a2f4-eb14-4649-9e2b-175247911369"
        statusCode:
          description: "A numeric code signifying the operational status of the response."
          type: integer
        message:
          description: "A field that can contain a free-form message, such as an error message."
          type: string
    BaseWithIdResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
      description: "Defines basic properties which all use-case specific response DTO instances should support"
      type: object
      properties:
        id:
          description: "The unique identifier for the instance."
          type: string
          format: uuid
    Channel:
      description: "Defines the transport supported for a given notification."
      type: object
      properties:
        emailAddresses:
          description: "If the transport is EMAIL, one or more email addresses that should receive the notification."
          type: array
          items:
            type: string
        type:
          description: "Indicates the type of transport to be used in delivering the notification. May be one of the following values: REST, EMAIL"
          type: string
        url:
          description: "If the transport is REST, the target URL to which the notification will be posted."
          type: string
    ErrorResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
      description: "A response type for returning a generic error to the caller."
      type: object
    ConfigResponse:
      description: "An object containing the service's configuration. Please refer the configuration documentation of each service for more details at [EdgeX Foundry Documentation](https://docs.edgexfoundry.org)."
      type: object
      properties:
        apiVersion:
          description: "A version number shows the API version in DTOs."
          type: string
          example: v2
        config:
          description: "A string-ified representation of the service's configuration. For purposes of this specification, a string has been used since configuration structure differs from service to service."
          type: object
    MetricsResponse:
      description: "A response from the /metrics endpoint providing memory and cpu utilization stats."
      type: object
      properties:
        apiVersion:
          description: "A version number shows the API version in DTOs."
          type: string
          example: v2
        metrics:
          type: object
          properties:
            memAlloc:
              description: "Alloc is bytes of allocated heap objects which is a uint64 type integer."
              type: integer
            memFrees:
              description: "Frees is the cumulative count of heap objects freed which is a uint64 type integer."
              type: integer
            memLiveObjects:
              description: "The uint64 type integer of live objects is Mallocs - Frees."
              type: integer
            memMallocs:
              description: "The cumulative count of heap objects allocated which is a uint64 type integer."
              type: integer
            memSys:
              description: "The total bytes of memory obtained from the OS which is a uint64 type integer."
              type: integer
            memTotalAlloc:
              description: "Cumulative bytes allocated for heap objects which is a uint64 type integer."
              type: integer
            cpuBusyAvg:
              description: "A uint8 type integer indicates the average level of CPU utilization"
              type: number
    Notification:
      description: "Defines the content included in a notification"
      type: object
      properties:
        category:
          description: "Categorizes the notification. Must be one of three values: SECURITY, HW_HEALTH, SW_HEALTH"
        content:
          description: "The actual content to be sent as the body of the notification."
          type: string
        contentType:
          description: "Indicates the MIME type/Content-type of the notification's content."
          type: string
        created:
          description: "A timestamp indicating when the notification was created."
          type: integer
        description:
          description: "An optional description of the notification's intent."
          type: string
        id:
          description: "Uniquely identifies the notification"
          type: string
          format: uuid
        labels:
          description: "Arbitrary labels that can be applied to notifications for further categorization or identification."
          type: array
          items:
            type: string
        modified:
          description: "A timestamp indicating when the notification was last modified."
          type: integer
        sender:
          description: "Identifies the sender of a notification, usually an email address."
          type: string
        severity:
          description: "Indicates the level of severity for the notification. Current accepted values include: MINOR, NORMAL, CRITICAL"
          type: string
        status:
          description: "A status indicating the current processing status of the notification. Accepted values are: NEW, PROCESSED, ESCALATED"
          type: string
      required:
        - content
        - sender
        - severity
    NotificationResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
      description: "A response type for returning a notification to the caller."
      type: object
      properties:
        notification:
          $ref: '#/components/schemas/Notification'
    MultiNotificationsResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
      description: "A response type for returning Notifications to the caller."
      type: object
      properties:
        notifications:
          type: array
          items:
            $ref: '#/components/schemas/Notification'
    PingResponse:
      description: "Provides a response containing the API version and current server timestamp."
      type: object
      properties:
        apiVersion:
          description: "A version number shows the API version in DTOs."
          type: string
          example: v2
        timestamp:
          description: "Outputs the current server timestamp in RFC1123 format"
          example: "Mon, 02 Jan 2006 15:04:05 MST"
          type: string
    Subscription:
      description: "Define address information for a party interested in receiving notifications."
      type: object
      properties:
        id:
          description: "Uniquely identifies the subscription"
          type: string
          format: uuid
        created:
          description: "A timestamp indicating when the subscription was created."
          type: integer
        modified:
          description: "A timestamp indicating when the subscription was last modified."
          type: integer
        name:
          description: "A meaningful identifier for the subscription."
          type: string
        channels:
          description: "Indicates how this subscription is capable of receiving notifications."
          type: array
          items:
            $ref: '#/components/schemas/Channel'
        categories:
          description: "Links the subscription to one or more categories of notification. Must be one of three values: SECURITY, HW_HEALTH, SW_HEALTH"
          type: array
          items:
            type: string
        labels:
          description: "Arbitrary labels that can be applied to the subscription for further categorization or identification."
          type: array
          items:
            type: string
        description:
          description: "An optional description of the subscription's intent."
          type: string
        receiver:
          description: "The name of the party interested in the notification."
          type: string
        resendLimit:
          description: "The retry limit for attempts to send notifications."
          type: integer
        resendInterval:
          description: "The interval in ISO 8691 format of resending the notification."
          type: string
    CreateSubscription:
      description: "Create address information for a party interested in receiving notifications."
      type: object
      properties:
        name:
          description: "A meaningful identifier for the subscription."
          type: string
        channels:
          description: "Indicates how this subscription is capable of receiving notifications."
          type: array
          items:
            $ref: '#/components/schemas/Channel'
        categories:
          description: "Links the subscription to one or more categories of notification. Must be one of three values: SECURITY, HW_HEALTH, SW_HEALTH"
          type: array
          items:
            type: string
        labels:
          description: "Arbitrary labels that can be applied to the subscription for further categorization or identification."
          type: array
          items:
            type: string
        description:
          description: "An optional description of the subscription's intent."
          type: string
        receiver:
          description: "The name of the party interested in the notification."
          type: string
        resendLimit:
          description: "The retry limit for attempts to send notifications."
          type: integer
        resendInterval:
          description: "The interval in ISO 8691 format of resending the notification."
          type: string
      required:
        - name
        - channels
        - receiver
    UpdateSubscription:
      description: "Update address information for a party interested in receiving notifications."
      type: object
      properties:
        id:
          description: "Uniquely identifies the subscription"
          type: string
          format: uuid
        name:
          description: "A meaningful identifier for the subscription."
          type: string
        channels:
          description: "Indicates how this subscription is capable of receiving notifications."
          type: array
          items:
            $ref: '#/components/schemas/Channel'
        categories:
          description: "Links the subscription to one or more categories of notification. Must be one of three values: SECURITY, HW_HEALTH, SW_HEALTH"
          type: array
          items:
            type: string
        labels:
          description: "Arbitrary labels that can be applied to the subscription for further categorization or identification."
          type: array
          items:
            type: string
        description:
          description: "An optional description of the subscription's intent."
          type: string
        receiver:
          description: "The name of the party interested in the notification."
          type: string
        resendLimit:
          description: "The retry limit for attempts to send notifications."
          type: integer
        resendInterval:
          description: "The interval in ISO 8691 format of resending the notification."
          type: string
    SubscriptionResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
      description: "A response type for returning a Subscription to the caller."
      type: object
      properties:
        subscription:
          $ref: '#/components/schemas/Subscription'
    MultiSubscriptionsResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
      description: "A response type for returning Subscriptions to the caller."
      type: object
      properties:
        subscriptions:
          type: array
          items:
            $ref: '#/components/schemas/Subscription'
    Transmission:
      description: "Records an individual attempt to send a notification, whether successful or not."
      type: object
      properties:
        channel:
          $ref: '#/components/schemas/Channel'
        created:
          description: "A timestamp indicating when the transmission was created."
          type: integer
        id:
          description: "Uniquely identifies the transmission"
          type: string
          format: uuid
        notification:
          $ref: '#/components/schemas/Notification'
        subscriptionName:
          description: "The name of the subscription interested in the notification."
          type: string
        records:
          description: "Contains the result of all attempts to deliver this particular transmission."
          type: array
          items:
            $ref: '#/components/schemas/TransmissionRecord'
        resendCount:
          description: "Indicates how many time resend has been attempted for the transmission."
          type: integer
        status:
          description: "Indicates the most recent success/failure of a given transmission attempt. Accepted values are: ACKNOWLEDGED, FAILED, SENT, TRXESCALATED"
          type: string
      required:
        - channel
        - notification
        - subscriptionName
        - status
    TransmissionRecord:
      description: "Records the result of an individual attempt to transmit a notification."
      type: object
      properties:
        status:
          description: "Indicates the success/failure of a given transmission attempt. Accepted values are: ACKNOWLEDGED, FAILED, SENT, TRXESCALATED"
          type: string
        response:
          description: "Records any response received when attempting the transmission. An HTTP error or SMTP failure will be logged here."
          type: string
        sent:
          description: "The timestamp of the transmission attempt."
          type: integer
    TransmissionResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
      description: "A response type for returning a Transmission to the caller."
      type: object
      properties:
        transmission:
          $ref: '#/components/schemas/Transmission'
    MultiTransmissionsResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
      description: "A response type for returning Transmissions to the caller."
      type: object
      properties:
        transmissions:
          type: array
          items:
            $ref: '#/components/schemas/Transmission'
    UpdateSubscriptionRequest:
      allOf:
        - $ref: '#/components/schemas/BaseRequest'
      description: "A request to update an existing Subscription. 'id' or 'name' must be populated in order to identify the subscription. Any other property that is populated in the request will be updated. Empty/blank properties will not be considered."
      type: object
      properties:
        subscription:
          $ref: '#/components/schemas/UpdateSubscription'
      required:
        - subscription
    VersionResponse:
      description: "A response returned from the /version endpoint whose purpose is to report out the latest version supported by the service."
      type: object
      properties:
        apiVersion:
          description: "A version number shows the API version in DTOs."
          type: string
          example: v2
        version:
          description: "The latest version supported by the service."
          type: string
  parameters:
    offsetParam:
      in: query
      name: offset
      required: false
      schema:
        type: integer
        minimum: 0
        default: 0
      description: "The number of items to skip before starting to collect the result set."
    limitParam:
      in: query
      name: limit
      required: false
      schema:
        type: integer
        minimum: -1
        default: 20
      description: "The numbers of items to return.  Specify -1 will return all remaining items after offset.  The maximum will be the MaxResultCount as defined in the configuration of service."
    correlatedRequestHeader:
      in: header
      name: X-Correlation-ID
      description: "A unique identifier correlating a request to its associated response, facilitating tracing through being included on requests originating from the initiating request."
      schema:
        type: string
        format: uuid
      example: "14a42ea6-c394-41c3-8bcd-a29b9f5e6835"
  headers:
    correlatedResponseHeader:
      description: "A response header that returns the unique correlation ID used to initiate the request."
      schema:
        type: string
        format: uuid
      example: "14a42ea6-c394-41c3-8bcd-a29b9f5e6835"
  examples:
    400Example:
      value:
        apiVersion: "v2"
        requestId: ""
        statusCode: 400
        message: "Bad Request"
    500Example:
      value:
        apiVersion: "v2"
        requestId: ""
        statusCode: 500
        message: "Internal Server Error"
paths:
  /cleanup:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
    delete:
      summary: "Deletes all notifications and the corresponding transmissions."
      responses:
        '204':
          description: "Delete successful"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
        '500':
          description: "An unexpected error occurred on the server"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /cleanup/age/{age}:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - name: age
        in: path
        required: true
        schema:
          type: integer
        description: "Indicates the age of a notification in ticks"
    delete:
      summary: "Deletes notifications which have age and is less than the specified one, where the age of Notification is calculated by subtracting its last modification timestamp from the current timestamp. Note that the corresponding transmissions will also be deleted."
      responses:
        '204':
          description: "Delete successful"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
        '500':
          description: "An unexpected error occurred on the server"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /notification:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
    post:
      summary: "Adds one or more notifications to be sent."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AddNotificationRequest'
      responses:
        '207':
          description: "Indicates a multi-part response supportive of accepting multiple requests at once. The 'statusCode' property of each response in the returned array will indicate success or failure."
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - $ref: '#/components/schemas/ErrorResponse'
                    - $ref: '#/components/schemas/BaseWithIdResponse'
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                400Example:
                  $ref: '#/components/examples/400Example'
        '500':
          description: An unexpected error occurred on the server
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
  /notification/start/{start}/end/{end}:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - name: start
        in: path
        required: true
        schema:
          type: integer
        description: "The beginning timestamp of the range of notifications to be returned."
      - name: end
        in: path
        required: true
        schema:
          type: integer
        description: "The ending timestamp of the range of notifications to be returned."
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/limitParam'
    get:
      summary: "Allows querying of notifications by their creation timestamp within a given time range, sorted in descending order. Results are paginated."
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiNotificationsResponse'
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: "An unexpected error occurred on the server"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorResponse'
  /notification/age/{age}:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - name: age
        in: path
        required: true
        schema:
          type: integer
        description: "Indicates the age of a notification in ticks"
    delete:
      summary: "Deletes the processed notifications if the current timestamp minus their last modification timestamp is less than the age parameter, and the corresponding transmissions will also be deleted.  Please notice that this API is only for processed notifications (status = PROCESSED). If the deletion purpose includes each kind of notifications, please refer to /cleanup API."
      responses:
        '204':
          description: "Delete successful"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: "The requested resource does not exist"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: "An unexpected error occurred on the server"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /notification/category/{category}:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - name: category
        in: path
        required: true
        schema:
          type: string
        description: "The category of the notifications you wish to load."
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/limitParam'
    get:
      summary: "Returns a paginated list of notifications associated with the given category."
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiNotificationsResponse'
        '404':
          description: "The requested resource does not exist"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: "An unexpected error occurred on the server"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorResponse'
  /notification/label/{label}:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - name: label
        in: path
        required: true
        schema:
          type: string
        description: "The label of the notifications you wish to load."
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/limitParam'
    get:
      summary: "Returns a paginated list of notifications associated with the given label."
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiNotificationsResponse'
        '404':
          description: "The requested resource does not exist"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: "An unexpected error occurred on the server"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorResponse'
  /notification/id/{id}:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - name: id
        in: path
        required: true
        schema:
          type: string
        description: "The ID that identifies the notification."
    get:
      summary: "Returns a notification by ID."
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationResponse'
        '404':
          description: "The requested resource does not exist"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: "An unexpected error occurred on the server"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: "Deletes a notification by ID and all of its associated transmissions."
      responses:
        '204':
          description: "Delete successful"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: "The requested resource does not exist"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: "An unexpected error occurred on the server"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /notification/status/{status}:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - name: status
        in: path
        required: true
        schema:
          type: string
        description: "The status of the notifications you wish to load."
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/limitParam'
    get:
      summary: "Returns a paginated list of notifications with the specified status."
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiNotificationsResponse'
        '404':
          description: "The requested resource does not exist"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: "An unexpected error occurred on the server"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorResponse'
  /notification/subscription/name/{name}:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - name: name
        in: path
        required: true
        schema:
          type: string
        description: "The name of the subscription."
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/limitParam'
    get:
      summary: "Returns a paginated list of notifications to which the specified subscription is interested."
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiNotificationsResponse'
        '404':
          description: "The requested resource does not exist"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: "An unexpected error occurred on the server"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscription:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
    post:
      summary: "Adds one or more new subscriptions."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AddSubscriptionRequest'
      responses:
        '207':
          description: "Indicates a multi-part response supportive of accepting multiple requests at once. The 'statusCode' property of each response in the returned array will indicate success or failure."
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - $ref: '#/components/schemas/ErrorResponse'
                    - $ref: '#/components/schemas/BaseWithIdResponse'
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                400Example:
                  $ref: '#/components/examples/400Example'
        '500':
          description: An unexpected error occurred on the server
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
    patch:
      summary: "Updates one or more existing Subscriptions. You might do this in order to add an additional channel if you want another endpoint/person to receive the notification."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/UpdateSubscriptionRequest'
      responses:
        '207':
          description: "Indicates a multi-part response supportive of accepting multiple requests at once. The 'statusCode' property of each response in the returned array will indicate success or failure."
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - $ref: '#/components/schemas/ErrorResponse'
                    - $ref: '#/components/schemas/BaseWithIdResponse'
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                400Example:
                  $ref: '#/components/examples/400Example'
        '500':
          description: An unexpected error occurred on the server
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
  /subscription/all:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/limitParam'
    get:
      summary: "Allows paginated retrieval of subscriptions, sorted by created timestamp descending."
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiSubscriptionsResponse'
        '500':
          description: "An unexpected error occurred on the server"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorResponse'
  /subscription/category/{category}:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - name: category
        in: path
        required: true
        schema:
          type: string
        description: "The category of the subscriptions you wish to load."
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/limitParam'
    get:
      summary: "Returns a paginated list of subscriptions associated with the specified category."
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiSubscriptionsResponse'
        '404':
          description: "The requested resource does not exist"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: "An unexpected error occurred on the server"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorResponse'
  /subscription/label/{label}:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - name: label
        in: path
        required: true
        schema:
          type: string
        description: "The label of the subscriptions you wish to load."
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/limitParam'
    get:
      summary: "Returns a paginated list of subscriptions associated with the specified label."
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiSubscriptionsResponse'
        '404':
          description: "The requested resource does not exist"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: "An unexpected error occurred on the server"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorResponse'
  /subscription/receiver/{receiver}:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - name: receiver
        in: path
        required: true
        schema:
          type: string
        description: "The receiver of the subscriptions you wish to load."
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/limitParam'
    get:
      summary: "Returns a paginated list of subscriptions associated with the specified receiver."
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiSubscriptionsResponse'
        '404':
          description: "The requested resource does not exist"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: "An unexpected error occurred on the server"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorResponse'
  /subscription/name/{name}:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - name: name
        in: path
        required: true
        schema:
          type: string
        description: "The name given to the subscription of interest."
    get:
      summary: "Returns a subscription by its unique name."
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionResponse'
        '404':
          description: "The requested resource does not exist"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: "An unexpected error occurred on the server"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: "Deletes a subscription according to the given name."
      responses:
        '204':
          description: "Delete successful"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
        '404':
          description: "The requested resource does not exist"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: "An unexpected error occurred on the server"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /transmission/id/{id}:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - name: id
        in: path
        required: true
        schema:
          type: string
        description: "The ID that identifies the transmission."
    get:
      summary: "Returns a transmission by ID."
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransmissionResponse'
        '404':
          description: "The requested resource does not exist"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: "An unexpected error occurred on the server"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /transmission/age/{age}:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - name: age
        in: path
        required: true
        schema:
          type: integer
        description: "Indicates the age of a transmission in ticks"
    delete:
      summary: "Deletes the processed transmissions if the current timestamp minus their last modification timestamp is less than the age parameter."
      responses:
        '204':
          description: "Delete successful"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: "The requested resource does not exist"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: "An unexpected error occurred on the server"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /transmission/all:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/limitParam'
    get:
      summary: "Given the entire range of transmissions sorted in descending order of created time, returns a portion of that range according to the offset and limit parameters."
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiTransmissionsResponse'
        '500':
          description: "An unexpected error occurred on the server"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorResponse'
  /transmission/subscription/name/{name}:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - name: name
        in: path
        required: true
        schema:
          type: string
        description: "The name of the subscription."
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/limitParam'
    get:
      summary: "Returns a paginated list of transmissions that originated with the specified subscription."
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiTransmissionsResponse'
        '404':
          description: "The requested resource does not exist"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: "An unexpected error occurred on the server"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /transmission/start/{start}/end/{end}:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - name: start
        in: path
        required: true
        schema:
          type: integer
        description: "The beginning timestamp of the range of transmissions to be returned."
      - name: end
        in: path
        required: true
        schema:
          type: integer
        description: "The ending timestamp of the range of transmissions to be returned."
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/limitParam'
    get:
      summary: "Allows querying of transmissions by their creation timestamp within a given time range, sorted in descending order. Results are paginated."
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiTransmissionsResponse'
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: "An unexpected error occurred on the server"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorResponse'
  /transmission/status/{status}:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - name: status
        in: path
        required: true
        schema:
          type: string
        description: "The status of the transmissions you wish to load."
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/limitParam'
    get:
      summary: "Allows retrieval of the transmissions associated with the specified status. Ordered by create timestamp descending."
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiTransmissionsResponse'
        '404':
          description: "The requested resource does not exist"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: "An unexpected error occurred on the server"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /config:
    get:
      summary: "Returns the current configuration of the service."
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigResponse'
        '500':
          description: "Interval Server Error"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
  /metrics:
    get:
      summary: "An endpoint that can be used to obtain CPU/Memory usage stats for a given service."
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsResponse'
              example:
                apiVersion: "v2"
                metrics:
                  memAlloc: 877192
                  memFrees: 2248915
                  memLiveObjects: 6522
                  memMallocs: 2255437
                  memSys: 72876280
                  memTotalAlloc: 203821192
                  cpuBusyAvg: 2.2521221920656003
        '500':
          description: "Interval Server Error"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
  /ping:
    get:
      summary: "A simple 'ping' endpoint that can be used as a service healthcheck"
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PingResponse'
              example:
                apiVersion: "v2"
                timestamp: "Mon, 02 Jan 2006 15:04:05 MST"
        '500':
          description: "Interval Server Error"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
  /version:
    get:
      summary: "A simple 'version' endpoint that will return the current version of the service"
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionResponse'
              example:
                apiVersion: "v2"
                version: "2.0.0-dev.13"
        '500':
          description: "Interval Server Error"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
