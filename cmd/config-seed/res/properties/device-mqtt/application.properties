###############################################################################
# Copyright 2016-2017 Dell Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# @microservice:  device-mqtt
# @author: Jim White, Dell
# @version: 1.0.0
###############################################################################
#REST read data limit
read.max.limit=100
#logging levels (used to control log4j entries)
logging.level.org.springframework=ERROR
logging.level.org.apache=ERROR
logging.level.org.edgexfoundry=DEBUG
app.open.msg=This is the device-mqtt micro service
#every 5 minutes (in milliseconds)
heart.beat.time=300000
server.port=49982
#default device service settings
service.name=device-mqtt
service.host=localhost
#service.host=${service.name}
service.labels=MQTT
service.callback=/api/v1/callback
#connection retry parameters
service.connect.retries=12
service.connect.wait=5000
service.connect.interval=10000
# callback timeout in milliseconds
service.timeout=5000
spring.mvc.dispatch-options-request=true
data.transform=true
mqtt.device.init=Init
mqtt.device.init.args={ value: 1 }
mqtt.device.remove=Remove
mqtt.device.remove.args={ value: 0 }
#-----------------------------------
#Cloud MQTT connection information
#for incoming messages from devices
#Use TestIoTMQTT Broker for testing/dev
INCOMING_MQTT_BROKER_PROTO=tcp
INCOMING_MQTT_BROKER=m11.cloudmqtt.com
INCOMING_MQTT_BROKER_PORT=15757
INCOMING_MQTT_CLIENT_ID=IncomingDataSubscriber
INCOMING_MQTT_TOPIC=DataTopic
INCOMING_MQTT_QOS=0
INCOMING_MQTT_USER=tobeprovided
INCOMING_MQTT_PASS=tobeprovided
#keep alive set to 1 hour
INCOMING_MQTT_KEEP_ALIVE=3600
#for command response messages
RESPONSE_MQTT_BROKER_PROTO=tcp
RESPONSE_MQTT_BROKER=m11.cloudmqtt.com
RESPONSE_MQTT_BROKER_PORT=15757
RESPONSE_MQTT_CLIENT_ID=CommandResponseSubscriber
RESPONSE_MQTT_TOPIC=ResponseTopic
RESPONSE_MQTT_QOS=0
RESPONSE_MQTT_USER=tobeprovided
RESPONSE_MQTT_PASS=tobeprovided
#keep alive set to 1 hour
RESPONSE_MQTT_KEEP_ALIVE=3600
#-----------example test device----------------
provision.mqtt.device=true
device.profile.name=MQTTTestDeviceProfile.yml
device.name=TestMQTTDevice
device.description=Default Test MQTT Device
device.labels=MQTT, Test
device.addressablename=testMQTTAddressable
#for outgoing test command messages
request.broker.proto=TCP
request.broker=m11.cloudmqtt.com
request.broker.port=15757
request.client.id=OutgoingCommandPublisher
request.topic=CommandTopic
request.user=tobeprovided
request.pass=tobeprovided


