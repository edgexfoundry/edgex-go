//
// Copyright 2019 Contributors to the Parsec project.
// SPDX-License-Identifier: Apache-2.0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.6.1
// source: psa_algorithm.proto

package psaalgorithm

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Algorithm_Hash int32

const (
	Algorithm_HASH_NONE Algorithm_Hash = 0 // This default variant should not be used.
	// Deprecated: Do not use.
	Algorithm_MD2 Algorithm_Hash = 1
	// Deprecated: Do not use.
	Algorithm_MD4 Algorithm_Hash = 2
	// Deprecated: Do not use.
	Algorithm_MD5       Algorithm_Hash = 3
	Algorithm_RIPEMD160 Algorithm_Hash = 4
	// Deprecated: Do not use.
	Algorithm_SHA_1       Algorithm_Hash = 5
	Algorithm_SHA_224     Algorithm_Hash = 6
	Algorithm_SHA_256     Algorithm_Hash = 7
	Algorithm_SHA_384     Algorithm_Hash = 8
	Algorithm_SHA_512     Algorithm_Hash = 9
	Algorithm_SHA_512_224 Algorithm_Hash = 10
	Algorithm_SHA_512_256 Algorithm_Hash = 11
	Algorithm_SHA3_224    Algorithm_Hash = 12
	Algorithm_SHA3_256    Algorithm_Hash = 13
	Algorithm_SHA3_384    Algorithm_Hash = 14
	Algorithm_SHA3_512    Algorithm_Hash = 15
)

// Enum value maps for Algorithm_Hash.
var (
	Algorithm_Hash_name = map[int32]string{
		0:  "HASH_NONE",
		1:  "MD2",
		2:  "MD4",
		3:  "MD5",
		4:  "RIPEMD160",
		5:  "SHA_1",
		6:  "SHA_224",
		7:  "SHA_256",
		8:  "SHA_384",
		9:  "SHA_512",
		10: "SHA_512_224",
		11: "SHA_512_256",
		12: "SHA3_224",
		13: "SHA3_256",
		14: "SHA3_384",
		15: "SHA3_512",
	}
	Algorithm_Hash_value = map[string]int32{
		"HASH_NONE":   0,
		"MD2":         1,
		"MD4":         2,
		"MD5":         3,
		"RIPEMD160":   4,
		"SHA_1":       5,
		"SHA_224":     6,
		"SHA_256":     7,
		"SHA_384":     8,
		"SHA_512":     9,
		"SHA_512_224": 10,
		"SHA_512_256": 11,
		"SHA3_224":    12,
		"SHA3_256":    13,
		"SHA3_384":    14,
		"SHA3_512":    15,
	}
)

func (x Algorithm_Hash) Enum() *Algorithm_Hash {
	p := new(Algorithm_Hash)
	*p = x
	return p
}

func (x Algorithm_Hash) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Algorithm_Hash) Descriptor() protoreflect.EnumDescriptor {
	return file_psa_algorithm_proto_enumTypes[0].Descriptor()
}

func (Algorithm_Hash) Type() protoreflect.EnumType {
	return &file_psa_algorithm_proto_enumTypes[0]
}

func (x Algorithm_Hash) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Algorithm_Hash.Descriptor instead.
func (Algorithm_Hash) EnumDescriptor() ([]byte, []int) {
	return file_psa_algorithm_proto_rawDescGZIP(), []int{0, 0}
}

type Algorithm_Cipher int32

const (
	Algorithm_CIPHER_NONE    Algorithm_Cipher = 0 // This default variant should not be used.
	Algorithm_STREAM_CIPHER  Algorithm_Cipher = 1
	Algorithm_CTR            Algorithm_Cipher = 2
	Algorithm_CFB            Algorithm_Cipher = 3
	Algorithm_OFB            Algorithm_Cipher = 4
	Algorithm_XTS            Algorithm_Cipher = 5
	Algorithm_ECB_NO_PADDING Algorithm_Cipher = 6
	Algorithm_CBC_NO_PADDING Algorithm_Cipher = 7
	Algorithm_CBC_PKCS7      Algorithm_Cipher = 8
)

// Enum value maps for Algorithm_Cipher.
var (
	Algorithm_Cipher_name = map[int32]string{
		0: "CIPHER_NONE",
		1: "STREAM_CIPHER",
		2: "CTR",
		3: "CFB",
		4: "OFB",
		5: "XTS",
		6: "ECB_NO_PADDING",
		7: "CBC_NO_PADDING",
		8: "CBC_PKCS7",
	}
	Algorithm_Cipher_value = map[string]int32{
		"CIPHER_NONE":    0,
		"STREAM_CIPHER":  1,
		"CTR":            2,
		"CFB":            3,
		"OFB":            4,
		"XTS":            5,
		"ECB_NO_PADDING": 6,
		"CBC_NO_PADDING": 7,
		"CBC_PKCS7":      8,
	}
)

func (x Algorithm_Cipher) Enum() *Algorithm_Cipher {
	p := new(Algorithm_Cipher)
	*p = x
	return p
}

func (x Algorithm_Cipher) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Algorithm_Cipher) Descriptor() protoreflect.EnumDescriptor {
	return file_psa_algorithm_proto_enumTypes[1].Descriptor()
}

func (Algorithm_Cipher) Type() protoreflect.EnumType {
	return &file_psa_algorithm_proto_enumTypes[1]
}

func (x Algorithm_Cipher) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Algorithm_Cipher.Descriptor instead.
func (Algorithm_Cipher) EnumDescriptor() ([]byte, []int) {
	return file_psa_algorithm_proto_rawDescGZIP(), []int{0, 1}
}

type Algorithm_Aead_AeadWithDefaultLengthTag int32

const (
	Algorithm_Aead_AEAD_WITH_DEFAULT_LENGTH_TAG_NONE Algorithm_Aead_AeadWithDefaultLengthTag = 0 // This default variant should not be used.
	Algorithm_Aead_CCM                               Algorithm_Aead_AeadWithDefaultLengthTag = 1
	Algorithm_Aead_GCM                               Algorithm_Aead_AeadWithDefaultLengthTag = 2
	Algorithm_Aead_CHACHA20_POLY1305                 Algorithm_Aead_AeadWithDefaultLengthTag = 3
)

// Enum value maps for Algorithm_Aead_AeadWithDefaultLengthTag.
var (
	Algorithm_Aead_AeadWithDefaultLengthTag_name = map[int32]string{
		0: "AEAD_WITH_DEFAULT_LENGTH_TAG_NONE",
		1: "CCM",
		2: "GCM",
		3: "CHACHA20_POLY1305",
	}
	Algorithm_Aead_AeadWithDefaultLengthTag_value = map[string]int32{
		"AEAD_WITH_DEFAULT_LENGTH_TAG_NONE": 0,
		"CCM":                               1,
		"GCM":                               2,
		"CHACHA20_POLY1305":                 3,
	}
)

func (x Algorithm_Aead_AeadWithDefaultLengthTag) Enum() *Algorithm_Aead_AeadWithDefaultLengthTag {
	p := new(Algorithm_Aead_AeadWithDefaultLengthTag)
	*p = x
	return p
}

func (x Algorithm_Aead_AeadWithDefaultLengthTag) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Algorithm_Aead_AeadWithDefaultLengthTag) Descriptor() protoreflect.EnumDescriptor {
	return file_psa_algorithm_proto_enumTypes[2].Descriptor()
}

func (Algorithm_Aead_AeadWithDefaultLengthTag) Type() protoreflect.EnumType {
	return &file_psa_algorithm_proto_enumTypes[2]
}

func (x Algorithm_Aead_AeadWithDefaultLengthTag) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Algorithm_Aead_AeadWithDefaultLengthTag.Descriptor instead.
func (Algorithm_Aead_AeadWithDefaultLengthTag) EnumDescriptor() ([]byte, []int) {
	return file_psa_algorithm_proto_rawDescGZIP(), []int{0, 2, 0}
}

type Algorithm_KeyAgreement_Raw int32

const (
	Algorithm_KeyAgreement_RAW_NONE Algorithm_KeyAgreement_Raw = 0 // This default variant should not be used.
	Algorithm_KeyAgreement_FFDH     Algorithm_KeyAgreement_Raw = 1
	Algorithm_KeyAgreement_ECDH     Algorithm_KeyAgreement_Raw = 2
)

// Enum value maps for Algorithm_KeyAgreement_Raw.
var (
	Algorithm_KeyAgreement_Raw_name = map[int32]string{
		0: "RAW_NONE",
		1: "FFDH",
		2: "ECDH",
	}
	Algorithm_KeyAgreement_Raw_value = map[string]int32{
		"RAW_NONE": 0,
		"FFDH":     1,
		"ECDH":     2,
	}
)

func (x Algorithm_KeyAgreement_Raw) Enum() *Algorithm_KeyAgreement_Raw {
	p := new(Algorithm_KeyAgreement_Raw)
	*p = x
	return p
}

func (x Algorithm_KeyAgreement_Raw) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Algorithm_KeyAgreement_Raw) Descriptor() protoreflect.EnumDescriptor {
	return file_psa_algorithm_proto_enumTypes[3].Descriptor()
}

func (Algorithm_KeyAgreement_Raw) Type() protoreflect.EnumType {
	return &file_psa_algorithm_proto_enumTypes[3]
}

func (x Algorithm_KeyAgreement_Raw) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Algorithm_KeyAgreement_Raw.Descriptor instead.
func (Algorithm_KeyAgreement_Raw) EnumDescriptor() ([]byte, []int) {
	return file_psa_algorithm_proto_rawDescGZIP(), []int{0, 5, 0}
}

type Algorithm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Variant:
	//	*Algorithm_None_
	//	*Algorithm_Hash_
	//	*Algorithm_Mac_
	//	*Algorithm_Cipher_
	//	*Algorithm_Aead_
	//	*Algorithm_AsymmetricSignature_
	//	*Algorithm_AsymmetricEncryption_
	//	*Algorithm_KeyAgreement_
	//	*Algorithm_KeyDerivation_
	Variant isAlgorithm_Variant `protobuf_oneof:"variant"`
}

func (x *Algorithm) Reset() {
	*x = Algorithm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_psa_algorithm_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Algorithm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Algorithm) ProtoMessage() {}

func (x *Algorithm) ProtoReflect() protoreflect.Message {
	mi := &file_psa_algorithm_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Algorithm.ProtoReflect.Descriptor instead.
func (*Algorithm) Descriptor() ([]byte, []int) {
	return file_psa_algorithm_proto_rawDescGZIP(), []int{0}
}

func (m *Algorithm) GetVariant() isAlgorithm_Variant {
	if m != nil {
		return m.Variant
	}
	return nil
}

func (x *Algorithm) GetNone() *Algorithm_None {
	if x, ok := x.GetVariant().(*Algorithm_None_); ok {
		return x.None
	}
	return nil
}

func (x *Algorithm) GetHash() Algorithm_Hash {
	if x, ok := x.GetVariant().(*Algorithm_Hash_); ok {
		return x.Hash
	}
	return Algorithm_HASH_NONE
}

func (x *Algorithm) GetMac() *Algorithm_Mac {
	if x, ok := x.GetVariant().(*Algorithm_Mac_); ok {
		return x.Mac
	}
	return nil
}

func (x *Algorithm) GetCipher() Algorithm_Cipher {
	if x, ok := x.GetVariant().(*Algorithm_Cipher_); ok {
		return x.Cipher
	}
	return Algorithm_CIPHER_NONE
}

func (x *Algorithm) GetAead() *Algorithm_Aead {
	if x, ok := x.GetVariant().(*Algorithm_Aead_); ok {
		return x.Aead
	}
	return nil
}

func (x *Algorithm) GetAsymmetricSignature() *Algorithm_AsymmetricSignature {
	if x, ok := x.GetVariant().(*Algorithm_AsymmetricSignature_); ok {
		return x.AsymmetricSignature
	}
	return nil
}

func (x *Algorithm) GetAsymmetricEncryption() *Algorithm_AsymmetricEncryption {
	if x, ok := x.GetVariant().(*Algorithm_AsymmetricEncryption_); ok {
		return x.AsymmetricEncryption
	}
	return nil
}

func (x *Algorithm) GetKeyAgreement() *Algorithm_KeyAgreement {
	if x, ok := x.GetVariant().(*Algorithm_KeyAgreement_); ok {
		return x.KeyAgreement
	}
	return nil
}

func (x *Algorithm) GetKeyDerivation() *Algorithm_KeyDerivation {
	if x, ok := x.GetVariant().(*Algorithm_KeyDerivation_); ok {
		return x.KeyDerivation
	}
	return nil
}

type isAlgorithm_Variant interface {
	isAlgorithm_Variant()
}

type Algorithm_None_ struct {
	None *Algorithm_None `protobuf:"bytes,1,opt,name=none,proto3,oneof"`
}

type Algorithm_Hash_ struct {
	Hash Algorithm_Hash `protobuf:"varint,2,opt,name=hash,proto3,enum=psa_algorithm.Algorithm_Hash,oneof"`
}

type Algorithm_Mac_ struct {
	Mac *Algorithm_Mac `protobuf:"bytes,3,opt,name=mac,proto3,oneof"`
}

type Algorithm_Cipher_ struct {
	Cipher Algorithm_Cipher `protobuf:"varint,4,opt,name=cipher,proto3,enum=psa_algorithm.Algorithm_Cipher,oneof"`
}

type Algorithm_Aead_ struct {
	Aead *Algorithm_Aead `protobuf:"bytes,5,opt,name=aead,proto3,oneof"`
}

type Algorithm_AsymmetricSignature_ struct {
	AsymmetricSignature *Algorithm_AsymmetricSignature `protobuf:"bytes,6,opt,name=asymmetric_signature,json=asymmetricSignature,proto3,oneof"`
}

type Algorithm_AsymmetricEncryption_ struct {
	AsymmetricEncryption *Algorithm_AsymmetricEncryption `protobuf:"bytes,7,opt,name=asymmetric_encryption,json=asymmetricEncryption,proto3,oneof"`
}

type Algorithm_KeyAgreement_ struct {
	KeyAgreement *Algorithm_KeyAgreement `protobuf:"bytes,8,opt,name=key_agreement,json=keyAgreement,proto3,oneof"`
}

type Algorithm_KeyDerivation_ struct {
	KeyDerivation *Algorithm_KeyDerivation `protobuf:"bytes,9,opt,name=key_derivation,json=keyDerivation,proto3,oneof"`
}

func (*Algorithm_None_) isAlgorithm_Variant() {}

func (*Algorithm_Hash_) isAlgorithm_Variant() {}

func (*Algorithm_Mac_) isAlgorithm_Variant() {}

func (*Algorithm_Cipher_) isAlgorithm_Variant() {}

func (*Algorithm_Aead_) isAlgorithm_Variant() {}

func (*Algorithm_AsymmetricSignature_) isAlgorithm_Variant() {}

func (*Algorithm_AsymmetricEncryption_) isAlgorithm_Variant() {}

func (*Algorithm_KeyAgreement_) isAlgorithm_Variant() {}

func (*Algorithm_KeyDerivation_) isAlgorithm_Variant() {}

type Algorithm_None struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Algorithm_None) Reset() {
	*x = Algorithm_None{}
	if protoimpl.UnsafeEnabled {
		mi := &file_psa_algorithm_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Algorithm_None) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Algorithm_None) ProtoMessage() {}

func (x *Algorithm_None) ProtoReflect() protoreflect.Message {
	mi := &file_psa_algorithm_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Algorithm_None.ProtoReflect.Descriptor instead.
func (*Algorithm_None) Descriptor() ([]byte, []int) {
	return file_psa_algorithm_proto_rawDescGZIP(), []int{0, 0}
}

type Algorithm_Mac struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Variant:
	//	*Algorithm_Mac_FullLength_
	//	*Algorithm_Mac_Truncated_
	Variant isAlgorithm_Mac_Variant `protobuf_oneof:"variant"`
}

func (x *Algorithm_Mac) Reset() {
	*x = Algorithm_Mac{}
	if protoimpl.UnsafeEnabled {
		mi := &file_psa_algorithm_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Algorithm_Mac) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Algorithm_Mac) ProtoMessage() {}

func (x *Algorithm_Mac) ProtoReflect() protoreflect.Message {
	mi := &file_psa_algorithm_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Algorithm_Mac.ProtoReflect.Descriptor instead.
func (*Algorithm_Mac) Descriptor() ([]byte, []int) {
	return file_psa_algorithm_proto_rawDescGZIP(), []int{0, 1}
}

func (m *Algorithm_Mac) GetVariant() isAlgorithm_Mac_Variant {
	if m != nil {
		return m.Variant
	}
	return nil
}

func (x *Algorithm_Mac) GetFullLength() *Algorithm_Mac_FullLength {
	if x, ok := x.GetVariant().(*Algorithm_Mac_FullLength_); ok {
		return x.FullLength
	}
	return nil
}

func (x *Algorithm_Mac) GetTruncated() *Algorithm_Mac_Truncated {
	if x, ok := x.GetVariant().(*Algorithm_Mac_Truncated_); ok {
		return x.Truncated
	}
	return nil
}

type isAlgorithm_Mac_Variant interface {
	isAlgorithm_Mac_Variant()
}

type Algorithm_Mac_FullLength_ struct {
	FullLength *Algorithm_Mac_FullLength `protobuf:"bytes,1,opt,name=full_length,json=fullLength,proto3,oneof"`
}

type Algorithm_Mac_Truncated_ struct {
	Truncated *Algorithm_Mac_Truncated `protobuf:"bytes,2,opt,name=truncated,proto3,oneof"`
}

func (*Algorithm_Mac_FullLength_) isAlgorithm_Mac_Variant() {}

func (*Algorithm_Mac_Truncated_) isAlgorithm_Mac_Variant() {}

type Algorithm_Aead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Variant:
	//	*Algorithm_Aead_AeadWithDefaultLengthTag_
	//	*Algorithm_Aead_AeadWithShortenedTag_
	Variant isAlgorithm_Aead_Variant `protobuf_oneof:"variant"`
}

func (x *Algorithm_Aead) Reset() {
	*x = Algorithm_Aead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_psa_algorithm_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Algorithm_Aead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Algorithm_Aead) ProtoMessage() {}

func (x *Algorithm_Aead) ProtoReflect() protoreflect.Message {
	mi := &file_psa_algorithm_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Algorithm_Aead.ProtoReflect.Descriptor instead.
func (*Algorithm_Aead) Descriptor() ([]byte, []int) {
	return file_psa_algorithm_proto_rawDescGZIP(), []int{0, 2}
}

func (m *Algorithm_Aead) GetVariant() isAlgorithm_Aead_Variant {
	if m != nil {
		return m.Variant
	}
	return nil
}

func (x *Algorithm_Aead) GetAeadWithDefaultLengthTag() Algorithm_Aead_AeadWithDefaultLengthTag {
	if x, ok := x.GetVariant().(*Algorithm_Aead_AeadWithDefaultLengthTag_); ok {
		return x.AeadWithDefaultLengthTag
	}
	return Algorithm_Aead_AEAD_WITH_DEFAULT_LENGTH_TAG_NONE
}

func (x *Algorithm_Aead) GetAeadWithShortenedTag() *Algorithm_Aead_AeadWithShortenedTag {
	if x, ok := x.GetVariant().(*Algorithm_Aead_AeadWithShortenedTag_); ok {
		return x.AeadWithShortenedTag
	}
	return nil
}

type isAlgorithm_Aead_Variant interface {
	isAlgorithm_Aead_Variant()
}

type Algorithm_Aead_AeadWithDefaultLengthTag_ struct {
	AeadWithDefaultLengthTag Algorithm_Aead_AeadWithDefaultLengthTag `protobuf:"varint,1,opt,name=aead_with_default_length_tag,json=aeadWithDefaultLengthTag,proto3,enum=psa_algorithm.Algorithm_Aead_AeadWithDefaultLengthTag,oneof"`
}

type Algorithm_Aead_AeadWithShortenedTag_ struct {
	AeadWithShortenedTag *Algorithm_Aead_AeadWithShortenedTag `protobuf:"bytes,2,opt,name=aead_with_shortened_tag,json=aeadWithShortenedTag,proto3,oneof"`
}

func (*Algorithm_Aead_AeadWithDefaultLengthTag_) isAlgorithm_Aead_Variant() {}

func (*Algorithm_Aead_AeadWithShortenedTag_) isAlgorithm_Aead_Variant() {}

type Algorithm_AsymmetricSignature struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Variant:
	//	*Algorithm_AsymmetricSignature_RsaPkcs1V15Sign_
	//	*Algorithm_AsymmetricSignature_RsaPkcs1V15SignRaw_
	//	*Algorithm_AsymmetricSignature_RsaPss_
	//	*Algorithm_AsymmetricSignature_Ecdsa_
	//	*Algorithm_AsymmetricSignature_EcdsaAny_
	//	*Algorithm_AsymmetricSignature_DeterministicEcdsa_
	Variant isAlgorithm_AsymmetricSignature_Variant `protobuf_oneof:"variant"`
}

func (x *Algorithm_AsymmetricSignature) Reset() {
	*x = Algorithm_AsymmetricSignature{}
	if protoimpl.UnsafeEnabled {
		mi := &file_psa_algorithm_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Algorithm_AsymmetricSignature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Algorithm_AsymmetricSignature) ProtoMessage() {}

func (x *Algorithm_AsymmetricSignature) ProtoReflect() protoreflect.Message {
	mi := &file_psa_algorithm_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Algorithm_AsymmetricSignature.ProtoReflect.Descriptor instead.
func (*Algorithm_AsymmetricSignature) Descriptor() ([]byte, []int) {
	return file_psa_algorithm_proto_rawDescGZIP(), []int{0, 3}
}

func (m *Algorithm_AsymmetricSignature) GetVariant() isAlgorithm_AsymmetricSignature_Variant {
	if m != nil {
		return m.Variant
	}
	return nil
}

func (x *Algorithm_AsymmetricSignature) GetRsaPkcs1V15Sign() *Algorithm_AsymmetricSignature_RsaPkcs1V15Sign {
	if x, ok := x.GetVariant().(*Algorithm_AsymmetricSignature_RsaPkcs1V15Sign_); ok {
		return x.RsaPkcs1V15Sign
	}
	return nil
}

func (x *Algorithm_AsymmetricSignature) GetRsaPkcs1V15SignRaw() *Algorithm_AsymmetricSignature_RsaPkcs1V15SignRaw {
	if x, ok := x.GetVariant().(*Algorithm_AsymmetricSignature_RsaPkcs1V15SignRaw_); ok {
		return x.RsaPkcs1V15SignRaw
	}
	return nil
}

func (x *Algorithm_AsymmetricSignature) GetRsaPss() *Algorithm_AsymmetricSignature_RsaPss {
	if x, ok := x.GetVariant().(*Algorithm_AsymmetricSignature_RsaPss_); ok {
		return x.RsaPss
	}
	return nil
}

func (x *Algorithm_AsymmetricSignature) GetEcdsa() *Algorithm_AsymmetricSignature_Ecdsa {
	if x, ok := x.GetVariant().(*Algorithm_AsymmetricSignature_Ecdsa_); ok {
		return x.Ecdsa
	}
	return nil
}

func (x *Algorithm_AsymmetricSignature) GetEcdsaAny() *Algorithm_AsymmetricSignature_EcdsaAny {
	if x, ok := x.GetVariant().(*Algorithm_AsymmetricSignature_EcdsaAny_); ok {
		return x.EcdsaAny
	}
	return nil
}

func (x *Algorithm_AsymmetricSignature) GetDeterministicEcdsa() *Algorithm_AsymmetricSignature_DeterministicEcdsa {
	if x, ok := x.GetVariant().(*Algorithm_AsymmetricSignature_DeterministicEcdsa_); ok {
		return x.DeterministicEcdsa
	}
	return nil
}

type isAlgorithm_AsymmetricSignature_Variant interface {
	isAlgorithm_AsymmetricSignature_Variant()
}

type Algorithm_AsymmetricSignature_RsaPkcs1V15Sign_ struct {
	RsaPkcs1V15Sign *Algorithm_AsymmetricSignature_RsaPkcs1V15Sign `protobuf:"bytes,1,opt,name=rsa_pkcs1v15_sign,json=rsaPkcs1v15Sign,proto3,oneof"`
}

type Algorithm_AsymmetricSignature_RsaPkcs1V15SignRaw_ struct {
	RsaPkcs1V15SignRaw *Algorithm_AsymmetricSignature_RsaPkcs1V15SignRaw `protobuf:"bytes,2,opt,name=rsa_pkcs1v15_sign_raw,json=rsaPkcs1v15SignRaw,proto3,oneof"`
}

type Algorithm_AsymmetricSignature_RsaPss_ struct {
	RsaPss *Algorithm_AsymmetricSignature_RsaPss `protobuf:"bytes,3,opt,name=rsa_pss,json=rsaPss,proto3,oneof"`
}

type Algorithm_AsymmetricSignature_Ecdsa_ struct {
	Ecdsa *Algorithm_AsymmetricSignature_Ecdsa `protobuf:"bytes,4,opt,name=ecdsa,proto3,oneof"`
}

type Algorithm_AsymmetricSignature_EcdsaAny_ struct {
	EcdsaAny *Algorithm_AsymmetricSignature_EcdsaAny `protobuf:"bytes,5,opt,name=ecdsa_any,json=ecdsaAny,proto3,oneof"`
}

type Algorithm_AsymmetricSignature_DeterministicEcdsa_ struct {
	DeterministicEcdsa *Algorithm_AsymmetricSignature_DeterministicEcdsa `protobuf:"bytes,6,opt,name=deterministic_ecdsa,json=deterministicEcdsa,proto3,oneof"`
}

func (*Algorithm_AsymmetricSignature_RsaPkcs1V15Sign_) isAlgorithm_AsymmetricSignature_Variant() {}

func (*Algorithm_AsymmetricSignature_RsaPkcs1V15SignRaw_) isAlgorithm_AsymmetricSignature_Variant() {}

func (*Algorithm_AsymmetricSignature_RsaPss_) isAlgorithm_AsymmetricSignature_Variant() {}

func (*Algorithm_AsymmetricSignature_Ecdsa_) isAlgorithm_AsymmetricSignature_Variant() {}

func (*Algorithm_AsymmetricSignature_EcdsaAny_) isAlgorithm_AsymmetricSignature_Variant() {}

func (*Algorithm_AsymmetricSignature_DeterministicEcdsa_) isAlgorithm_AsymmetricSignature_Variant() {}

type Algorithm_AsymmetricEncryption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Variant:
	//	*Algorithm_AsymmetricEncryption_RsaPkcs1V15Crypt_
	//	*Algorithm_AsymmetricEncryption_RsaOaep_
	Variant isAlgorithm_AsymmetricEncryption_Variant `protobuf_oneof:"variant"`
}

func (x *Algorithm_AsymmetricEncryption) Reset() {
	*x = Algorithm_AsymmetricEncryption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_psa_algorithm_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Algorithm_AsymmetricEncryption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Algorithm_AsymmetricEncryption) ProtoMessage() {}

func (x *Algorithm_AsymmetricEncryption) ProtoReflect() protoreflect.Message {
	mi := &file_psa_algorithm_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Algorithm_AsymmetricEncryption.ProtoReflect.Descriptor instead.
func (*Algorithm_AsymmetricEncryption) Descriptor() ([]byte, []int) {
	return file_psa_algorithm_proto_rawDescGZIP(), []int{0, 4}
}

func (m *Algorithm_AsymmetricEncryption) GetVariant() isAlgorithm_AsymmetricEncryption_Variant {
	if m != nil {
		return m.Variant
	}
	return nil
}

func (x *Algorithm_AsymmetricEncryption) GetRsaPkcs1V15Crypt() *Algorithm_AsymmetricEncryption_RsaPkcs1V15Crypt {
	if x, ok := x.GetVariant().(*Algorithm_AsymmetricEncryption_RsaPkcs1V15Crypt_); ok {
		return x.RsaPkcs1V15Crypt
	}
	return nil
}

func (x *Algorithm_AsymmetricEncryption) GetRsaOaep() *Algorithm_AsymmetricEncryption_RsaOaep {
	if x, ok := x.GetVariant().(*Algorithm_AsymmetricEncryption_RsaOaep_); ok {
		return x.RsaOaep
	}
	return nil
}

type isAlgorithm_AsymmetricEncryption_Variant interface {
	isAlgorithm_AsymmetricEncryption_Variant()
}

type Algorithm_AsymmetricEncryption_RsaPkcs1V15Crypt_ struct {
	RsaPkcs1V15Crypt *Algorithm_AsymmetricEncryption_RsaPkcs1V15Crypt `protobuf:"bytes,1,opt,name=rsa_pkcs1v15_crypt,json=rsaPkcs1v15Crypt,proto3,oneof"`
}

type Algorithm_AsymmetricEncryption_RsaOaep_ struct {
	RsaOaep *Algorithm_AsymmetricEncryption_RsaOaep `protobuf:"bytes,2,opt,name=rsa_oaep,json=rsaOaep,proto3,oneof"`
}

func (*Algorithm_AsymmetricEncryption_RsaPkcs1V15Crypt_) isAlgorithm_AsymmetricEncryption_Variant() {}

func (*Algorithm_AsymmetricEncryption_RsaOaep_) isAlgorithm_AsymmetricEncryption_Variant() {}

type Algorithm_KeyAgreement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Variant:
	//	*Algorithm_KeyAgreement_Raw_
	//	*Algorithm_KeyAgreement_WithKeyDerivation_
	Variant isAlgorithm_KeyAgreement_Variant `protobuf_oneof:"variant"`
}

func (x *Algorithm_KeyAgreement) Reset() {
	*x = Algorithm_KeyAgreement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_psa_algorithm_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Algorithm_KeyAgreement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Algorithm_KeyAgreement) ProtoMessage() {}

func (x *Algorithm_KeyAgreement) ProtoReflect() protoreflect.Message {
	mi := &file_psa_algorithm_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Algorithm_KeyAgreement.ProtoReflect.Descriptor instead.
func (*Algorithm_KeyAgreement) Descriptor() ([]byte, []int) {
	return file_psa_algorithm_proto_rawDescGZIP(), []int{0, 5}
}

func (m *Algorithm_KeyAgreement) GetVariant() isAlgorithm_KeyAgreement_Variant {
	if m != nil {
		return m.Variant
	}
	return nil
}

func (x *Algorithm_KeyAgreement) GetRaw() Algorithm_KeyAgreement_Raw {
	if x, ok := x.GetVariant().(*Algorithm_KeyAgreement_Raw_); ok {
		return x.Raw
	}
	return Algorithm_KeyAgreement_RAW_NONE
}

func (x *Algorithm_KeyAgreement) GetWithKeyDerivation() *Algorithm_KeyAgreement_WithKeyDerivation {
	if x, ok := x.GetVariant().(*Algorithm_KeyAgreement_WithKeyDerivation_); ok {
		return x.WithKeyDerivation
	}
	return nil
}

type isAlgorithm_KeyAgreement_Variant interface {
	isAlgorithm_KeyAgreement_Variant()
}

type Algorithm_KeyAgreement_Raw_ struct {
	Raw Algorithm_KeyAgreement_Raw `protobuf:"varint,1,opt,name=raw,proto3,enum=psa_algorithm.Algorithm_KeyAgreement_Raw,oneof"`
}

type Algorithm_KeyAgreement_WithKeyDerivation_ struct {
	WithKeyDerivation *Algorithm_KeyAgreement_WithKeyDerivation `protobuf:"bytes,2,opt,name=with_key_derivation,json=withKeyDerivation,proto3,oneof"`
}

func (*Algorithm_KeyAgreement_Raw_) isAlgorithm_KeyAgreement_Variant() {}

func (*Algorithm_KeyAgreement_WithKeyDerivation_) isAlgorithm_KeyAgreement_Variant() {}

type Algorithm_KeyDerivation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Variant:
	//	*Algorithm_KeyDerivation_Hkdf_
	//	*Algorithm_KeyDerivation_Tls12Prf_
	//	*Algorithm_KeyDerivation_Tls12PskToMs_
	Variant isAlgorithm_KeyDerivation_Variant `protobuf_oneof:"variant"`
}

func (x *Algorithm_KeyDerivation) Reset() {
	*x = Algorithm_KeyDerivation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_psa_algorithm_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Algorithm_KeyDerivation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Algorithm_KeyDerivation) ProtoMessage() {}

func (x *Algorithm_KeyDerivation) ProtoReflect() protoreflect.Message {
	mi := &file_psa_algorithm_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Algorithm_KeyDerivation.ProtoReflect.Descriptor instead.
func (*Algorithm_KeyDerivation) Descriptor() ([]byte, []int) {
	return file_psa_algorithm_proto_rawDescGZIP(), []int{0, 6}
}

func (m *Algorithm_KeyDerivation) GetVariant() isAlgorithm_KeyDerivation_Variant {
	if m != nil {
		return m.Variant
	}
	return nil
}

func (x *Algorithm_KeyDerivation) GetHkdf() *Algorithm_KeyDerivation_Hkdf {
	if x, ok := x.GetVariant().(*Algorithm_KeyDerivation_Hkdf_); ok {
		return x.Hkdf
	}
	return nil
}

func (x *Algorithm_KeyDerivation) GetTls12Prf() *Algorithm_KeyDerivation_Tls12Prf {
	if x, ok := x.GetVariant().(*Algorithm_KeyDerivation_Tls12Prf_); ok {
		return x.Tls12Prf
	}
	return nil
}

func (x *Algorithm_KeyDerivation) GetTls12PskToMs() *Algorithm_KeyDerivation_Tls12PskToMs {
	if x, ok := x.GetVariant().(*Algorithm_KeyDerivation_Tls12PskToMs_); ok {
		return x.Tls12PskToMs
	}
	return nil
}

type isAlgorithm_KeyDerivation_Variant interface {
	isAlgorithm_KeyDerivation_Variant()
}

type Algorithm_KeyDerivation_Hkdf_ struct {
	Hkdf *Algorithm_KeyDerivation_Hkdf `protobuf:"bytes,1,opt,name=hkdf,proto3,oneof"`
}

type Algorithm_KeyDerivation_Tls12Prf_ struct {
	Tls12Prf *Algorithm_KeyDerivation_Tls12Prf `protobuf:"bytes,2,opt,name=tls12_prf,json=tls12Prf,proto3,oneof"`
}

type Algorithm_KeyDerivation_Tls12PskToMs_ struct {
	Tls12PskToMs *Algorithm_KeyDerivation_Tls12PskToMs `protobuf:"bytes,3,opt,name=tls12_psk_to_ms,json=tls12PskToMs,proto3,oneof"`
}

func (*Algorithm_KeyDerivation_Hkdf_) isAlgorithm_KeyDerivation_Variant() {}

func (*Algorithm_KeyDerivation_Tls12Prf_) isAlgorithm_KeyDerivation_Variant() {}

func (*Algorithm_KeyDerivation_Tls12PskToMs_) isAlgorithm_KeyDerivation_Variant() {}

type Algorithm_Mac_FullLength struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Variant:
	//	*Algorithm_Mac_FullLength_Hmac_
	//	*Algorithm_Mac_FullLength_CbcMac_
	//	*Algorithm_Mac_FullLength_Cmac_
	Variant isAlgorithm_Mac_FullLength_Variant `protobuf_oneof:"variant"`
}

func (x *Algorithm_Mac_FullLength) Reset() {
	*x = Algorithm_Mac_FullLength{}
	if protoimpl.UnsafeEnabled {
		mi := &file_psa_algorithm_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Algorithm_Mac_FullLength) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Algorithm_Mac_FullLength) ProtoMessage() {}

func (x *Algorithm_Mac_FullLength) ProtoReflect() protoreflect.Message {
	mi := &file_psa_algorithm_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Algorithm_Mac_FullLength.ProtoReflect.Descriptor instead.
func (*Algorithm_Mac_FullLength) Descriptor() ([]byte, []int) {
	return file_psa_algorithm_proto_rawDescGZIP(), []int{0, 1, 0}
}

func (m *Algorithm_Mac_FullLength) GetVariant() isAlgorithm_Mac_FullLength_Variant {
	if m != nil {
		return m.Variant
	}
	return nil
}

func (x *Algorithm_Mac_FullLength) GetHmac() *Algorithm_Mac_FullLength_Hmac {
	if x, ok := x.GetVariant().(*Algorithm_Mac_FullLength_Hmac_); ok {
		return x.Hmac
	}
	return nil
}

func (x *Algorithm_Mac_FullLength) GetCbcMac() *Algorithm_Mac_FullLength_CbcMac {
	if x, ok := x.GetVariant().(*Algorithm_Mac_FullLength_CbcMac_); ok {
		return x.CbcMac
	}
	return nil
}

func (x *Algorithm_Mac_FullLength) GetCmac() *Algorithm_Mac_FullLength_Cmac {
	if x, ok := x.GetVariant().(*Algorithm_Mac_FullLength_Cmac_); ok {
		return x.Cmac
	}
	return nil
}

type isAlgorithm_Mac_FullLength_Variant interface {
	isAlgorithm_Mac_FullLength_Variant()
}

type Algorithm_Mac_FullLength_Hmac_ struct {
	Hmac *Algorithm_Mac_FullLength_Hmac `protobuf:"bytes,1,opt,name=hmac,proto3,oneof"`
}

type Algorithm_Mac_FullLength_CbcMac_ struct {
	CbcMac *Algorithm_Mac_FullLength_CbcMac `protobuf:"bytes,2,opt,name=cbc_mac,json=cbcMac,proto3,oneof"`
}

type Algorithm_Mac_FullLength_Cmac_ struct {
	Cmac *Algorithm_Mac_FullLength_Cmac `protobuf:"bytes,3,opt,name=cmac,proto3,oneof"`
}

func (*Algorithm_Mac_FullLength_Hmac_) isAlgorithm_Mac_FullLength_Variant() {}

func (*Algorithm_Mac_FullLength_CbcMac_) isAlgorithm_Mac_FullLength_Variant() {}

func (*Algorithm_Mac_FullLength_Cmac_) isAlgorithm_Mac_FullLength_Variant() {}

type Algorithm_Mac_Truncated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MacAlg    *Algorithm_Mac_FullLength `protobuf:"bytes,1,opt,name=mac_alg,json=macAlg,proto3" json:"mac_alg,omitempty"`
	MacLength uint32                    `protobuf:"varint,2,opt,name=mac_length,json=macLength,proto3" json:"mac_length,omitempty"`
}

func (x *Algorithm_Mac_Truncated) Reset() {
	*x = Algorithm_Mac_Truncated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_psa_algorithm_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Algorithm_Mac_Truncated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Algorithm_Mac_Truncated) ProtoMessage() {}

func (x *Algorithm_Mac_Truncated) ProtoReflect() protoreflect.Message {
	mi := &file_psa_algorithm_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Algorithm_Mac_Truncated.ProtoReflect.Descriptor instead.
func (*Algorithm_Mac_Truncated) Descriptor() ([]byte, []int) {
	return file_psa_algorithm_proto_rawDescGZIP(), []int{0, 1, 1}
}

func (x *Algorithm_Mac_Truncated) GetMacAlg() *Algorithm_Mac_FullLength {
	if x != nil {
		return x.MacAlg
	}
	return nil
}

func (x *Algorithm_Mac_Truncated) GetMacLength() uint32 {
	if x != nil {
		return x.MacLength
	}
	return 0
}

type Algorithm_Mac_FullLength_Hmac struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HashAlg Algorithm_Hash `protobuf:"varint,1,opt,name=hash_alg,json=hashAlg,proto3,enum=psa_algorithm.Algorithm_Hash" json:"hash_alg,omitempty"`
}

func (x *Algorithm_Mac_FullLength_Hmac) Reset() {
	*x = Algorithm_Mac_FullLength_Hmac{}
	if protoimpl.UnsafeEnabled {
		mi := &file_psa_algorithm_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Algorithm_Mac_FullLength_Hmac) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Algorithm_Mac_FullLength_Hmac) ProtoMessage() {}

func (x *Algorithm_Mac_FullLength_Hmac) ProtoReflect() protoreflect.Message {
	mi := &file_psa_algorithm_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Algorithm_Mac_FullLength_Hmac.ProtoReflect.Descriptor instead.
func (*Algorithm_Mac_FullLength_Hmac) Descriptor() ([]byte, []int) {
	return file_psa_algorithm_proto_rawDescGZIP(), []int{0, 1, 0, 0}
}

func (x *Algorithm_Mac_FullLength_Hmac) GetHashAlg() Algorithm_Hash {
	if x != nil {
		return x.HashAlg
	}
	return Algorithm_HASH_NONE
}

type Algorithm_Mac_FullLength_CbcMac struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Algorithm_Mac_FullLength_CbcMac) Reset() {
	*x = Algorithm_Mac_FullLength_CbcMac{}
	if protoimpl.UnsafeEnabled {
		mi := &file_psa_algorithm_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Algorithm_Mac_FullLength_CbcMac) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Algorithm_Mac_FullLength_CbcMac) ProtoMessage() {}

func (x *Algorithm_Mac_FullLength_CbcMac) ProtoReflect() protoreflect.Message {
	mi := &file_psa_algorithm_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Algorithm_Mac_FullLength_CbcMac.ProtoReflect.Descriptor instead.
func (*Algorithm_Mac_FullLength_CbcMac) Descriptor() ([]byte, []int) {
	return file_psa_algorithm_proto_rawDescGZIP(), []int{0, 1, 0, 1}
}

type Algorithm_Mac_FullLength_Cmac struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Algorithm_Mac_FullLength_Cmac) Reset() {
	*x = Algorithm_Mac_FullLength_Cmac{}
	if protoimpl.UnsafeEnabled {
		mi := &file_psa_algorithm_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Algorithm_Mac_FullLength_Cmac) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Algorithm_Mac_FullLength_Cmac) ProtoMessage() {}

func (x *Algorithm_Mac_FullLength_Cmac) ProtoReflect() protoreflect.Message {
	mi := &file_psa_algorithm_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Algorithm_Mac_FullLength_Cmac.ProtoReflect.Descriptor instead.
func (*Algorithm_Mac_FullLength_Cmac) Descriptor() ([]byte, []int) {
	return file_psa_algorithm_proto_rawDescGZIP(), []int{0, 1, 0, 2}
}

type Algorithm_Aead_AeadWithShortenedTag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AeadAlg   Algorithm_Aead_AeadWithDefaultLengthTag `protobuf:"varint,1,opt,name=aead_alg,json=aeadAlg,proto3,enum=psa_algorithm.Algorithm_Aead_AeadWithDefaultLengthTag" json:"aead_alg,omitempty"`
	TagLength uint32                                  `protobuf:"varint,2,opt,name=tag_length,json=tagLength,proto3" json:"tag_length,omitempty"`
}

func (x *Algorithm_Aead_AeadWithShortenedTag) Reset() {
	*x = Algorithm_Aead_AeadWithShortenedTag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_psa_algorithm_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Algorithm_Aead_AeadWithShortenedTag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Algorithm_Aead_AeadWithShortenedTag) ProtoMessage() {}

func (x *Algorithm_Aead_AeadWithShortenedTag) ProtoReflect() protoreflect.Message {
	mi := &file_psa_algorithm_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Algorithm_Aead_AeadWithShortenedTag.ProtoReflect.Descriptor instead.
func (*Algorithm_Aead_AeadWithShortenedTag) Descriptor() ([]byte, []int) {
	return file_psa_algorithm_proto_rawDescGZIP(), []int{0, 2, 0}
}

func (x *Algorithm_Aead_AeadWithShortenedTag) GetAeadAlg() Algorithm_Aead_AeadWithDefaultLengthTag {
	if x != nil {
		return x.AeadAlg
	}
	return Algorithm_Aead_AEAD_WITH_DEFAULT_LENGTH_TAG_NONE
}

func (x *Algorithm_Aead_AeadWithShortenedTag) GetTagLength() uint32 {
	if x != nil {
		return x.TagLength
	}
	return 0
}

type Algorithm_AsymmetricSignature_SignHash struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Variant:
	//	*Algorithm_AsymmetricSignature_SignHash_Any_
	//	*Algorithm_AsymmetricSignature_SignHash_Specific
	Variant isAlgorithm_AsymmetricSignature_SignHash_Variant `protobuf_oneof:"variant"`
}

func (x *Algorithm_AsymmetricSignature_SignHash) Reset() {
	*x = Algorithm_AsymmetricSignature_SignHash{}
	if protoimpl.UnsafeEnabled {
		mi := &file_psa_algorithm_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Algorithm_AsymmetricSignature_SignHash) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Algorithm_AsymmetricSignature_SignHash) ProtoMessage() {}

func (x *Algorithm_AsymmetricSignature_SignHash) ProtoReflect() protoreflect.Message {
	mi := &file_psa_algorithm_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Algorithm_AsymmetricSignature_SignHash.ProtoReflect.Descriptor instead.
func (*Algorithm_AsymmetricSignature_SignHash) Descriptor() ([]byte, []int) {
	return file_psa_algorithm_proto_rawDescGZIP(), []int{0, 3, 0}
}

func (m *Algorithm_AsymmetricSignature_SignHash) GetVariant() isAlgorithm_AsymmetricSignature_SignHash_Variant {
	if m != nil {
		return m.Variant
	}
	return nil
}

func (x *Algorithm_AsymmetricSignature_SignHash) GetAny() *Algorithm_AsymmetricSignature_SignHash_Any {
	if x, ok := x.GetVariant().(*Algorithm_AsymmetricSignature_SignHash_Any_); ok {
		return x.Any
	}
	return nil
}

func (x *Algorithm_AsymmetricSignature_SignHash) GetSpecific() Algorithm_Hash {
	if x, ok := x.GetVariant().(*Algorithm_AsymmetricSignature_SignHash_Specific); ok {
		return x.Specific
	}
	return Algorithm_HASH_NONE
}

type isAlgorithm_AsymmetricSignature_SignHash_Variant interface {
	isAlgorithm_AsymmetricSignature_SignHash_Variant()
}

type Algorithm_AsymmetricSignature_SignHash_Any_ struct {
	Any *Algorithm_AsymmetricSignature_SignHash_Any `protobuf:"bytes,1,opt,name=any,proto3,oneof"`
}

type Algorithm_AsymmetricSignature_SignHash_Specific struct {
	Specific Algorithm_Hash `protobuf:"varint,2,opt,name=specific,proto3,enum=psa_algorithm.Algorithm_Hash,oneof"`
}

func (*Algorithm_AsymmetricSignature_SignHash_Any_) isAlgorithm_AsymmetricSignature_SignHash_Variant() {
}

func (*Algorithm_AsymmetricSignature_SignHash_Specific) isAlgorithm_AsymmetricSignature_SignHash_Variant() {
}

type Algorithm_AsymmetricSignature_RsaPkcs1V15Sign struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HashAlg *Algorithm_AsymmetricSignature_SignHash `protobuf:"bytes,1,opt,name=hash_alg,json=hashAlg,proto3" json:"hash_alg,omitempty"`
}

func (x *Algorithm_AsymmetricSignature_RsaPkcs1V15Sign) Reset() {
	*x = Algorithm_AsymmetricSignature_RsaPkcs1V15Sign{}
	if protoimpl.UnsafeEnabled {
		mi := &file_psa_algorithm_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Algorithm_AsymmetricSignature_RsaPkcs1V15Sign) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Algorithm_AsymmetricSignature_RsaPkcs1V15Sign) ProtoMessage() {}

func (x *Algorithm_AsymmetricSignature_RsaPkcs1V15Sign) ProtoReflect() protoreflect.Message {
	mi := &file_psa_algorithm_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Algorithm_AsymmetricSignature_RsaPkcs1V15Sign.ProtoReflect.Descriptor instead.
func (*Algorithm_AsymmetricSignature_RsaPkcs1V15Sign) Descriptor() ([]byte, []int) {
	return file_psa_algorithm_proto_rawDescGZIP(), []int{0, 3, 1}
}

func (x *Algorithm_AsymmetricSignature_RsaPkcs1V15Sign) GetHashAlg() *Algorithm_AsymmetricSignature_SignHash {
	if x != nil {
		return x.HashAlg
	}
	return nil
}

type Algorithm_AsymmetricSignature_RsaPkcs1V15SignRaw struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Algorithm_AsymmetricSignature_RsaPkcs1V15SignRaw) Reset() {
	*x = Algorithm_AsymmetricSignature_RsaPkcs1V15SignRaw{}
	if protoimpl.UnsafeEnabled {
		mi := &file_psa_algorithm_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Algorithm_AsymmetricSignature_RsaPkcs1V15SignRaw) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Algorithm_AsymmetricSignature_RsaPkcs1V15SignRaw) ProtoMessage() {}

func (x *Algorithm_AsymmetricSignature_RsaPkcs1V15SignRaw) ProtoReflect() protoreflect.Message {
	mi := &file_psa_algorithm_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Algorithm_AsymmetricSignature_RsaPkcs1V15SignRaw.ProtoReflect.Descriptor instead.
func (*Algorithm_AsymmetricSignature_RsaPkcs1V15SignRaw) Descriptor() ([]byte, []int) {
	return file_psa_algorithm_proto_rawDescGZIP(), []int{0, 3, 2}
}

type Algorithm_AsymmetricSignature_RsaPss struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HashAlg *Algorithm_AsymmetricSignature_SignHash `protobuf:"bytes,1,opt,name=hash_alg,json=hashAlg,proto3" json:"hash_alg,omitempty"`
}

func (x *Algorithm_AsymmetricSignature_RsaPss) Reset() {
	*x = Algorithm_AsymmetricSignature_RsaPss{}
	if protoimpl.UnsafeEnabled {
		mi := &file_psa_algorithm_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Algorithm_AsymmetricSignature_RsaPss) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Algorithm_AsymmetricSignature_RsaPss) ProtoMessage() {}

func (x *Algorithm_AsymmetricSignature_RsaPss) ProtoReflect() protoreflect.Message {
	mi := &file_psa_algorithm_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Algorithm_AsymmetricSignature_RsaPss.ProtoReflect.Descriptor instead.
func (*Algorithm_AsymmetricSignature_RsaPss) Descriptor() ([]byte, []int) {
	return file_psa_algorithm_proto_rawDescGZIP(), []int{0, 3, 3}
}

func (x *Algorithm_AsymmetricSignature_RsaPss) GetHashAlg() *Algorithm_AsymmetricSignature_SignHash {
	if x != nil {
		return x.HashAlg
	}
	return nil
}

type Algorithm_AsymmetricSignature_Ecdsa struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HashAlg *Algorithm_AsymmetricSignature_SignHash `protobuf:"bytes,1,opt,name=hash_alg,json=hashAlg,proto3" json:"hash_alg,omitempty"`
}

func (x *Algorithm_AsymmetricSignature_Ecdsa) Reset() {
	*x = Algorithm_AsymmetricSignature_Ecdsa{}
	if protoimpl.UnsafeEnabled {
		mi := &file_psa_algorithm_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Algorithm_AsymmetricSignature_Ecdsa) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Algorithm_AsymmetricSignature_Ecdsa) ProtoMessage() {}

func (x *Algorithm_AsymmetricSignature_Ecdsa) ProtoReflect() protoreflect.Message {
	mi := &file_psa_algorithm_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Algorithm_AsymmetricSignature_Ecdsa.ProtoReflect.Descriptor instead.
func (*Algorithm_AsymmetricSignature_Ecdsa) Descriptor() ([]byte, []int) {
	return file_psa_algorithm_proto_rawDescGZIP(), []int{0, 3, 4}
}

func (x *Algorithm_AsymmetricSignature_Ecdsa) GetHashAlg() *Algorithm_AsymmetricSignature_SignHash {
	if x != nil {
		return x.HashAlg
	}
	return nil
}

type Algorithm_AsymmetricSignature_EcdsaAny struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Algorithm_AsymmetricSignature_EcdsaAny) Reset() {
	*x = Algorithm_AsymmetricSignature_EcdsaAny{}
	if protoimpl.UnsafeEnabled {
		mi := &file_psa_algorithm_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Algorithm_AsymmetricSignature_EcdsaAny) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Algorithm_AsymmetricSignature_EcdsaAny) ProtoMessage() {}

func (x *Algorithm_AsymmetricSignature_EcdsaAny) ProtoReflect() protoreflect.Message {
	mi := &file_psa_algorithm_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Algorithm_AsymmetricSignature_EcdsaAny.ProtoReflect.Descriptor instead.
func (*Algorithm_AsymmetricSignature_EcdsaAny) Descriptor() ([]byte, []int) {
	return file_psa_algorithm_proto_rawDescGZIP(), []int{0, 3, 5}
}

type Algorithm_AsymmetricSignature_DeterministicEcdsa struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HashAlg *Algorithm_AsymmetricSignature_SignHash `protobuf:"bytes,1,opt,name=hash_alg,json=hashAlg,proto3" json:"hash_alg,omitempty"`
}

func (x *Algorithm_AsymmetricSignature_DeterministicEcdsa) Reset() {
	*x = Algorithm_AsymmetricSignature_DeterministicEcdsa{}
	if protoimpl.UnsafeEnabled {
		mi := &file_psa_algorithm_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Algorithm_AsymmetricSignature_DeterministicEcdsa) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Algorithm_AsymmetricSignature_DeterministicEcdsa) ProtoMessage() {}

func (x *Algorithm_AsymmetricSignature_DeterministicEcdsa) ProtoReflect() protoreflect.Message {
	mi := &file_psa_algorithm_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Algorithm_AsymmetricSignature_DeterministicEcdsa.ProtoReflect.Descriptor instead.
func (*Algorithm_AsymmetricSignature_DeterministicEcdsa) Descriptor() ([]byte, []int) {
	return file_psa_algorithm_proto_rawDescGZIP(), []int{0, 3, 6}
}

func (x *Algorithm_AsymmetricSignature_DeterministicEcdsa) GetHashAlg() *Algorithm_AsymmetricSignature_SignHash {
	if x != nil {
		return x.HashAlg
	}
	return nil
}

type Algorithm_AsymmetricSignature_SignHash_Any struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Algorithm_AsymmetricSignature_SignHash_Any) Reset() {
	*x = Algorithm_AsymmetricSignature_SignHash_Any{}
	if protoimpl.UnsafeEnabled {
		mi := &file_psa_algorithm_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Algorithm_AsymmetricSignature_SignHash_Any) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Algorithm_AsymmetricSignature_SignHash_Any) ProtoMessage() {}

func (x *Algorithm_AsymmetricSignature_SignHash_Any) ProtoReflect() protoreflect.Message {
	mi := &file_psa_algorithm_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Algorithm_AsymmetricSignature_SignHash_Any.ProtoReflect.Descriptor instead.
func (*Algorithm_AsymmetricSignature_SignHash_Any) Descriptor() ([]byte, []int) {
	return file_psa_algorithm_proto_rawDescGZIP(), []int{0, 3, 0, 0}
}

type Algorithm_AsymmetricEncryption_RsaPkcs1V15Crypt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Algorithm_AsymmetricEncryption_RsaPkcs1V15Crypt) Reset() {
	*x = Algorithm_AsymmetricEncryption_RsaPkcs1V15Crypt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_psa_algorithm_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Algorithm_AsymmetricEncryption_RsaPkcs1V15Crypt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Algorithm_AsymmetricEncryption_RsaPkcs1V15Crypt) ProtoMessage() {}

func (x *Algorithm_AsymmetricEncryption_RsaPkcs1V15Crypt) ProtoReflect() protoreflect.Message {
	mi := &file_psa_algorithm_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Algorithm_AsymmetricEncryption_RsaPkcs1V15Crypt.ProtoReflect.Descriptor instead.
func (*Algorithm_AsymmetricEncryption_RsaPkcs1V15Crypt) Descriptor() ([]byte, []int) {
	return file_psa_algorithm_proto_rawDescGZIP(), []int{0, 4, 0}
}

type Algorithm_AsymmetricEncryption_RsaOaep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HashAlg Algorithm_Hash `protobuf:"varint,1,opt,name=hash_alg,json=hashAlg,proto3,enum=psa_algorithm.Algorithm_Hash" json:"hash_alg,omitempty"`
}

func (x *Algorithm_AsymmetricEncryption_RsaOaep) Reset() {
	*x = Algorithm_AsymmetricEncryption_RsaOaep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_psa_algorithm_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Algorithm_AsymmetricEncryption_RsaOaep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Algorithm_AsymmetricEncryption_RsaOaep) ProtoMessage() {}

func (x *Algorithm_AsymmetricEncryption_RsaOaep) ProtoReflect() protoreflect.Message {
	mi := &file_psa_algorithm_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Algorithm_AsymmetricEncryption_RsaOaep.ProtoReflect.Descriptor instead.
func (*Algorithm_AsymmetricEncryption_RsaOaep) Descriptor() ([]byte, []int) {
	return file_psa_algorithm_proto_rawDescGZIP(), []int{0, 4, 1}
}

func (x *Algorithm_AsymmetricEncryption_RsaOaep) GetHashAlg() Algorithm_Hash {
	if x != nil {
		return x.HashAlg
	}
	return Algorithm_HASH_NONE
}

type Algorithm_KeyAgreement_WithKeyDerivation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KaAlg  Algorithm_KeyAgreement_Raw `protobuf:"varint,1,opt,name=ka_alg,json=kaAlg,proto3,enum=psa_algorithm.Algorithm_KeyAgreement_Raw" json:"ka_alg,omitempty"`
	KdfAlg *Algorithm_KeyDerivation   `protobuf:"bytes,2,opt,name=kdf_alg,json=kdfAlg,proto3" json:"kdf_alg,omitempty"`
}

func (x *Algorithm_KeyAgreement_WithKeyDerivation) Reset() {
	*x = Algorithm_KeyAgreement_WithKeyDerivation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_psa_algorithm_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Algorithm_KeyAgreement_WithKeyDerivation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Algorithm_KeyAgreement_WithKeyDerivation) ProtoMessage() {}

func (x *Algorithm_KeyAgreement_WithKeyDerivation) ProtoReflect() protoreflect.Message {
	mi := &file_psa_algorithm_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Algorithm_KeyAgreement_WithKeyDerivation.ProtoReflect.Descriptor instead.
func (*Algorithm_KeyAgreement_WithKeyDerivation) Descriptor() ([]byte, []int) {
	return file_psa_algorithm_proto_rawDescGZIP(), []int{0, 5, 0}
}

func (x *Algorithm_KeyAgreement_WithKeyDerivation) GetKaAlg() Algorithm_KeyAgreement_Raw {
	if x != nil {
		return x.KaAlg
	}
	return Algorithm_KeyAgreement_RAW_NONE
}

func (x *Algorithm_KeyAgreement_WithKeyDerivation) GetKdfAlg() *Algorithm_KeyDerivation {
	if x != nil {
		return x.KdfAlg
	}
	return nil
}

type Algorithm_KeyDerivation_Hkdf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HashAlg Algorithm_Hash `protobuf:"varint,1,opt,name=hash_alg,json=hashAlg,proto3,enum=psa_algorithm.Algorithm_Hash" json:"hash_alg,omitempty"`
}

func (x *Algorithm_KeyDerivation_Hkdf) Reset() {
	*x = Algorithm_KeyDerivation_Hkdf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_psa_algorithm_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Algorithm_KeyDerivation_Hkdf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Algorithm_KeyDerivation_Hkdf) ProtoMessage() {}

func (x *Algorithm_KeyDerivation_Hkdf) ProtoReflect() protoreflect.Message {
	mi := &file_psa_algorithm_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Algorithm_KeyDerivation_Hkdf.ProtoReflect.Descriptor instead.
func (*Algorithm_KeyDerivation_Hkdf) Descriptor() ([]byte, []int) {
	return file_psa_algorithm_proto_rawDescGZIP(), []int{0, 6, 0}
}

func (x *Algorithm_KeyDerivation_Hkdf) GetHashAlg() Algorithm_Hash {
	if x != nil {
		return x.HashAlg
	}
	return Algorithm_HASH_NONE
}

type Algorithm_KeyDerivation_Tls12Prf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HashAlg Algorithm_Hash `protobuf:"varint,1,opt,name=hash_alg,json=hashAlg,proto3,enum=psa_algorithm.Algorithm_Hash" json:"hash_alg,omitempty"`
}

func (x *Algorithm_KeyDerivation_Tls12Prf) Reset() {
	*x = Algorithm_KeyDerivation_Tls12Prf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_psa_algorithm_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Algorithm_KeyDerivation_Tls12Prf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Algorithm_KeyDerivation_Tls12Prf) ProtoMessage() {}

func (x *Algorithm_KeyDerivation_Tls12Prf) ProtoReflect() protoreflect.Message {
	mi := &file_psa_algorithm_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Algorithm_KeyDerivation_Tls12Prf.ProtoReflect.Descriptor instead.
func (*Algorithm_KeyDerivation_Tls12Prf) Descriptor() ([]byte, []int) {
	return file_psa_algorithm_proto_rawDescGZIP(), []int{0, 6, 1}
}

func (x *Algorithm_KeyDerivation_Tls12Prf) GetHashAlg() Algorithm_Hash {
	if x != nil {
		return x.HashAlg
	}
	return Algorithm_HASH_NONE
}

type Algorithm_KeyDerivation_Tls12PskToMs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HashAlg Algorithm_Hash `protobuf:"varint,1,opt,name=hash_alg,json=hashAlg,proto3,enum=psa_algorithm.Algorithm_Hash" json:"hash_alg,omitempty"`
}

func (x *Algorithm_KeyDerivation_Tls12PskToMs) Reset() {
	*x = Algorithm_KeyDerivation_Tls12PskToMs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_psa_algorithm_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Algorithm_KeyDerivation_Tls12PskToMs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Algorithm_KeyDerivation_Tls12PskToMs) ProtoMessage() {}

func (x *Algorithm_KeyDerivation_Tls12PskToMs) ProtoReflect() protoreflect.Message {
	mi := &file_psa_algorithm_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Algorithm_KeyDerivation_Tls12PskToMs.ProtoReflect.Descriptor instead.
func (*Algorithm_KeyDerivation_Tls12PskToMs) Descriptor() ([]byte, []int) {
	return file_psa_algorithm_proto_rawDescGZIP(), []int{0, 6, 2}
}

func (x *Algorithm_KeyDerivation_Tls12PskToMs) GetHashAlg() Algorithm_Hash {
	if x != nil {
		return x.HashAlg
	}
	return Algorithm_HASH_NONE
}

var File_psa_algorithm_proto protoreflect.FileDescriptor

var file_psa_algorithm_proto_rawDesc = []byte{
	0x0a, 0x13, 0x70, 0x73, 0x61, 0x5f, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x70, 0x73, 0x61, 0x5f, 0x61, 0x6c, 0x67, 0x6f, 0x72,
	0x69, 0x74, 0x68, 0x6d, 0x22, 0xb4, 0x23, 0x0a, 0x09, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74,
	0x68, 0x6d, 0x12, 0x33, 0x0a, 0x04, 0x6e, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x70, 0x73, 0x61, 0x5f, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d,
	0x2e, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x2e, 0x4e, 0x6f, 0x6e, 0x65, 0x48,
	0x00, 0x52, 0x04, 0x6e, 0x6f, 0x6e, 0x65, 0x12, 0x33, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x70, 0x73, 0x61, 0x5f, 0x61, 0x6c, 0x67, 0x6f,
	0x72, 0x69, 0x74, 0x68, 0x6d, 0x2e, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x2e,
	0x48, 0x61, 0x73, 0x68, 0x48, 0x00, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x30, 0x0a, 0x03,
	0x6d, 0x61, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x73, 0x61, 0x5f,
	0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x2e, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69,
	0x74, 0x68, 0x6d, 0x2e, 0x4d, 0x61, 0x63, 0x48, 0x00, 0x52, 0x03, 0x6d, 0x61, 0x63, 0x12, 0x39,
	0x0a, 0x06, 0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f,
	0x2e, 0x70, 0x73, 0x61, 0x5f, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x2e, 0x41,
	0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x2e, 0x43, 0x69, 0x70, 0x68, 0x65, 0x72, 0x48,
	0x00, 0x52, 0x06, 0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x12, 0x33, 0x0a, 0x04, 0x61, 0x65, 0x61,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x73, 0x61, 0x5f, 0x61, 0x6c,
	0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x2e, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68,
	0x6d, 0x2e, 0x41, 0x65, 0x61, 0x64, 0x48, 0x00, 0x52, 0x04, 0x61, 0x65, 0x61, 0x64, 0x12, 0x61,
	0x0a, 0x14, 0x61, 0x73, 0x79, 0x6d, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x5f, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x70,
	0x73, 0x61, 0x5f, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x2e, 0x41, 0x6c, 0x67,
	0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x2e, 0x41, 0x73, 0x79, 0x6d, 0x6d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x48, 0x00, 0x52, 0x13, 0x61, 0x73,
	0x79, 0x6d, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x12, 0x64, 0x0a, 0x15, 0x61, 0x73, 0x79, 0x6d, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x5f,
	0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2d, 0x2e, 0x70, 0x73, 0x61, 0x5f, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d,
	0x2e, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x2e, 0x41, 0x73, 0x79, 0x6d, 0x6d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x48,
	0x00, 0x52, 0x14, 0x61, 0x73, 0x79, 0x6d, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x45, 0x6e, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4c, 0x0a, 0x0d, 0x6b, 0x65, 0x79, 0x5f, 0x61,
	0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x70, 0x73, 0x61, 0x5f, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x2e, 0x41,
	0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x2e, 0x4b, 0x65, 0x79, 0x41, 0x67, 0x72, 0x65,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x6b, 0x65, 0x79, 0x41, 0x67, 0x72, 0x65,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x4f, 0x0a, 0x0e, 0x6b, 0x65, 0x79, 0x5f, 0x64, 0x65, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x70, 0x73, 0x61, 0x5f, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x2e, 0x41, 0x6c,
	0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x2e, 0x4b, 0x65, 0x79, 0x44, 0x65, 0x72, 0x69, 0x76,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0d, 0x6b, 0x65, 0x79, 0x44, 0x65, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x06, 0x0a, 0x04, 0x4e, 0x6f, 0x6e, 0x65, 0x1a, 0xd3,
	0x04, 0x0a, 0x03, 0x4d, 0x61, 0x63, 0x12, 0x4a, 0x0a, 0x0b, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x6c,
	0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x70, 0x73,
	0x61, 0x5f, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x2e, 0x41, 0x6c, 0x67, 0x6f,
	0x72, 0x69, 0x74, 0x68, 0x6d, 0x2e, 0x4d, 0x61, 0x63, 0x2e, 0x46, 0x75, 0x6c, 0x6c, 0x4c, 0x65,
	0x6e, 0x67, 0x74, 0x68, 0x48, 0x00, 0x52, 0x0a, 0x66, 0x75, 0x6c, 0x6c, 0x4c, 0x65, 0x6e, 0x67,
	0x74, 0x68, 0x12, 0x46, 0x0a, 0x09, 0x74, 0x72, 0x75, 0x6e, 0x63, 0x61, 0x74, 0x65, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x73, 0x61, 0x5f, 0x61, 0x6c, 0x67, 0x6f,
	0x72, 0x69, 0x74, 0x68, 0x6d, 0x2e, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x2e,
	0x4d, 0x61, 0x63, 0x2e, 0x54, 0x72, 0x75, 0x6e, 0x63, 0x61, 0x74, 0x65, 0x64, 0x48, 0x00, 0x52,
	0x09, 0x74, 0x72, 0x75, 0x6e, 0x63, 0x61, 0x74, 0x65, 0x64, 0x1a, 0xbe, 0x02, 0x0a, 0x0a, 0x46,
	0x75, 0x6c, 0x6c, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x42, 0x0a, 0x04, 0x68, 0x6d, 0x61,
	0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x70, 0x73, 0x61, 0x5f, 0x61, 0x6c,
	0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x2e, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68,
	0x6d, 0x2e, 0x4d, 0x61, 0x63, 0x2e, 0x46, 0x75, 0x6c, 0x6c, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68,
	0x2e, 0x48, 0x6d, 0x61, 0x63, 0x48, 0x00, 0x52, 0x04, 0x68, 0x6d, 0x61, 0x63, 0x12, 0x49, 0x0a,
	0x07, 0x63, 0x62, 0x63, 0x5f, 0x6d, 0x61, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e,
	0x2e, 0x70, 0x73, 0x61, 0x5f, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x2e, 0x41,
	0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x2e, 0x4d, 0x61, 0x63, 0x2e, 0x46, 0x75, 0x6c,
	0x6c, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x2e, 0x43, 0x62, 0x63, 0x4d, 0x61, 0x63, 0x48, 0x00,
	0x52, 0x06, 0x63, 0x62, 0x63, 0x4d, 0x61, 0x63, 0x12, 0x42, 0x0a, 0x04, 0x63, 0x6d, 0x61, 0x63,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x70, 0x73, 0x61, 0x5f, 0x61, 0x6c, 0x67,
	0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x2e, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d,
	0x2e, 0x4d, 0x61, 0x63, 0x2e, 0x46, 0x75, 0x6c, 0x6c, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x2e,
	0x43, 0x6d, 0x61, 0x63, 0x48, 0x00, 0x52, 0x04, 0x63, 0x6d, 0x61, 0x63, 0x1a, 0x40, 0x0a, 0x04,
	0x48, 0x6d, 0x61, 0x63, 0x12, 0x38, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x61, 0x6c, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x70, 0x73, 0x61, 0x5f, 0x61, 0x6c, 0x67,
	0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x2e, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d,
	0x2e, 0x48, 0x61, 0x73, 0x68, 0x52, 0x07, 0x68, 0x61, 0x73, 0x68, 0x41, 0x6c, 0x67, 0x1a, 0x08,
	0x0a, 0x06, 0x43, 0x62, 0x63, 0x4d, 0x61, 0x63, 0x1a, 0x06, 0x0a, 0x04, 0x43, 0x6d, 0x61, 0x63,
	0x42, 0x09, 0x0a, 0x07, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x1a, 0x6c, 0x0a, 0x09, 0x54,
	0x72, 0x75, 0x6e, 0x63, 0x61, 0x74, 0x65, 0x64, 0x12, 0x40, 0x0a, 0x07, 0x6d, 0x61, 0x63, 0x5f,
	0x61, 0x6c, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x70, 0x73, 0x61, 0x5f,
	0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x2e, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69,
	0x74, 0x68, 0x6d, 0x2e, 0x4d, 0x61, 0x63, 0x2e, 0x46, 0x75, 0x6c, 0x6c, 0x4c, 0x65, 0x6e, 0x67,
	0x74, 0x68, 0x52, 0x06, 0x6d, 0x61, 0x63, 0x41, 0x6c, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61,
	0x63, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x6d, 0x61, 0x63, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x42, 0x09, 0x0a, 0x07, 0x76, 0x61, 0x72,
	0x69, 0x61, 0x6e, 0x74, 0x1a, 0xef, 0x03, 0x0a, 0x04, 0x41, 0x65, 0x61, 0x64, 0x12, 0x78, 0x0a,
	0x1c, 0x61, 0x65, 0x61, 0x64, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x36, 0x2e, 0x70, 0x73, 0x61, 0x5f, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69,
	0x74, 0x68, 0x6d, 0x2e, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x2e, 0x41, 0x65,
	0x61, 0x64, 0x2e, 0x41, 0x65, 0x61, 0x64, 0x57, 0x69, 0x74, 0x68, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x54, 0x61, 0x67, 0x48, 0x00, 0x52, 0x18, 0x61,
	0x65, 0x61, 0x64, 0x57, 0x69, 0x74, 0x68, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4c, 0x65,
	0x6e, 0x67, 0x74, 0x68, 0x54, 0x61, 0x67, 0x12, 0x6b, 0x0a, 0x17, 0x61, 0x65, 0x61, 0x64, 0x5f,
	0x77, 0x69, 0x74, 0x68, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x65, 0x6e, 0x65, 0x64, 0x5f, 0x74,
	0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x70, 0x73, 0x61, 0x5f, 0x61,
	0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x2e, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74,
	0x68, 0x6d, 0x2e, 0x41, 0x65, 0x61, 0x64, 0x2e, 0x41, 0x65, 0x61, 0x64, 0x57, 0x69, 0x74, 0x68,
	0x53, 0x68, 0x6f, 0x72, 0x74, 0x65, 0x6e, 0x65, 0x64, 0x54, 0x61, 0x67, 0x48, 0x00, 0x52, 0x14,
	0x61, 0x65, 0x61, 0x64, 0x57, 0x69, 0x74, 0x68, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x65, 0x6e, 0x65,
	0x64, 0x54, 0x61, 0x67, 0x1a, 0x88, 0x01, 0x0a, 0x14, 0x41, 0x65, 0x61, 0x64, 0x57, 0x69, 0x74,
	0x68, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x65, 0x6e, 0x65, 0x64, 0x54, 0x61, 0x67, 0x12, 0x51, 0x0a,
	0x08, 0x61, 0x65, 0x61, 0x64, 0x5f, 0x61, 0x6c, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x36, 0x2e, 0x70, 0x73, 0x61, 0x5f, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x2e,
	0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x2e, 0x41, 0x65, 0x61, 0x64, 0x2e, 0x41,
	0x65, 0x61, 0x64, 0x57, 0x69, 0x74, 0x68, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4c, 0x65,
	0x6e, 0x67, 0x74, 0x68, 0x54, 0x61, 0x67, 0x52, 0x07, 0x61, 0x65, 0x61, 0x64, 0x41, 0x6c, 0x67,
	0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x67, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x61, 0x67, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x22,
	0x6a, 0x0a, 0x18, 0x41, 0x65, 0x61, 0x64, 0x57, 0x69, 0x74, 0x68, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x54, 0x61, 0x67, 0x12, 0x25, 0x0a, 0x21, 0x41,
	0x45, 0x41, 0x44, 0x5f, 0x57, 0x49, 0x54, 0x48, 0x5f, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54,
	0x5f, 0x4c, 0x45, 0x4e, 0x47, 0x54, 0x48, 0x5f, 0x54, 0x41, 0x47, 0x5f, 0x4e, 0x4f, 0x4e, 0x45,
	0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x43, 0x4d, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x47,
	0x43, 0x4d, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x43, 0x48, 0x41, 0x43, 0x48, 0x41, 0x32, 0x30,
	0x5f, 0x50, 0x4f, 0x4c, 0x59, 0x31, 0x33, 0x30, 0x35, 0x10, 0x03, 0x42, 0x09, 0x0a, 0x07, 0x76,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x1a, 0xb9, 0x09, 0x0a, 0x13, 0x41, 0x73, 0x79, 0x6d, 0x6d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x6a,
	0x0a, 0x11, 0x72, 0x73, 0x61, 0x5f, 0x70, 0x6b, 0x63, 0x73, 0x31, 0x76, 0x31, 0x35, 0x5f, 0x73,
	0x69, 0x67, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x70, 0x73, 0x61, 0x5f,
	0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x2e, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69,
	0x74, 0x68, 0x6d, 0x2e, 0x41, 0x73, 0x79, 0x6d, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x52, 0x73, 0x61, 0x50, 0x6b, 0x63, 0x73, 0x31,
	0x76, 0x31, 0x35, 0x53, 0x69, 0x67, 0x6e, 0x48, 0x00, 0x52, 0x0f, 0x72, 0x73, 0x61, 0x50, 0x6b,
	0x63, 0x73, 0x31, 0x76, 0x31, 0x35, 0x53, 0x69, 0x67, 0x6e, 0x12, 0x74, 0x0a, 0x15, 0x72, 0x73,
	0x61, 0x5f, 0x70, 0x6b, 0x63, 0x73, 0x31, 0x76, 0x31, 0x35, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x5f,
	0x72, 0x61, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x70, 0x73, 0x61, 0x5f,
	0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x2e, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69,
	0x74, 0x68, 0x6d, 0x2e, 0x41, 0x73, 0x79, 0x6d, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x52, 0x73, 0x61, 0x50, 0x6b, 0x63, 0x73, 0x31,
	0x76, 0x31, 0x35, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x61, 0x77, 0x48, 0x00, 0x52, 0x12, 0x72, 0x73,
	0x61, 0x50, 0x6b, 0x63, 0x73, 0x31, 0x76, 0x31, 0x35, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x61, 0x77,
	0x12, 0x4e, 0x0a, 0x07, 0x72, 0x73, 0x61, 0x5f, 0x70, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x33, 0x2e, 0x70, 0x73, 0x61, 0x5f, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68,
	0x6d, 0x2e, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x2e, 0x41, 0x73, 0x79, 0x6d,
	0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e,
	0x52, 0x73, 0x61, 0x50, 0x73, 0x73, 0x48, 0x00, 0x52, 0x06, 0x72, 0x73, 0x61, 0x50, 0x73, 0x73,
	0x12, 0x4a, 0x0a, 0x05, 0x65, 0x63, 0x64, 0x73, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x32, 0x2e, 0x70, 0x73, 0x61, 0x5f, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x2e,
	0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x2e, 0x41, 0x73, 0x79, 0x6d, 0x6d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x45, 0x63,
	0x64, 0x73, 0x61, 0x48, 0x00, 0x52, 0x05, 0x65, 0x63, 0x64, 0x73, 0x61, 0x12, 0x54, 0x0a, 0x09,
	0x65, 0x63, 0x64, 0x73, 0x61, 0x5f, 0x61, 0x6e, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x35, 0x2e, 0x70, 0x73, 0x61, 0x5f, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x2e,
	0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x2e, 0x41, 0x73, 0x79, 0x6d, 0x6d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x45, 0x63,
	0x64, 0x73, 0x61, 0x41, 0x6e, 0x79, 0x48, 0x00, 0x52, 0x08, 0x65, 0x63, 0x64, 0x73, 0x61, 0x41,
	0x6e, 0x79, 0x12, 0x72, 0x0a, 0x13, 0x64, 0x65, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x69, 0x73,
	0x74, 0x69, 0x63, 0x5f, 0x65, 0x63, 0x64, 0x73, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x3f, 0x2e, 0x70, 0x73, 0x61, 0x5f, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x2e,
	0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x2e, 0x41, 0x73, 0x79, 0x6d, 0x6d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x44, 0x65,
	0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x69, 0x63, 0x45, 0x63, 0x64, 0x73, 0x61,
	0x48, 0x00, 0x52, 0x12, 0x64, 0x65, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x45, 0x63, 0x64, 0x73, 0x61, 0x1a, 0xa8, 0x01, 0x0a, 0x08, 0x53, 0x69, 0x67, 0x6e, 0x48,
	0x61, 0x73, 0x68, 0x12, 0x4d, 0x0a, 0x03, 0x61, 0x6e, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x39, 0x2e, 0x70, 0x73, 0x61, 0x5f, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d,
	0x2e, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x2e, 0x41, 0x73, 0x79, 0x6d, 0x6d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53,
	0x69, 0x67, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x2e, 0x41, 0x6e, 0x79, 0x48, 0x00, 0x52, 0x03, 0x61,
	0x6e, 0x79, 0x12, 0x3b, 0x0a, 0x08, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x70, 0x73, 0x61, 0x5f, 0x61, 0x6c, 0x67, 0x6f, 0x72,
	0x69, 0x74, 0x68, 0x6d, 0x2e, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x2e, 0x48,
	0x61, 0x73, 0x68, 0x48, 0x00, 0x52, 0x08, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x1a,
	0x05, 0x0a, 0x03, 0x41, 0x6e, 0x79, 0x42, 0x09, 0x0a, 0x07, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e,
	0x74, 0x1a, 0x63, 0x0a, 0x0f, 0x52, 0x73, 0x61, 0x50, 0x6b, 0x63, 0x73, 0x31, 0x76, 0x31, 0x35,
	0x53, 0x69, 0x67, 0x6e, 0x12, 0x50, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x61, 0x6c, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x70, 0x73, 0x61, 0x5f, 0x61, 0x6c, 0x67,
	0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x2e, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d,
	0x2e, 0x41, 0x73, 0x79, 0x6d, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x53, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x52, 0x07, 0x68,
	0x61, 0x73, 0x68, 0x41, 0x6c, 0x67, 0x1a, 0x14, 0x0a, 0x12, 0x52, 0x73, 0x61, 0x50, 0x6b, 0x63,
	0x73, 0x31, 0x76, 0x31, 0x35, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x61, 0x77, 0x1a, 0x5a, 0x0a, 0x06,
	0x52, 0x73, 0x61, 0x50, 0x73, 0x73, 0x12, 0x50, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x61,
	0x6c, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x70, 0x73, 0x61, 0x5f, 0x61,
	0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x2e, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74,
	0x68, 0x6d, 0x2e, 0x41, 0x73, 0x79, 0x6d, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x52,
	0x07, 0x68, 0x61, 0x73, 0x68, 0x41, 0x6c, 0x67, 0x1a, 0x59, 0x0a, 0x05, 0x45, 0x63, 0x64, 0x73,
	0x61, 0x12, 0x50, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x61, 0x6c, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x70, 0x73, 0x61, 0x5f, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69,
	0x74, 0x68, 0x6d, 0x2e, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x2e, 0x41, 0x73,
	0x79, 0x6d, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x52, 0x07, 0x68, 0x61, 0x73, 0x68,
	0x41, 0x6c, 0x67, 0x1a, 0x0a, 0x0a, 0x08, 0x45, 0x63, 0x64, 0x73, 0x61, 0x41, 0x6e, 0x79, 0x1a,
	0x66, 0x0a, 0x12, 0x44, 0x65, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x45, 0x63, 0x64, 0x73, 0x61, 0x12, 0x50, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x61, 0x6c,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x70, 0x73, 0x61, 0x5f, 0x61, 0x6c,
	0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x2e, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68,
	0x6d, 0x2e, 0x41, 0x73, 0x79, 0x6d, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x52, 0x07,
	0x68, 0x61, 0x73, 0x68, 0x41, 0x6c, 0x67, 0x42, 0x09, 0x0a, 0x07, 0x76, 0x61, 0x72, 0x69, 0x61,
	0x6e, 0x74, 0x1a, 0xbe, 0x02, 0x0a, 0x14, 0x41, 0x73, 0x79, 0x6d, 0x6d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x6e, 0x0a, 0x12, 0x72,
	0x73, 0x61, 0x5f, 0x70, 0x6b, 0x63, 0x73, 0x31, 0x76, 0x31, 0x35, 0x5f, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x70, 0x73, 0x61, 0x5f, 0x61, 0x6c,
	0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x2e, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68,
	0x6d, 0x2e, 0x41, 0x73, 0x79, 0x6d, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x45, 0x6e, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x73, 0x61, 0x50, 0x6b, 0x63, 0x73, 0x31, 0x76,
	0x31, 0x35, 0x43, 0x72, 0x79, 0x70, 0x74, 0x48, 0x00, 0x52, 0x10, 0x72, 0x73, 0x61, 0x50, 0x6b,
	0x63, 0x73, 0x31, 0x76, 0x31, 0x35, 0x43, 0x72, 0x79, 0x70, 0x74, 0x12, 0x52, 0x0a, 0x08, 0x72,
	0x73, 0x61, 0x5f, 0x6f, 0x61, 0x65, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e,
	0x70, 0x73, 0x61, 0x5f, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x2e, 0x41, 0x6c,
	0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x2e, 0x41, 0x73, 0x79, 0x6d, 0x6d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x73, 0x61,
	0x4f, 0x61, 0x65, 0x70, 0x48, 0x00, 0x52, 0x07, 0x72, 0x73, 0x61, 0x4f, 0x61, 0x65, 0x70, 0x1a,
	0x12, 0x0a, 0x10, 0x52, 0x73, 0x61, 0x50, 0x6b, 0x63, 0x73, 0x31, 0x76, 0x31, 0x35, 0x43, 0x72,
	0x79, 0x70, 0x74, 0x1a, 0x43, 0x0a, 0x07, 0x52, 0x73, 0x61, 0x4f, 0x61, 0x65, 0x70, 0x12, 0x38,
	0x0a, 0x08, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x61, 0x6c, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1d, 0x2e, 0x70, 0x73, 0x61, 0x5f, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d,
	0x2e, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x52,
	0x07, 0x68, 0x61, 0x73, 0x68, 0x41, 0x6c, 0x67, 0x42, 0x09, 0x0a, 0x07, 0x76, 0x61, 0x72, 0x69,
	0x61, 0x6e, 0x74, 0x1a, 0x85, 0x03, 0x0a, 0x0c, 0x4b, 0x65, 0x79, 0x41, 0x67, 0x72, 0x65, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x3d, 0x0a, 0x03, 0x72, 0x61, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x29, 0x2e, 0x70, 0x73, 0x61, 0x5f, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68,
	0x6d, 0x2e, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x2e, 0x4b, 0x65, 0x79, 0x41,
	0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x61, 0x77, 0x48, 0x00, 0x52, 0x03,
	0x72, 0x61, 0x77, 0x12, 0x69, 0x0a, 0x13, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x6b, 0x65, 0x79, 0x5f,
	0x64, 0x65, 0x72, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x37, 0x2e, 0x70, 0x73, 0x61, 0x5f, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d,
	0x2e, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x2e, 0x4b, 0x65, 0x79, 0x41, 0x67,
	0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x4b, 0x65, 0x79, 0x44,
	0x65, 0x72, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x11, 0x77, 0x69, 0x74,
	0x68, 0x4b, 0x65, 0x79, 0x44, 0x65, 0x72, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x96,
	0x01, 0x0a, 0x11, 0x57, 0x69, 0x74, 0x68, 0x4b, 0x65, 0x79, 0x44, 0x65, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x40, 0x0a, 0x06, 0x6b, 0x61, 0x5f, 0x61, 0x6c, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x70, 0x73, 0x61, 0x5f, 0x61, 0x6c, 0x67, 0x6f, 0x72,
	0x69, 0x74, 0x68, 0x6d, 0x2e, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x2e, 0x4b,
	0x65, 0x79, 0x41, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x61, 0x77, 0x52,
	0x05, 0x6b, 0x61, 0x41, 0x6c, 0x67, 0x12, 0x3f, 0x0a, 0x07, 0x6b, 0x64, 0x66, 0x5f, 0x61, 0x6c,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x73, 0x61, 0x5f, 0x61, 0x6c,
	0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x2e, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68,
	0x6d, 0x2e, 0x4b, 0x65, 0x79, 0x44, 0x65, 0x72, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x06, 0x6b, 0x64, 0x66, 0x41, 0x6c, 0x67, 0x22, 0x27, 0x0a, 0x03, 0x52, 0x61, 0x77, 0x12, 0x0c,
	0x0a, 0x08, 0x52, 0x41, 0x57, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04,
	0x46, 0x46, 0x44, 0x48, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x45, 0x43, 0x44, 0x48, 0x10, 0x02,
	0x42, 0x09, 0x0a, 0x07, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x1a, 0xdd, 0x03, 0x0a, 0x0d,
	0x4b, 0x65, 0x79, 0x44, 0x65, 0x72, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x41, 0x0a,
	0x04, 0x68, 0x6b, 0x64, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x70, 0x73,
	0x61, 0x5f, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x2e, 0x41, 0x6c, 0x67, 0x6f,
	0x72, 0x69, 0x74, 0x68, 0x6d, 0x2e, 0x4b, 0x65, 0x79, 0x44, 0x65, 0x72, 0x69, 0x76, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x48, 0x6b, 0x64, 0x66, 0x48, 0x00, 0x52, 0x04, 0x68, 0x6b, 0x64, 0x66,
	0x12, 0x4e, 0x0a, 0x09, 0x74, 0x6c, 0x73, 0x31, 0x32, 0x5f, 0x70, 0x72, 0x66, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x70, 0x73, 0x61, 0x5f, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69,
	0x74, 0x68, 0x6d, 0x2e, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x2e, 0x4b, 0x65,
	0x79, 0x44, 0x65, 0x72, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x6c, 0x73, 0x31,
	0x32, 0x50, 0x72, 0x66, 0x48, 0x00, 0x52, 0x08, 0x74, 0x6c, 0x73, 0x31, 0x32, 0x50, 0x72, 0x66,
	0x12, 0x5c, 0x0a, 0x0f, 0x74, 0x6c, 0x73, 0x31, 0x32, 0x5f, 0x70, 0x73, 0x6b, 0x5f, 0x74, 0x6f,
	0x5f, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x70, 0x73, 0x61, 0x5f,
	0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x2e, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69,
	0x74, 0x68, 0x6d, 0x2e, 0x4b, 0x65, 0x79, 0x44, 0x65, 0x72, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x54, 0x6c, 0x73, 0x31, 0x32, 0x50, 0x73, 0x6b, 0x54, 0x6f, 0x4d, 0x73, 0x48, 0x00,
	0x52, 0x0c, 0x74, 0x6c, 0x73, 0x31, 0x32, 0x50, 0x73, 0x6b, 0x54, 0x6f, 0x4d, 0x73, 0x1a, 0x40,
	0x0a, 0x04, 0x48, 0x6b, 0x64, 0x66, 0x12, 0x38, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x61,
	0x6c, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x70, 0x73, 0x61, 0x5f, 0x61,
	0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x2e, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74,
	0x68, 0x6d, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x52, 0x07, 0x68, 0x61, 0x73, 0x68, 0x41, 0x6c, 0x67,
	0x1a, 0x44, 0x0a, 0x08, 0x54, 0x6c, 0x73, 0x31, 0x32, 0x50, 0x72, 0x66, 0x12, 0x38, 0x0a, 0x08,
	0x68, 0x61, 0x73, 0x68, 0x5f, 0x61, 0x6c, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d,
	0x2e, 0x70, 0x73, 0x61, 0x5f, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x2e, 0x41,
	0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x52, 0x07, 0x68,
	0x61, 0x73, 0x68, 0x41, 0x6c, 0x67, 0x1a, 0x48, 0x0a, 0x0c, 0x54, 0x6c, 0x73, 0x31, 0x32, 0x50,
	0x73, 0x6b, 0x54, 0x6f, 0x4d, 0x73, 0x12, 0x38, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x61,
	0x6c, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x70, 0x73, 0x61, 0x5f, 0x61,
	0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x2e, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74,
	0x68, 0x6d, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x52, 0x07, 0x68, 0x61, 0x73, 0x68, 0x41, 0x6c, 0x67,
	0x42, 0x09, 0x0a, 0x07, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x22, 0xe8, 0x01, 0x0a, 0x04,
	0x48, 0x61, 0x73, 0x68, 0x12, 0x0d, 0x0a, 0x09, 0x48, 0x41, 0x53, 0x48, 0x5f, 0x4e, 0x4f, 0x4e,
	0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x03, 0x4d, 0x44, 0x32, 0x10, 0x01, 0x1a, 0x02, 0x08, 0x01,
	0x12, 0x0b, 0x0a, 0x03, 0x4d, 0x44, 0x34, 0x10, 0x02, 0x1a, 0x02, 0x08, 0x01, 0x12, 0x0b, 0x0a,
	0x03, 0x4d, 0x44, 0x35, 0x10, 0x03, 0x1a, 0x02, 0x08, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x52, 0x49,
	0x50, 0x45, 0x4d, 0x44, 0x31, 0x36, 0x30, 0x10, 0x04, 0x12, 0x0d, 0x0a, 0x05, 0x53, 0x48, 0x41,
	0x5f, 0x31, 0x10, 0x05, 0x1a, 0x02, 0x08, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x48, 0x41, 0x5f,
	0x32, 0x32, 0x34, 0x10, 0x06, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x48, 0x41, 0x5f, 0x32, 0x35, 0x36,
	0x10, 0x07, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x48, 0x41, 0x5f, 0x33, 0x38, 0x34, 0x10, 0x08, 0x12,
	0x0b, 0x0a, 0x07, 0x53, 0x48, 0x41, 0x5f, 0x35, 0x31, 0x32, 0x10, 0x09, 0x12, 0x0f, 0x0a, 0x0b,
	0x53, 0x48, 0x41, 0x5f, 0x35, 0x31, 0x32, 0x5f, 0x32, 0x32, 0x34, 0x10, 0x0a, 0x12, 0x0f, 0x0a,
	0x0b, 0x53, 0x48, 0x41, 0x5f, 0x35, 0x31, 0x32, 0x5f, 0x32, 0x35, 0x36, 0x10, 0x0b, 0x12, 0x0c,
	0x0a, 0x08, 0x53, 0x48, 0x41, 0x33, 0x5f, 0x32, 0x32, 0x34, 0x10, 0x0c, 0x12, 0x0c, 0x0a, 0x08,
	0x53, 0x48, 0x41, 0x33, 0x5f, 0x32, 0x35, 0x36, 0x10, 0x0d, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x48,
	0x41, 0x33, 0x5f, 0x33, 0x38, 0x34, 0x10, 0x0e, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x48, 0x41, 0x33,
	0x5f, 0x35, 0x31, 0x32, 0x10, 0x0f, 0x22, 0x87, 0x01, 0x0a, 0x06, 0x43, 0x69, 0x70, 0x68, 0x65,
	0x72, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x49, 0x50, 0x48, 0x45, 0x52, 0x5f, 0x4e, 0x4f, 0x4e, 0x45,
	0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x54, 0x52, 0x45, 0x41, 0x4d, 0x5f, 0x43, 0x49, 0x50,
	0x48, 0x45, 0x52, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x54, 0x52, 0x10, 0x02, 0x12, 0x07,
	0x0a, 0x03, 0x43, 0x46, 0x42, 0x10, 0x03, 0x12, 0x07, 0x0a, 0x03, 0x4f, 0x46, 0x42, 0x10, 0x04,
	0x12, 0x07, 0x0a, 0x03, 0x58, 0x54, 0x53, 0x10, 0x05, 0x12, 0x12, 0x0a, 0x0e, 0x45, 0x43, 0x42,
	0x5f, 0x4e, 0x4f, 0x5f, 0x50, 0x41, 0x44, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x06, 0x12, 0x12, 0x0a,
	0x0e, 0x43, 0x42, 0x43, 0x5f, 0x4e, 0x4f, 0x5f, 0x50, 0x41, 0x44, 0x44, 0x49, 0x4e, 0x47, 0x10,
	0x07, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x42, 0x43, 0x5f, 0x50, 0x4b, 0x43, 0x53, 0x37, 0x10, 0x08,
	0x42, 0x09, 0x0a, 0x07, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x42, 0x4e, 0x5a, 0x4c, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x61, 0x72, 0x61, 0x6c, 0x6c,
	0x61, 0x78, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x2f, 0x70, 0x61, 0x72, 0x73, 0x65, 0x63, 0x2d,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2d, 0x67, 0x6f, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x2f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x70,
	0x73, 0x61, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_psa_algorithm_proto_rawDescOnce sync.Once
	file_psa_algorithm_proto_rawDescData = file_psa_algorithm_proto_rawDesc
)

func file_psa_algorithm_proto_rawDescGZIP() []byte {
	file_psa_algorithm_proto_rawDescOnce.Do(func() {
		file_psa_algorithm_proto_rawDescData = protoimpl.X.CompressGZIP(file_psa_algorithm_proto_rawDescData)
	})
	return file_psa_algorithm_proto_rawDescData
}

var file_psa_algorithm_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_psa_algorithm_proto_msgTypes = make([]protoimpl.MessageInfo, 28)
var file_psa_algorithm_proto_goTypes = []interface{}{
	(Algorithm_Hash)(0),                                      // 0: psa_algorithm.Algorithm.Hash
	(Algorithm_Cipher)(0),                                    // 1: psa_algorithm.Algorithm.Cipher
	(Algorithm_Aead_AeadWithDefaultLengthTag)(0),             // 2: psa_algorithm.Algorithm.Aead.AeadWithDefaultLengthTag
	(Algorithm_KeyAgreement_Raw)(0),                          // 3: psa_algorithm.Algorithm.KeyAgreement.Raw
	(*Algorithm)(nil),                                        // 4: psa_algorithm.Algorithm
	(*Algorithm_None)(nil),                                   // 5: psa_algorithm.Algorithm.None
	(*Algorithm_Mac)(nil),                                    // 6: psa_algorithm.Algorithm.Mac
	(*Algorithm_Aead)(nil),                                   // 7: psa_algorithm.Algorithm.Aead
	(*Algorithm_AsymmetricSignature)(nil),                    // 8: psa_algorithm.Algorithm.AsymmetricSignature
	(*Algorithm_AsymmetricEncryption)(nil),                   // 9: psa_algorithm.Algorithm.AsymmetricEncryption
	(*Algorithm_KeyAgreement)(nil),                           // 10: psa_algorithm.Algorithm.KeyAgreement
	(*Algorithm_KeyDerivation)(nil),                          // 11: psa_algorithm.Algorithm.KeyDerivation
	(*Algorithm_Mac_FullLength)(nil),                         // 12: psa_algorithm.Algorithm.Mac.FullLength
	(*Algorithm_Mac_Truncated)(nil),                          // 13: psa_algorithm.Algorithm.Mac.Truncated
	(*Algorithm_Mac_FullLength_Hmac)(nil),                    // 14: psa_algorithm.Algorithm.Mac.FullLength.Hmac
	(*Algorithm_Mac_FullLength_CbcMac)(nil),                  // 15: psa_algorithm.Algorithm.Mac.FullLength.CbcMac
	(*Algorithm_Mac_FullLength_Cmac)(nil),                    // 16: psa_algorithm.Algorithm.Mac.FullLength.Cmac
	(*Algorithm_Aead_AeadWithShortenedTag)(nil),              // 17: psa_algorithm.Algorithm.Aead.AeadWithShortenedTag
	(*Algorithm_AsymmetricSignature_SignHash)(nil),           // 18: psa_algorithm.Algorithm.AsymmetricSignature.SignHash
	(*Algorithm_AsymmetricSignature_RsaPkcs1V15Sign)(nil),    // 19: psa_algorithm.Algorithm.AsymmetricSignature.RsaPkcs1v15Sign
	(*Algorithm_AsymmetricSignature_RsaPkcs1V15SignRaw)(nil), // 20: psa_algorithm.Algorithm.AsymmetricSignature.RsaPkcs1v15SignRaw
	(*Algorithm_AsymmetricSignature_RsaPss)(nil),             // 21: psa_algorithm.Algorithm.AsymmetricSignature.RsaPss
	(*Algorithm_AsymmetricSignature_Ecdsa)(nil),              // 22: psa_algorithm.Algorithm.AsymmetricSignature.Ecdsa
	(*Algorithm_AsymmetricSignature_EcdsaAny)(nil),           // 23: psa_algorithm.Algorithm.AsymmetricSignature.EcdsaAny
	(*Algorithm_AsymmetricSignature_DeterministicEcdsa)(nil), // 24: psa_algorithm.Algorithm.AsymmetricSignature.DeterministicEcdsa
	(*Algorithm_AsymmetricSignature_SignHash_Any)(nil),       // 25: psa_algorithm.Algorithm.AsymmetricSignature.SignHash.Any
	(*Algorithm_AsymmetricEncryption_RsaPkcs1V15Crypt)(nil),  // 26: psa_algorithm.Algorithm.AsymmetricEncryption.RsaPkcs1v15Crypt
	(*Algorithm_AsymmetricEncryption_RsaOaep)(nil),           // 27: psa_algorithm.Algorithm.AsymmetricEncryption.RsaOaep
	(*Algorithm_KeyAgreement_WithKeyDerivation)(nil),         // 28: psa_algorithm.Algorithm.KeyAgreement.WithKeyDerivation
	(*Algorithm_KeyDerivation_Hkdf)(nil),                     // 29: psa_algorithm.Algorithm.KeyDerivation.Hkdf
	(*Algorithm_KeyDerivation_Tls12Prf)(nil),                 // 30: psa_algorithm.Algorithm.KeyDerivation.Tls12Prf
	(*Algorithm_KeyDerivation_Tls12PskToMs)(nil),             // 31: psa_algorithm.Algorithm.KeyDerivation.Tls12PskToMs
}
var file_psa_algorithm_proto_depIdxs = []int32{
	5,  // 0: psa_algorithm.Algorithm.none:type_name -> psa_algorithm.Algorithm.None
	0,  // 1: psa_algorithm.Algorithm.hash:type_name -> psa_algorithm.Algorithm.Hash
	6,  // 2: psa_algorithm.Algorithm.mac:type_name -> psa_algorithm.Algorithm.Mac
	1,  // 3: psa_algorithm.Algorithm.cipher:type_name -> psa_algorithm.Algorithm.Cipher
	7,  // 4: psa_algorithm.Algorithm.aead:type_name -> psa_algorithm.Algorithm.Aead
	8,  // 5: psa_algorithm.Algorithm.asymmetric_signature:type_name -> psa_algorithm.Algorithm.AsymmetricSignature
	9,  // 6: psa_algorithm.Algorithm.asymmetric_encryption:type_name -> psa_algorithm.Algorithm.AsymmetricEncryption
	10, // 7: psa_algorithm.Algorithm.key_agreement:type_name -> psa_algorithm.Algorithm.KeyAgreement
	11, // 8: psa_algorithm.Algorithm.key_derivation:type_name -> psa_algorithm.Algorithm.KeyDerivation
	12, // 9: psa_algorithm.Algorithm.Mac.full_length:type_name -> psa_algorithm.Algorithm.Mac.FullLength
	13, // 10: psa_algorithm.Algorithm.Mac.truncated:type_name -> psa_algorithm.Algorithm.Mac.Truncated
	2,  // 11: psa_algorithm.Algorithm.Aead.aead_with_default_length_tag:type_name -> psa_algorithm.Algorithm.Aead.AeadWithDefaultLengthTag
	17, // 12: psa_algorithm.Algorithm.Aead.aead_with_shortened_tag:type_name -> psa_algorithm.Algorithm.Aead.AeadWithShortenedTag
	19, // 13: psa_algorithm.Algorithm.AsymmetricSignature.rsa_pkcs1v15_sign:type_name -> psa_algorithm.Algorithm.AsymmetricSignature.RsaPkcs1v15Sign
	20, // 14: psa_algorithm.Algorithm.AsymmetricSignature.rsa_pkcs1v15_sign_raw:type_name -> psa_algorithm.Algorithm.AsymmetricSignature.RsaPkcs1v15SignRaw
	21, // 15: psa_algorithm.Algorithm.AsymmetricSignature.rsa_pss:type_name -> psa_algorithm.Algorithm.AsymmetricSignature.RsaPss
	22, // 16: psa_algorithm.Algorithm.AsymmetricSignature.ecdsa:type_name -> psa_algorithm.Algorithm.AsymmetricSignature.Ecdsa
	23, // 17: psa_algorithm.Algorithm.AsymmetricSignature.ecdsa_any:type_name -> psa_algorithm.Algorithm.AsymmetricSignature.EcdsaAny
	24, // 18: psa_algorithm.Algorithm.AsymmetricSignature.deterministic_ecdsa:type_name -> psa_algorithm.Algorithm.AsymmetricSignature.DeterministicEcdsa
	26, // 19: psa_algorithm.Algorithm.AsymmetricEncryption.rsa_pkcs1v15_crypt:type_name -> psa_algorithm.Algorithm.AsymmetricEncryption.RsaPkcs1v15Crypt
	27, // 20: psa_algorithm.Algorithm.AsymmetricEncryption.rsa_oaep:type_name -> psa_algorithm.Algorithm.AsymmetricEncryption.RsaOaep
	3,  // 21: psa_algorithm.Algorithm.KeyAgreement.raw:type_name -> psa_algorithm.Algorithm.KeyAgreement.Raw
	28, // 22: psa_algorithm.Algorithm.KeyAgreement.with_key_derivation:type_name -> psa_algorithm.Algorithm.KeyAgreement.WithKeyDerivation
	29, // 23: psa_algorithm.Algorithm.KeyDerivation.hkdf:type_name -> psa_algorithm.Algorithm.KeyDerivation.Hkdf
	30, // 24: psa_algorithm.Algorithm.KeyDerivation.tls12_prf:type_name -> psa_algorithm.Algorithm.KeyDerivation.Tls12Prf
	31, // 25: psa_algorithm.Algorithm.KeyDerivation.tls12_psk_to_ms:type_name -> psa_algorithm.Algorithm.KeyDerivation.Tls12PskToMs
	14, // 26: psa_algorithm.Algorithm.Mac.FullLength.hmac:type_name -> psa_algorithm.Algorithm.Mac.FullLength.Hmac
	15, // 27: psa_algorithm.Algorithm.Mac.FullLength.cbc_mac:type_name -> psa_algorithm.Algorithm.Mac.FullLength.CbcMac
	16, // 28: psa_algorithm.Algorithm.Mac.FullLength.cmac:type_name -> psa_algorithm.Algorithm.Mac.FullLength.Cmac
	12, // 29: psa_algorithm.Algorithm.Mac.Truncated.mac_alg:type_name -> psa_algorithm.Algorithm.Mac.FullLength
	0,  // 30: psa_algorithm.Algorithm.Mac.FullLength.Hmac.hash_alg:type_name -> psa_algorithm.Algorithm.Hash
	2,  // 31: psa_algorithm.Algorithm.Aead.AeadWithShortenedTag.aead_alg:type_name -> psa_algorithm.Algorithm.Aead.AeadWithDefaultLengthTag
	25, // 32: psa_algorithm.Algorithm.AsymmetricSignature.SignHash.any:type_name -> psa_algorithm.Algorithm.AsymmetricSignature.SignHash.Any
	0,  // 33: psa_algorithm.Algorithm.AsymmetricSignature.SignHash.specific:type_name -> psa_algorithm.Algorithm.Hash
	18, // 34: psa_algorithm.Algorithm.AsymmetricSignature.RsaPkcs1v15Sign.hash_alg:type_name -> psa_algorithm.Algorithm.AsymmetricSignature.SignHash
	18, // 35: psa_algorithm.Algorithm.AsymmetricSignature.RsaPss.hash_alg:type_name -> psa_algorithm.Algorithm.AsymmetricSignature.SignHash
	18, // 36: psa_algorithm.Algorithm.AsymmetricSignature.Ecdsa.hash_alg:type_name -> psa_algorithm.Algorithm.AsymmetricSignature.SignHash
	18, // 37: psa_algorithm.Algorithm.AsymmetricSignature.DeterministicEcdsa.hash_alg:type_name -> psa_algorithm.Algorithm.AsymmetricSignature.SignHash
	0,  // 38: psa_algorithm.Algorithm.AsymmetricEncryption.RsaOaep.hash_alg:type_name -> psa_algorithm.Algorithm.Hash
	3,  // 39: psa_algorithm.Algorithm.KeyAgreement.WithKeyDerivation.ka_alg:type_name -> psa_algorithm.Algorithm.KeyAgreement.Raw
	11, // 40: psa_algorithm.Algorithm.KeyAgreement.WithKeyDerivation.kdf_alg:type_name -> psa_algorithm.Algorithm.KeyDerivation
	0,  // 41: psa_algorithm.Algorithm.KeyDerivation.Hkdf.hash_alg:type_name -> psa_algorithm.Algorithm.Hash
	0,  // 42: psa_algorithm.Algorithm.KeyDerivation.Tls12Prf.hash_alg:type_name -> psa_algorithm.Algorithm.Hash
	0,  // 43: psa_algorithm.Algorithm.KeyDerivation.Tls12PskToMs.hash_alg:type_name -> psa_algorithm.Algorithm.Hash
	44, // [44:44] is the sub-list for method output_type
	44, // [44:44] is the sub-list for method input_type
	44, // [44:44] is the sub-list for extension type_name
	44, // [44:44] is the sub-list for extension extendee
	0,  // [0:44] is the sub-list for field type_name
}

func init() { file_psa_algorithm_proto_init() }
func file_psa_algorithm_proto_init() {
	if File_psa_algorithm_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_psa_algorithm_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Algorithm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_psa_algorithm_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Algorithm_None); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_psa_algorithm_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Algorithm_Mac); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_psa_algorithm_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Algorithm_Aead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_psa_algorithm_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Algorithm_AsymmetricSignature); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_psa_algorithm_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Algorithm_AsymmetricEncryption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_psa_algorithm_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Algorithm_KeyAgreement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_psa_algorithm_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Algorithm_KeyDerivation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_psa_algorithm_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Algorithm_Mac_FullLength); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_psa_algorithm_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Algorithm_Mac_Truncated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_psa_algorithm_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Algorithm_Mac_FullLength_Hmac); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_psa_algorithm_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Algorithm_Mac_FullLength_CbcMac); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_psa_algorithm_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Algorithm_Mac_FullLength_Cmac); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_psa_algorithm_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Algorithm_Aead_AeadWithShortenedTag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_psa_algorithm_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Algorithm_AsymmetricSignature_SignHash); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_psa_algorithm_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Algorithm_AsymmetricSignature_RsaPkcs1V15Sign); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_psa_algorithm_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Algorithm_AsymmetricSignature_RsaPkcs1V15SignRaw); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_psa_algorithm_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Algorithm_AsymmetricSignature_RsaPss); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_psa_algorithm_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Algorithm_AsymmetricSignature_Ecdsa); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_psa_algorithm_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Algorithm_AsymmetricSignature_EcdsaAny); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_psa_algorithm_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Algorithm_AsymmetricSignature_DeterministicEcdsa); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_psa_algorithm_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Algorithm_AsymmetricSignature_SignHash_Any); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_psa_algorithm_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Algorithm_AsymmetricEncryption_RsaPkcs1V15Crypt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_psa_algorithm_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Algorithm_AsymmetricEncryption_RsaOaep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_psa_algorithm_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Algorithm_KeyAgreement_WithKeyDerivation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_psa_algorithm_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Algorithm_KeyDerivation_Hkdf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_psa_algorithm_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Algorithm_KeyDerivation_Tls12Prf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_psa_algorithm_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Algorithm_KeyDerivation_Tls12PskToMs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_psa_algorithm_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Algorithm_None_)(nil),
		(*Algorithm_Hash_)(nil),
		(*Algorithm_Mac_)(nil),
		(*Algorithm_Cipher_)(nil),
		(*Algorithm_Aead_)(nil),
		(*Algorithm_AsymmetricSignature_)(nil),
		(*Algorithm_AsymmetricEncryption_)(nil),
		(*Algorithm_KeyAgreement_)(nil),
		(*Algorithm_KeyDerivation_)(nil),
	}
	file_psa_algorithm_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*Algorithm_Mac_FullLength_)(nil),
		(*Algorithm_Mac_Truncated_)(nil),
	}
	file_psa_algorithm_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*Algorithm_Aead_AeadWithDefaultLengthTag_)(nil),
		(*Algorithm_Aead_AeadWithShortenedTag_)(nil),
	}
	file_psa_algorithm_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*Algorithm_AsymmetricSignature_RsaPkcs1V15Sign_)(nil),
		(*Algorithm_AsymmetricSignature_RsaPkcs1V15SignRaw_)(nil),
		(*Algorithm_AsymmetricSignature_RsaPss_)(nil),
		(*Algorithm_AsymmetricSignature_Ecdsa_)(nil),
		(*Algorithm_AsymmetricSignature_EcdsaAny_)(nil),
		(*Algorithm_AsymmetricSignature_DeterministicEcdsa_)(nil),
	}
	file_psa_algorithm_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*Algorithm_AsymmetricEncryption_RsaPkcs1V15Crypt_)(nil),
		(*Algorithm_AsymmetricEncryption_RsaOaep_)(nil),
	}
	file_psa_algorithm_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*Algorithm_KeyAgreement_Raw_)(nil),
		(*Algorithm_KeyAgreement_WithKeyDerivation_)(nil),
	}
	file_psa_algorithm_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*Algorithm_KeyDerivation_Hkdf_)(nil),
		(*Algorithm_KeyDerivation_Tls12Prf_)(nil),
		(*Algorithm_KeyDerivation_Tls12PskToMs_)(nil),
	}
	file_psa_algorithm_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*Algorithm_Mac_FullLength_Hmac_)(nil),
		(*Algorithm_Mac_FullLength_CbcMac_)(nil),
		(*Algorithm_Mac_FullLength_Cmac_)(nil),
	}
	file_psa_algorithm_proto_msgTypes[14].OneofWrappers = []interface{}{
		(*Algorithm_AsymmetricSignature_SignHash_Any_)(nil),
		(*Algorithm_AsymmetricSignature_SignHash_Specific)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_psa_algorithm_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   28,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_psa_algorithm_proto_goTypes,
		DependencyIndexes: file_psa_algorithm_proto_depIdxs,
		EnumInfos:         file_psa_algorithm_proto_enumTypes,
		MessageInfos:      file_psa_algorithm_proto_msgTypes,
	}.Build()
	File_psa_algorithm_proto = out.File
	file_psa_algorithm_proto_rawDesc = nil
	file_psa_algorithm_proto_goTypes = nil
	file_psa_algorithm_proto_depIdxs = nil
}
