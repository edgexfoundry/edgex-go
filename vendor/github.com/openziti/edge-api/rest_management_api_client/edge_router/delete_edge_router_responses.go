// Code generated by go-swagger; DO NOT EDIT.

//
// Copyright NetFoundry Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// __          __              _
// \ \        / /             (_)
//  \ \  /\  / /_ _ _ __ _ __  _ _ __   __ _
//   \ \/  \/ / _` | '__| '_ \| | '_ \ / _` |
//    \  /\  / (_| | |  | | | | | | | | (_| | : This file is generated, do not edit it.
//     \/  \/ \__,_|_|  |_| |_|_|_| |_|\__, |
//                                      __/ |
//                                     |___/

package edge_router

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/openziti/edge-api/rest_model"
)

// DeleteEdgeRouterReader is a Reader for the DeleteEdgeRouter structure.
type DeleteEdgeRouterReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteEdgeRouterReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteEdgeRouterOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteEdgeRouterBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteEdgeRouterUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteEdgeRouterNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewDeleteEdgeRouterConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeleteEdgeRouterTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewDeleteEdgeRouterServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteEdgeRouterOK creates a DeleteEdgeRouterOK with default headers values
func NewDeleteEdgeRouterOK() *DeleteEdgeRouterOK {
	return &DeleteEdgeRouterOK{}
}

/* DeleteEdgeRouterOK describes a response with status code 200, with default header values.

The delete request was successful and the resource has been removed
*/
type DeleteEdgeRouterOK struct {
	Payload *rest_model.Empty
}

func (o *DeleteEdgeRouterOK) Error() string {
	return fmt.Sprintf("[DELETE /edge-routers/{id}][%d] deleteEdgeRouterOK  %+v", 200, o.Payload)
}
func (o *DeleteEdgeRouterOK) GetPayload() *rest_model.Empty {
	return o.Payload
}

func (o *DeleteEdgeRouterOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(rest_model.Empty)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteEdgeRouterBadRequest creates a DeleteEdgeRouterBadRequest with default headers values
func NewDeleteEdgeRouterBadRequest() *DeleteEdgeRouterBadRequest {
	return &DeleteEdgeRouterBadRequest{}
}

/* DeleteEdgeRouterBadRequest describes a response with status code 400, with default header values.

The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error's code, message, and cause fields can be inspected for further information
*/
type DeleteEdgeRouterBadRequest struct {
	Payload *rest_model.APIErrorEnvelope
}

func (o *DeleteEdgeRouterBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /edge-routers/{id}][%d] deleteEdgeRouterBadRequest  %+v", 400, o.Payload)
}
func (o *DeleteEdgeRouterBadRequest) GetPayload() *rest_model.APIErrorEnvelope {
	return o.Payload
}

func (o *DeleteEdgeRouterBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(rest_model.APIErrorEnvelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteEdgeRouterUnauthorized creates a DeleteEdgeRouterUnauthorized with default headers values
func NewDeleteEdgeRouterUnauthorized() *DeleteEdgeRouterUnauthorized {
	return &DeleteEdgeRouterUnauthorized{}
}

/* DeleteEdgeRouterUnauthorized describes a response with status code 401, with default header values.

The supplied session does not have the correct access rights to request this resource
*/
type DeleteEdgeRouterUnauthorized struct {
	Payload *rest_model.APIErrorEnvelope
}

func (o *DeleteEdgeRouterUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /edge-routers/{id}][%d] deleteEdgeRouterUnauthorized  %+v", 401, o.Payload)
}
func (o *DeleteEdgeRouterUnauthorized) GetPayload() *rest_model.APIErrorEnvelope {
	return o.Payload
}

func (o *DeleteEdgeRouterUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(rest_model.APIErrorEnvelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteEdgeRouterNotFound creates a DeleteEdgeRouterNotFound with default headers values
func NewDeleteEdgeRouterNotFound() *DeleteEdgeRouterNotFound {
	return &DeleteEdgeRouterNotFound{}
}

/* DeleteEdgeRouterNotFound describes a response with status code 404, with default header values.

The requested resource does not exist
*/
type DeleteEdgeRouterNotFound struct {
	Payload *rest_model.APIErrorEnvelope
}

func (o *DeleteEdgeRouterNotFound) Error() string {
	return fmt.Sprintf("[DELETE /edge-routers/{id}][%d] deleteEdgeRouterNotFound  %+v", 404, o.Payload)
}
func (o *DeleteEdgeRouterNotFound) GetPayload() *rest_model.APIErrorEnvelope {
	return o.Payload
}

func (o *DeleteEdgeRouterNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(rest_model.APIErrorEnvelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteEdgeRouterConflict creates a DeleteEdgeRouterConflict with default headers values
func NewDeleteEdgeRouterConflict() *DeleteEdgeRouterConflict {
	return &DeleteEdgeRouterConflict{}
}

/* DeleteEdgeRouterConflict describes a response with status code 409, with default header values.

The resource requested to be removed/altered cannot be as it is referenced by another object.
*/
type DeleteEdgeRouterConflict struct {
	Payload *rest_model.APIErrorEnvelope
}

func (o *DeleteEdgeRouterConflict) Error() string {
	return fmt.Sprintf("[DELETE /edge-routers/{id}][%d] deleteEdgeRouterConflict  %+v", 409, o.Payload)
}
func (o *DeleteEdgeRouterConflict) GetPayload() *rest_model.APIErrorEnvelope {
	return o.Payload
}

func (o *DeleteEdgeRouterConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(rest_model.APIErrorEnvelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteEdgeRouterTooManyRequests creates a DeleteEdgeRouterTooManyRequests with default headers values
func NewDeleteEdgeRouterTooManyRequests() *DeleteEdgeRouterTooManyRequests {
	return &DeleteEdgeRouterTooManyRequests{}
}

/* DeleteEdgeRouterTooManyRequests describes a response with status code 429, with default header values.

The resource requested is rate limited and the rate limit has been exceeded
*/
type DeleteEdgeRouterTooManyRequests struct {
	Payload *rest_model.APIErrorEnvelope
}

func (o *DeleteEdgeRouterTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /edge-routers/{id}][%d] deleteEdgeRouterTooManyRequests  %+v", 429, o.Payload)
}
func (o *DeleteEdgeRouterTooManyRequests) GetPayload() *rest_model.APIErrorEnvelope {
	return o.Payload
}

func (o *DeleteEdgeRouterTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(rest_model.APIErrorEnvelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteEdgeRouterServiceUnavailable creates a DeleteEdgeRouterServiceUnavailable with default headers values
func NewDeleteEdgeRouterServiceUnavailable() *DeleteEdgeRouterServiceUnavailable {
	return &DeleteEdgeRouterServiceUnavailable{}
}

/* DeleteEdgeRouterServiceUnavailable describes a response with status code 503, with default header values.

The request could not be completed due to the server being busy or in a temporarily bad state
*/
type DeleteEdgeRouterServiceUnavailable struct {
	Payload *rest_model.APIErrorEnvelope
}

func (o *DeleteEdgeRouterServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /edge-routers/{id}][%d] deleteEdgeRouterServiceUnavailable  %+v", 503, o.Payload)
}
func (o *DeleteEdgeRouterServiceUnavailable) GetPayload() *rest_model.APIErrorEnvelope {
	return o.Payload
}

func (o *DeleteEdgeRouterServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(rest_model.APIErrorEnvelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
