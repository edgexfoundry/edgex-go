// Code generated by go-swagger; DO NOT EDIT.

//
// Copyright NetFoundry Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// __          __              _
// \ \        / /             (_)
//  \ \  /\  / /_ _ _ __ _ __  _ _ __   __ _
//   \ \/  \/ / _` | '__| '_ \| | '_ \ / _` |
//    \  /\  / (_| | |  | | | | | | | | (_| | : This file is generated, do not edit it.
//     \/  \/ \__,_|_|  |_| |_|_|_| |_|\__, |
//                                      __/ |
//                                     |___/

package api_session

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/openziti/edge-api/rest_model"
)

// DeleteAPISessionsReader is a Reader for the DeleteAPISessions structure.
type DeleteAPISessionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteAPISessionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteAPISessionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeleteAPISessionsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteAPISessionsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteAPISessionsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeleteAPISessionsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewDeleteAPISessionsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteAPISessionsOK creates a DeleteAPISessionsOK with default headers values
func NewDeleteAPISessionsOK() *DeleteAPISessionsOK {
	return &DeleteAPISessionsOK{}
}

/* DeleteAPISessionsOK describes a response with status code 200, with default header values.

The delete request was successful and the resource has been removed
*/
type DeleteAPISessionsOK struct {
	Payload *rest_model.Empty
}

func (o *DeleteAPISessionsOK) Error() string {
	return fmt.Sprintf("[DELETE /api-sessions/{id}][%d] deleteApiSessionsOK  %+v", 200, o.Payload)
}
func (o *DeleteAPISessionsOK) GetPayload() *rest_model.Empty {
	return o.Payload
}

func (o *DeleteAPISessionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(rest_model.Empty)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAPISessionsUnauthorized creates a DeleteAPISessionsUnauthorized with default headers values
func NewDeleteAPISessionsUnauthorized() *DeleteAPISessionsUnauthorized {
	return &DeleteAPISessionsUnauthorized{}
}

/* DeleteAPISessionsUnauthorized describes a response with status code 401, with default header values.

The supplied session does not have the correct access rights to request this resource
*/
type DeleteAPISessionsUnauthorized struct {
	Payload *rest_model.APIErrorEnvelope
}

func (o *DeleteAPISessionsUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api-sessions/{id}][%d] deleteApiSessionsUnauthorized  %+v", 401, o.Payload)
}
func (o *DeleteAPISessionsUnauthorized) GetPayload() *rest_model.APIErrorEnvelope {
	return o.Payload
}

func (o *DeleteAPISessionsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(rest_model.APIErrorEnvelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAPISessionsForbidden creates a DeleteAPISessionsForbidden with default headers values
func NewDeleteAPISessionsForbidden() *DeleteAPISessionsForbidden {
	return &DeleteAPISessionsForbidden{}
}

/* DeleteAPISessionsForbidden describes a response with status code 403, with default header values.

The supplied session does not have the correct access rights to request this resource
*/
type DeleteAPISessionsForbidden struct {
	Payload *rest_model.APIErrorEnvelope
}

func (o *DeleteAPISessionsForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api-sessions/{id}][%d] deleteApiSessionsForbidden  %+v", 403, o.Payload)
}
func (o *DeleteAPISessionsForbidden) GetPayload() *rest_model.APIErrorEnvelope {
	return o.Payload
}

func (o *DeleteAPISessionsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(rest_model.APIErrorEnvelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAPISessionsNotFound creates a DeleteAPISessionsNotFound with default headers values
func NewDeleteAPISessionsNotFound() *DeleteAPISessionsNotFound {
	return &DeleteAPISessionsNotFound{}
}

/* DeleteAPISessionsNotFound describes a response with status code 404, with default header values.

The requested resource does not exist
*/
type DeleteAPISessionsNotFound struct {
	Payload *rest_model.APIErrorEnvelope
}

func (o *DeleteAPISessionsNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api-sessions/{id}][%d] deleteApiSessionsNotFound  %+v", 404, o.Payload)
}
func (o *DeleteAPISessionsNotFound) GetPayload() *rest_model.APIErrorEnvelope {
	return o.Payload
}

func (o *DeleteAPISessionsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(rest_model.APIErrorEnvelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAPISessionsTooManyRequests creates a DeleteAPISessionsTooManyRequests with default headers values
func NewDeleteAPISessionsTooManyRequests() *DeleteAPISessionsTooManyRequests {
	return &DeleteAPISessionsTooManyRequests{}
}

/* DeleteAPISessionsTooManyRequests describes a response with status code 429, with default header values.

The resource requested is rate limited and the rate limit has been exceeded
*/
type DeleteAPISessionsTooManyRequests struct {
	Payload *rest_model.APIErrorEnvelope
}

func (o *DeleteAPISessionsTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /api-sessions/{id}][%d] deleteApiSessionsTooManyRequests  %+v", 429, o.Payload)
}
func (o *DeleteAPISessionsTooManyRequests) GetPayload() *rest_model.APIErrorEnvelope {
	return o.Payload
}

func (o *DeleteAPISessionsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(rest_model.APIErrorEnvelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAPISessionsServiceUnavailable creates a DeleteAPISessionsServiceUnavailable with default headers values
func NewDeleteAPISessionsServiceUnavailable() *DeleteAPISessionsServiceUnavailable {
	return &DeleteAPISessionsServiceUnavailable{}
}

/* DeleteAPISessionsServiceUnavailable describes a response with status code 503, with default header values.

The request could not be completed due to the server being busy or in a temporarily bad state
*/
type DeleteAPISessionsServiceUnavailable struct {
	Payload *rest_model.APIErrorEnvelope
}

func (o *DeleteAPISessionsServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /api-sessions/{id}][%d] deleteApiSessionsServiceUnavailable  %+v", 503, o.Payload)
}
func (o *DeleteAPISessionsServiceUnavailable) GetPayload() *rest_model.APIErrorEnvelope {
	return o.Payload
}

func (o *DeleteAPISessionsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(rest_model.APIErrorEnvelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
