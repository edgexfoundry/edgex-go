// Code generated by go-swagger; DO NOT EDIT.

//
// Copyright NetFoundry Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// __          __              _
// \ \        / /             (_)
//  \ \  /\  / /_ _ _ __ _ __  _ _ __   __ _
//   \ \/  \/ / _` | '__| '_ \| | '_ \ / _` |
//    \  /\  / (_| | |  | | | | | | | | (_| | : This file is generated, do not edit it.
//     \/  \/ \__,_|_|  |_| |_|_|_| |_|\__, |
//                                      __/ |
//                                     |___/

package rest_model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// EnrollmentCreate enrollment create
//
// swagger:model enrollmentCreate
type EnrollmentCreate struct {

	// ca Id
	CaID *string `json:"caId,omitempty"`

	// expires at
	// Required: true
	// Format: date-time
	ExpiresAt *strfmt.DateTime `json:"expiresAt"`

	// identity Id
	// Required: true
	IdentityID *string `json:"identityId"`

	// method
	// Required: true
	// Enum: [ott ottca updb]
	Method *string `json:"method"`

	// username
	Username *string `json:"username,omitempty"`
}

// Validate validates this enrollment create
func (m *EnrollmentCreate) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateExpiresAt(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateIdentityID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMethod(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *EnrollmentCreate) validateExpiresAt(formats strfmt.Registry) error {

	if err := validate.Required("expiresAt", "body", m.ExpiresAt); err != nil {
		return err
	}

	if err := validate.FormatOf("expiresAt", "body", "date-time", m.ExpiresAt.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *EnrollmentCreate) validateIdentityID(formats strfmt.Registry) error {

	if err := validate.Required("identityId", "body", m.IdentityID); err != nil {
		return err
	}

	return nil
}

var enrollmentCreateTypeMethodPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["ott","ottca","updb"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		enrollmentCreateTypeMethodPropEnum = append(enrollmentCreateTypeMethodPropEnum, v)
	}
}

const (

	// EnrollmentCreateMethodOtt captures enum value "ott"
	EnrollmentCreateMethodOtt string = "ott"

	// EnrollmentCreateMethodOttca captures enum value "ottca"
	EnrollmentCreateMethodOttca string = "ottca"

	// EnrollmentCreateMethodUpdb captures enum value "updb"
	EnrollmentCreateMethodUpdb string = "updb"
)

// prop value enum
func (m *EnrollmentCreate) validateMethodEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, enrollmentCreateTypeMethodPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *EnrollmentCreate) validateMethod(formats strfmt.Registry) error {

	if err := validate.Required("method", "body", m.Method); err != nil {
		return err
	}

	// value enum
	if err := m.validateMethodEnum("method", "body", *m.Method); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this enrollment create based on context it is used
func (m *EnrollmentCreate) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *EnrollmentCreate) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *EnrollmentCreate) UnmarshalBinary(b []byte) error {
	var res EnrollmentCreate
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
