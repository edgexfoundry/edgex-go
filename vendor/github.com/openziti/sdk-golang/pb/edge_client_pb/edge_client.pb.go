// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.21.12
// source: edge_client.proto

package edge_client_pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ContentType int32

const (
	ContentType_Hello                      ContentType = 0
	ContentType_Ping                       ContentType = 1
	ContentType_Result                     ContentType = 2
	ContentType_Latency                    ContentType = 3
	ContentType_ConnectType                ContentType = 60783
	ContentType_StateConnectedType         ContentType = 60784
	ContentType_StateClosedType            ContentType = 60785
	ContentType_DataType                   ContentType = 60786
	ContentType_DialType                   ContentType = 60787
	ContentType_DialSuccessType            ContentType = 60788
	ContentType_DialFailedType             ContentType = 60789
	ContentType_BindType                   ContentType = 60790
	ContentType_UnbindType                 ContentType = 60791
	ContentType_StateSessionEndedType      ContentType = 60792
	ContentType_ProbeType                  ContentType = 60793
	ContentType_UpdateBindType             ContentType = 60794
	ContentType_HealthEventType            ContentType = 60795
	ContentType_TraceRouteType             ContentType = 60796
	ContentType_TraceRouteResponseType     ContentType = 60797
	ContentType_ConnInspectRequest         ContentType = 60798
	ContentType_ConnInspectResponse        ContentType = 60799
	ContentType_BindSuccess                ContentType = 60800
	ContentType_UpdateTokenSuccessType     ContentType = 60801
	ContentType_UpdateTokenFailureType     ContentType = 60802
	ContentType_UpdateTokenType            ContentType = 60803
	ContentType_PostureResponseType        ContentType = 10800
	ContentType_PostureResponseSuccessType ContentType = 10801
)

// Enum value maps for ContentType.
var (
	ContentType_name = map[int32]string{
		0:     "Hello",
		1:     "Ping",
		2:     "Result",
		3:     "Latency",
		60783: "ConnectType",
		60784: "StateConnectedType",
		60785: "StateClosedType",
		60786: "DataType",
		60787: "DialType",
		60788: "DialSuccessType",
		60789: "DialFailedType",
		60790: "BindType",
		60791: "UnbindType",
		60792: "StateSessionEndedType",
		60793: "ProbeType",
		60794: "UpdateBindType",
		60795: "HealthEventType",
		60796: "TraceRouteType",
		60797: "TraceRouteResponseType",
		60798: "ConnInspectRequest",
		60799: "ConnInspectResponse",
		60800: "BindSuccess",
		60801: "UpdateTokenSuccessType",
		60802: "UpdateTokenFailureType",
		60803: "UpdateTokenType",
		10800: "PostureResponseType",
		10801: "PostureResponseSuccessType",
	}
	ContentType_value = map[string]int32{
		"Hello":                      0,
		"Ping":                       1,
		"Result":                     2,
		"Latency":                    3,
		"ConnectType":                60783,
		"StateConnectedType":         60784,
		"StateClosedType":            60785,
		"DataType":                   60786,
		"DialType":                   60787,
		"DialSuccessType":            60788,
		"DialFailedType":             60789,
		"BindType":                   60790,
		"UnbindType":                 60791,
		"StateSessionEndedType":      60792,
		"ProbeType":                  60793,
		"UpdateBindType":             60794,
		"HealthEventType":            60795,
		"TraceRouteType":             60796,
		"TraceRouteResponseType":     60797,
		"ConnInspectRequest":         60798,
		"ConnInspectResponse":        60799,
		"BindSuccess":                60800,
		"UpdateTokenSuccessType":     60801,
		"UpdateTokenFailureType":     60802,
		"UpdateTokenType":            60803,
		"PostureResponseType":        10800,
		"PostureResponseSuccessType": 10801,
	}
)

func (x ContentType) Enum() *ContentType {
	p := new(ContentType)
	*p = x
	return p
}

func (x ContentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ContentType) Descriptor() protoreflect.EnumDescriptor {
	return file_edge_client_proto_enumTypes[0].Descriptor()
}

func (ContentType) Type() protoreflect.EnumType {
	return &file_edge_client_proto_enumTypes[0]
}

func (x ContentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ContentType.Descriptor instead.
func (ContentType) EnumDescriptor() ([]byte, []int) {
	return file_edge_client_proto_rawDescGZIP(), []int{0}
}

type HeaderId int32

const (
	HeaderId_ZER0                     HeaderId = 0
	HeaderId_UUID                     HeaderId = 128
	HeaderId_ConnId                   HeaderId = 1000
	HeaderId_Seq                      HeaderId = 1001
	HeaderId_SessionToken             HeaderId = 1002
	HeaderId_PublicKey                HeaderId = 1003
	HeaderId_Cost                     HeaderId = 1004
	HeaderId_Precedence               HeaderId = 1005
	HeaderId_TerminatorIdentity       HeaderId = 1006
	HeaderId_TerminatorIdentitySecret HeaderId = 1007
	HeaderId_CallerId                 HeaderId = 1008
	HeaderId_CryptoMethod             HeaderId = 1009
	HeaderId_Flags                    HeaderId = 1010
	HeaderId_AppData                  HeaderId = 1011
	HeaderId_RouterProvidedConnId     HeaderId = 1012
	HeaderId_HealthStatus             HeaderId = 1013
	HeaderId_ErrorCode                HeaderId = 1014
	HeaderId_Timestamp                HeaderId = 1015
	HeaderId_TraceHopCount            HeaderId = 1016
	HeaderId_TraceHopType             HeaderId = 1017
	HeaderId_TraceHopId               HeaderId = 1018
	HeaderId_TraceSourceRequestId     HeaderId = 1019
	HeaderId_TraceError               HeaderId = 1020
	HeaderId_ListenerId               HeaderId = 1021
	HeaderId_ConnType                 HeaderId = 1022
	HeaderId_SupportsInspect          HeaderId = 1023
	HeaderId_SupportsBindSuccess      HeaderId = 1024
	HeaderId_ConnectionMarker         HeaderId = 1025
	HeaderId_CircuitId                HeaderId = 1026
	HeaderId_StickinessToken          HeaderId = 1027
)

// Enum value maps for HeaderId.
var (
	HeaderId_name = map[int32]string{
		0:    "ZER0",
		128:  "UUID",
		1000: "ConnId",
		1001: "Seq",
		1002: "SessionToken",
		1003: "PublicKey",
		1004: "Cost",
		1005: "Precedence",
		1006: "TerminatorIdentity",
		1007: "TerminatorIdentitySecret",
		1008: "CallerId",
		1009: "CryptoMethod",
		1010: "Flags",
		1011: "AppData",
		1012: "RouterProvidedConnId",
		1013: "HealthStatus",
		1014: "ErrorCode",
		1015: "Timestamp",
		1016: "TraceHopCount",
		1017: "TraceHopType",
		1018: "TraceHopId",
		1019: "TraceSourceRequestId",
		1020: "TraceError",
		1021: "ListenerId",
		1022: "ConnType",
		1023: "SupportsInspect",
		1024: "SupportsBindSuccess",
		1025: "ConnectionMarker",
		1026: "CircuitId",
		1027: "StickinessToken",
	}
	HeaderId_value = map[string]int32{
		"ZER0":                     0,
		"UUID":                     128,
		"ConnId":                   1000,
		"Seq":                      1001,
		"SessionToken":             1002,
		"PublicKey":                1003,
		"Cost":                     1004,
		"Precedence":               1005,
		"TerminatorIdentity":       1006,
		"TerminatorIdentitySecret": 1007,
		"CallerId":                 1008,
		"CryptoMethod":             1009,
		"Flags":                    1010,
		"AppData":                  1011,
		"RouterProvidedConnId":     1012,
		"HealthStatus":             1013,
		"ErrorCode":                1014,
		"Timestamp":                1015,
		"TraceHopCount":            1016,
		"TraceHopType":             1017,
		"TraceHopId":               1018,
		"TraceSourceRequestId":     1019,
		"TraceError":               1020,
		"ListenerId":               1021,
		"ConnType":                 1022,
		"SupportsInspect":          1023,
		"SupportsBindSuccess":      1024,
		"ConnectionMarker":         1025,
		"CircuitId":                1026,
		"StickinessToken":          1027,
	}
)

func (x HeaderId) Enum() *HeaderId {
	p := new(HeaderId)
	*p = x
	return p
}

func (x HeaderId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HeaderId) Descriptor() protoreflect.EnumDescriptor {
	return file_edge_client_proto_enumTypes[1].Descriptor()
}

func (HeaderId) Type() protoreflect.EnumType {
	return &file_edge_client_proto_enumTypes[1]
}

func (x HeaderId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HeaderId.Descriptor instead.
func (HeaderId) EnumDescriptor() ([]byte, []int) {
	return file_edge_client_proto_rawDescGZIP(), []int{1}
}

type Error int32

const (
	Error_OK                          Error = 0
	Error_Internal                    Error = 1
	Error_InvalidApiSession           Error = 2
	Error_InvalidSession              Error = 3
	Error_WrongSessionType            Error = 4
	Error_InvalidEdgeRouterForSession Error = 5
	Error_InvalidService              Error = 6
	Error_TunnelingNotEnabled         Error = 7
	Error_InvalidTerminator           Error = 8
	Error_InvalidPrecedence           Error = 9
	Error_InvalidCost                 Error = 10
	Error_EncryptionDataMissing       Error = 11
)

// Enum value maps for Error.
var (
	Error_name = map[int32]string{
		0:  "OK",
		1:  "Internal",
		2:  "InvalidApiSession",
		3:  "InvalidSession",
		4:  "WrongSessionType",
		5:  "InvalidEdgeRouterForSession",
		6:  "InvalidService",
		7:  "TunnelingNotEnabled",
		8:  "InvalidTerminator",
		9:  "InvalidPrecedence",
		10: "InvalidCost",
		11: "EncryptionDataMissing",
	}
	Error_value = map[string]int32{
		"OK":                          0,
		"Internal":                    1,
		"InvalidApiSession":           2,
		"InvalidSession":              3,
		"WrongSessionType":            4,
		"InvalidEdgeRouterForSession": 5,
		"InvalidService":              6,
		"TunnelingNotEnabled":         7,
		"InvalidTerminator":           8,
		"InvalidPrecedence":           9,
		"InvalidCost":                 10,
		"EncryptionDataMissing":       11,
	}
)

func (x Error) Enum() *Error {
	p := new(Error)
	*p = x
	return p
}

func (x Error) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Error) Descriptor() protoreflect.EnumDescriptor {
	return file_edge_client_proto_enumTypes[2].Descriptor()
}

func (Error) Type() protoreflect.EnumType {
	return &file_edge_client_proto_enumTypes[2]
}

func (x Error) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Error.Descriptor instead.
func (Error) EnumDescriptor() ([]byte, []int) {
	return file_edge_client_proto_rawDescGZIP(), []int{2}
}

type PrecedenceValue int32

const (
	PrecedenceValue_Default  PrecedenceValue = 0
	PrecedenceValue_Required PrecedenceValue = 1
	PrecedenceValue_Failed   PrecedenceValue = 2
)

// Enum value maps for PrecedenceValue.
var (
	PrecedenceValue_name = map[int32]string{
		0: "Default",
		1: "Required",
		2: "Failed",
	}
	PrecedenceValue_value = map[string]int32{
		"Default":  0,
		"Required": 1,
		"Failed":   2,
	}
)

func (x PrecedenceValue) Enum() *PrecedenceValue {
	p := new(PrecedenceValue)
	*p = x
	return p
}

func (x PrecedenceValue) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PrecedenceValue) Descriptor() protoreflect.EnumDescriptor {
	return file_edge_client_proto_enumTypes[3].Descriptor()
}

func (PrecedenceValue) Type() protoreflect.EnumType {
	return &file_edge_client_proto_enumTypes[3]
}

func (x PrecedenceValue) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PrecedenceValue.Descriptor instead.
func (PrecedenceValue) EnumDescriptor() ([]byte, []int) {
	return file_edge_client_proto_rawDescGZIP(), []int{3}
}

type Flag int32

const (
	Flag_ZERO Flag = 0
	// FIN is an edge payload flag used to signal communication ends
	Flag_FIN Flag = 1
	// TRACE_UUID indicates that peer will send data messages with specially constructed UUID headers
	Flag_TRACE_UUID Flag = 2
	// MULTIPART indicates that peer can accept multipart data messages
	Flag_MULTIPART Flag = 4
	// STREAM indicates connection with stream semantics
	// this allows consolidation of payloads to lower overhead
	Flag_STREAM Flag = 8
	// MULTIPART_MSG set on data message with multiple payloads
	Flag_MULTIPART_MSG Flag = 16
)

// Enum value maps for Flag.
var (
	Flag_name = map[int32]string{
		0:  "ZERO",
		1:  "FIN",
		2:  "TRACE_UUID",
		4:  "MULTIPART",
		8:  "STREAM",
		16: "MULTIPART_MSG",
	}
	Flag_value = map[string]int32{
		"ZERO":          0,
		"FIN":           1,
		"TRACE_UUID":    2,
		"MULTIPART":     4,
		"STREAM":        8,
		"MULTIPART_MSG": 16,
	}
)

func (x Flag) Enum() *Flag {
	p := new(Flag)
	*p = x
	return p
}

func (x Flag) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Flag) Descriptor() protoreflect.EnumDescriptor {
	return file_edge_client_proto_enumTypes[4].Descriptor()
}

func (Flag) Type() protoreflect.EnumType {
	return &file_edge_client_proto_enumTypes[4]
}

func (x Flag) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Flag.Descriptor instead.
func (Flag) EnumDescriptor() ([]byte, []int) {
	return file_edge_client_proto_rawDescGZIP(), []int{4}
}

type PostureResponses struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Responses []*PostureResponse `protobuf:"bytes,1,rep,name=responses,proto3" json:"responses,omitempty"`
}

func (x *PostureResponses) Reset() {
	*x = PostureResponses{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_client_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostureResponses) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostureResponses) ProtoMessage() {}

func (x *PostureResponses) ProtoReflect() protoreflect.Message {
	mi := &file_edge_client_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostureResponses.ProtoReflect.Descriptor instead.
func (*PostureResponses) Descriptor() ([]byte, []int) {
	return file_edge_client_proto_rawDescGZIP(), []int{0}
}

func (x *PostureResponses) GetResponses() []*PostureResponse {
	if x != nil {
		return x.Responses
	}
	return nil
}

type PostureResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//
	//	*PostureResponse_Macs_
	//	*PostureResponse_Os
	//	*PostureResponse_ProcessList_
	//	*PostureResponse_Domain_
	//	*PostureResponse_Woken_
	//	*PostureResponse_Unlocked_
	//	*PostureResponse_SdkInfo_
	Type isPostureResponse_Type `protobuf_oneof:"Type"`
}

func (x *PostureResponse) Reset() {
	*x = PostureResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_client_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostureResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostureResponse) ProtoMessage() {}

func (x *PostureResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edge_client_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostureResponse.ProtoReflect.Descriptor instead.
func (*PostureResponse) Descriptor() ([]byte, []int) {
	return file_edge_client_proto_rawDescGZIP(), []int{1}
}

func (m *PostureResponse) GetType() isPostureResponse_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *PostureResponse) GetMacs() *PostureResponse_Macs {
	if x, ok := x.GetType().(*PostureResponse_Macs_); ok {
		return x.Macs
	}
	return nil
}

func (x *PostureResponse) GetOs() *PostureResponse_OperatingSystem {
	if x, ok := x.GetType().(*PostureResponse_Os); ok {
		return x.Os
	}
	return nil
}

func (x *PostureResponse) GetProcessList() *PostureResponse_ProcessList {
	if x, ok := x.GetType().(*PostureResponse_ProcessList_); ok {
		return x.ProcessList
	}
	return nil
}

func (x *PostureResponse) GetDomain() *PostureResponse_Domain {
	if x, ok := x.GetType().(*PostureResponse_Domain_); ok {
		return x.Domain
	}
	return nil
}

func (x *PostureResponse) GetWoken() *PostureResponse_Woken {
	if x, ok := x.GetType().(*PostureResponse_Woken_); ok {
		return x.Woken
	}
	return nil
}

func (x *PostureResponse) GetUnlocked() *PostureResponse_Unlocked {
	if x, ok := x.GetType().(*PostureResponse_Unlocked_); ok {
		return x.Unlocked
	}
	return nil
}

func (x *PostureResponse) GetSdkInfo() *PostureResponse_SdkInfo {
	if x, ok := x.GetType().(*PostureResponse_SdkInfo_); ok {
		return x.SdkInfo
	}
	return nil
}

type isPostureResponse_Type interface {
	isPostureResponse_Type()
}

type PostureResponse_Macs_ struct {
	Macs *PostureResponse_Macs `protobuf:"bytes,1,opt,name=macs,proto3,oneof"`
}

type PostureResponse_Os struct {
	Os *PostureResponse_OperatingSystem `protobuf:"bytes,2,opt,name=os,proto3,oneof"`
}

type PostureResponse_ProcessList_ struct {
	ProcessList *PostureResponse_ProcessList `protobuf:"bytes,3,opt,name=processList,proto3,oneof"`
}

type PostureResponse_Domain_ struct {
	Domain *PostureResponse_Domain `protobuf:"bytes,4,opt,name=domain,proto3,oneof"`
}

type PostureResponse_Woken_ struct {
	Woken *PostureResponse_Woken `protobuf:"bytes,5,opt,name=woken,proto3,oneof"`
}

type PostureResponse_Unlocked_ struct {
	Unlocked *PostureResponse_Unlocked `protobuf:"bytes,6,opt,name=unlocked,proto3,oneof"`
}

type PostureResponse_SdkInfo_ struct {
	SdkInfo *PostureResponse_SdkInfo `protobuf:"bytes,7,opt,name=sdkInfo,proto3,oneof"`
}

func (*PostureResponse_Macs_) isPostureResponse_Type() {}

func (*PostureResponse_Os) isPostureResponse_Type() {}

func (*PostureResponse_ProcessList_) isPostureResponse_Type() {}

func (*PostureResponse_Domain_) isPostureResponse_Type() {}

func (*PostureResponse_Woken_) isPostureResponse_Type() {}

func (*PostureResponse_Unlocked_) isPostureResponse_Type() {}

func (*PostureResponse_SdkInfo_) isPostureResponse_Type() {}

type PostureResponse_Macs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addresses []string `protobuf:"bytes,1,rep,name=addresses,proto3" json:"addresses,omitempty"`
}

func (x *PostureResponse_Macs) Reset() {
	*x = PostureResponse_Macs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_client_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostureResponse_Macs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostureResponse_Macs) ProtoMessage() {}

func (x *PostureResponse_Macs) ProtoReflect() protoreflect.Message {
	mi := &file_edge_client_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostureResponse_Macs.ProtoReflect.Descriptor instead.
func (*PostureResponse_Macs) Descriptor() ([]byte, []int) {
	return file_edge_client_proto_rawDescGZIP(), []int{1, 0}
}

func (x *PostureResponse_Macs) GetAddresses() []string {
	if x != nil {
		return x.Addresses
	}
	return nil
}

type PostureResponse_OperatingSystem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Build   string `protobuf:"bytes,3,opt,name=build,proto3" json:"build,omitempty"`
}

func (x *PostureResponse_OperatingSystem) Reset() {
	*x = PostureResponse_OperatingSystem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_client_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostureResponse_OperatingSystem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostureResponse_OperatingSystem) ProtoMessage() {}

func (x *PostureResponse_OperatingSystem) ProtoReflect() protoreflect.Message {
	mi := &file_edge_client_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostureResponse_OperatingSystem.ProtoReflect.Descriptor instead.
func (*PostureResponse_OperatingSystem) Descriptor() ([]byte, []int) {
	return file_edge_client_proto_rawDescGZIP(), []int{1, 1}
}

func (x *PostureResponse_OperatingSystem) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *PostureResponse_OperatingSystem) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *PostureResponse_OperatingSystem) GetBuild() string {
	if x != nil {
		return x.Build
	}
	return ""
}

type PostureResponse_Domain struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *PostureResponse_Domain) Reset() {
	*x = PostureResponse_Domain{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_client_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostureResponse_Domain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostureResponse_Domain) ProtoMessage() {}

func (x *PostureResponse_Domain) ProtoReflect() protoreflect.Message {
	mi := &file_edge_client_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostureResponse_Domain.ProtoReflect.Descriptor instead.
func (*PostureResponse_Domain) Descriptor() ([]byte, []int) {
	return file_edge_client_proto_rawDescGZIP(), []int{1, 2}
}

func (x *PostureResponse_Domain) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type PostureResponse_Process struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path               string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	IsRunning          bool     `protobuf:"varint,2,opt,name=isRunning,proto3" json:"isRunning,omitempty"`
	Hash               string   `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`
	SignerFingerprints []string `protobuf:"bytes,4,rep,name=signerFingerprints,proto3" json:"signerFingerprints,omitempty"`
}

func (x *PostureResponse_Process) Reset() {
	*x = PostureResponse_Process{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_client_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostureResponse_Process) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostureResponse_Process) ProtoMessage() {}

func (x *PostureResponse_Process) ProtoReflect() protoreflect.Message {
	mi := &file_edge_client_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostureResponse_Process.ProtoReflect.Descriptor instead.
func (*PostureResponse_Process) Descriptor() ([]byte, []int) {
	return file_edge_client_proto_rawDescGZIP(), []int{1, 3}
}

func (x *PostureResponse_Process) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *PostureResponse_Process) GetIsRunning() bool {
	if x != nil {
		return x.IsRunning
	}
	return false
}

func (x *PostureResponse_Process) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *PostureResponse_Process) GetSignerFingerprints() []string {
	if x != nil {
		return x.SignerFingerprints
	}
	return nil
}

type PostureResponse_ProcessList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Processes []*PostureResponse_Process `protobuf:"bytes,1,rep,name=processes,proto3" json:"processes,omitempty"`
}

func (x *PostureResponse_ProcessList) Reset() {
	*x = PostureResponse_ProcessList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_client_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostureResponse_ProcessList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostureResponse_ProcessList) ProtoMessage() {}

func (x *PostureResponse_ProcessList) ProtoReflect() protoreflect.Message {
	mi := &file_edge_client_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostureResponse_ProcessList.ProtoReflect.Descriptor instead.
func (*PostureResponse_ProcessList) Descriptor() ([]byte, []int) {
	return file_edge_client_proto_rawDescGZIP(), []int{1, 4}
}

func (x *PostureResponse_ProcessList) GetProcesses() []*PostureResponse_Process {
	if x != nil {
		return x.Processes
	}
	return nil
}

type PostureResponse_Woken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=Time,proto3" json:"Time,omitempty"`
}

func (x *PostureResponse_Woken) Reset() {
	*x = PostureResponse_Woken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_client_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostureResponse_Woken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostureResponse_Woken) ProtoMessage() {}

func (x *PostureResponse_Woken) ProtoReflect() protoreflect.Message {
	mi := &file_edge_client_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostureResponse_Woken.ProtoReflect.Descriptor instead.
func (*PostureResponse_Woken) Descriptor() ([]byte, []int) {
	return file_edge_client_proto_rawDescGZIP(), []int{1, 5}
}

func (x *PostureResponse_Woken) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

type PostureResponse_Unlocked struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=Time,proto3" json:"Time,omitempty"`
}

func (x *PostureResponse_Unlocked) Reset() {
	*x = PostureResponse_Unlocked{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_client_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostureResponse_Unlocked) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostureResponse_Unlocked) ProtoMessage() {}

func (x *PostureResponse_Unlocked) ProtoReflect() protoreflect.Message {
	mi := &file_edge_client_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostureResponse_Unlocked.ProtoReflect.Descriptor instead.
func (*PostureResponse_Unlocked) Descriptor() ([]byte, []int) {
	return file_edge_client_proto_rawDescGZIP(), []int{1, 6}
}

func (x *PostureResponse_Unlocked) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

type PostureResponse_SdkInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId      string `protobuf:"bytes,1,opt,name=appId,proto3" json:"appId,omitempty"`
	AppVersion string `protobuf:"bytes,2,opt,name=appVersion,proto3" json:"appVersion,omitempty"`
	Branch     string `protobuf:"bytes,3,opt,name=branch,proto3" json:"branch,omitempty"`
	Revision   string `protobuf:"bytes,4,opt,name=revision,proto3" json:"revision,omitempty"`
	Type       string `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	Version    string `protobuf:"bytes,6,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *PostureResponse_SdkInfo) Reset() {
	*x = PostureResponse_SdkInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_client_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostureResponse_SdkInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostureResponse_SdkInfo) ProtoMessage() {}

func (x *PostureResponse_SdkInfo) ProtoReflect() protoreflect.Message {
	mi := &file_edge_client_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostureResponse_SdkInfo.ProtoReflect.Descriptor instead.
func (*PostureResponse_SdkInfo) Descriptor() ([]byte, []int) {
	return file_edge_client_proto_rawDescGZIP(), []int{1, 7}
}

func (x *PostureResponse_SdkInfo) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *PostureResponse_SdkInfo) GetAppVersion() string {
	if x != nil {
		return x.AppVersion
	}
	return ""
}

func (x *PostureResponse_SdkInfo) GetBranch() string {
	if x != nil {
		return x.Branch
	}
	return ""
}

func (x *PostureResponse_SdkInfo) GetRevision() string {
	if x != nil {
		return x.Revision
	}
	return ""
}

func (x *PostureResponse_SdkInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *PostureResponse_SdkInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

var File_edge_client_proto protoreflect.FileDescriptor

var file_edge_client_proto_rawDesc = []byte{
	0x0a, 0x11, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x13, 0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x62, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x56, 0x0a, 0x10, 0x50, 0x6f, 0x73,
	0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x12, 0x42, 0x0a,
	0x09, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x09, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x73, 0x22, 0xaa, 0x09, 0x0a, 0x0f, 0x50, 0x6f, 0x73, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x04, 0x6d, 0x61, 0x63, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x75, 0x72,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4d, 0x61, 0x63, 0x73, 0x48, 0x00,
	0x52, 0x04, 0x6d, 0x61, 0x63, 0x73, 0x12, 0x46, 0x0a, 0x02, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x34, 0x2e, 0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x75, 0x72, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x02, 0x6f, 0x73, 0x12, 0x54,
	0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x75, 0x72,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x45, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65,
	0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x75,
	0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x48, 0x00, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x42, 0x0a, 0x05, 0x77,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x7a, 0x69, 0x74,
	0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x62,
	0x2e, 0x50, 0x6f, 0x73, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x57, 0x6f, 0x6b, 0x65, 0x6e, 0x48, 0x00, 0x52, 0x05, 0x77, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x4b, 0x0a, 0x08, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2d, 0x2e, 0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x75, 0x72, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64,
	0x48, 0x00, 0x52, 0x08, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x48, 0x0a, 0x07,
	0x73, 0x64, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e,
	0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x70, 0x62, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x53, 0x64, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x07, 0x73,
	0x64, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x24, 0x0a, 0x04, 0x4d, 0x61, 0x63, 0x73, 0x12, 0x1c,
	0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x1a, 0x55, 0x0a, 0x0f,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a,
	0x05, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x1a, 0x1c, 0x0a, 0x06, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x1a, 0x7f, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x12,
	0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61,
	0x73, 0x68, 0x12, 0x2e, 0x0a, 0x12, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x46, 0x69, 0x6e, 0x67,
	0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x12,
	0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x46, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e,
	0x74, 0x73, 0x1a, 0x59, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x4a, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65,
	0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x75,
	0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x73, 0x1a, 0x37, 0x0a,
	0x05, 0x57, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2e, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x1a, 0x3a, 0x0a, 0x08, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b,
	0x65, 0x64, 0x12, 0x2e, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x54, 0x69,
	0x6d, 0x65, 0x1a, 0xa1, 0x01, 0x0a, 0x07, 0x53, 0x64, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14,
	0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61,
	0x70, 0x70, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x70, 0x70, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12, 0x1a, 0x0a, 0x08,
	0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x06, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x2a, 0xd3,
	0x04, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x09,
	0x0a, 0x05, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x50, 0x69, 0x6e,
	0x67, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x10, 0x02, 0x12,
	0x0b, 0x0a, 0x07, 0x4c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x10, 0x03, 0x12, 0x11, 0x0a, 0x0b,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x10, 0xef, 0xda, 0x03, 0x12,
	0x18, 0x0a, 0x12, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x10, 0xf0, 0xda, 0x03, 0x12, 0x15, 0x0a, 0x0f, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x10, 0xf1, 0xda, 0x03,
	0x12, 0x0e, 0x0a, 0x08, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x10, 0xf2, 0xda, 0x03,
	0x12, 0x0e, 0x0a, 0x08, 0x44, 0x69, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x10, 0xf3, 0xda, 0x03,
	0x12, 0x15, 0x0a, 0x0f, 0x44, 0x69, 0x61, 0x6c, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54,
	0x79, 0x70, 0x65, 0x10, 0xf4, 0xda, 0x03, 0x12, 0x14, 0x0a, 0x0e, 0x44, 0x69, 0x61, 0x6c, 0x46,
	0x61, 0x69, 0x6c, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x10, 0xf5, 0xda, 0x03, 0x12, 0x0e, 0x0a,
	0x08, 0x42, 0x69, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x10, 0xf6, 0xda, 0x03, 0x12, 0x10, 0x0a,
	0x0a, 0x55, 0x6e, 0x62, 0x69, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x10, 0xf7, 0xda, 0x03, 0x12,
	0x1b, 0x0a, 0x15, 0x53, 0x74, 0x61, 0x74, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x45,
	0x6e, 0x64, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x10, 0xf8, 0xda, 0x03, 0x12, 0x0f, 0x0a, 0x09,
	0x50, 0x72, 0x6f, 0x62, 0x65, 0x54, 0x79, 0x70, 0x65, 0x10, 0xf9, 0xda, 0x03, 0x12, 0x14, 0x0a,
	0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x10,
	0xfa, 0xda, 0x03, 0x12, 0x15, 0x0a, 0x0f, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x10, 0xfb, 0xda, 0x03, 0x12, 0x14, 0x0a, 0x0e, 0x54, 0x72,
	0x61, 0x63, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x10, 0xfc, 0xda, 0x03,
	0x12, 0x1c, 0x0a, 0x16, 0x54, 0x72, 0x61, 0x63, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x10, 0xfd, 0xda, 0x03, 0x12, 0x18,
	0x0a, 0x12, 0x43, 0x6f, 0x6e, 0x6e, 0x49, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x10, 0xfe, 0xda, 0x03, 0x12, 0x19, 0x0a, 0x13, 0x43, 0x6f, 0x6e, 0x6e,
	0x49, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10,
	0xff, 0xda, 0x03, 0x12, 0x11, 0x0a, 0x0b, 0x42, 0x69, 0x6e, 0x64, 0x53, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x10, 0x80, 0xdb, 0x03, 0x12, 0x1c, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65,
	0x10, 0x81, 0xdb, 0x03, 0x12, 0x1c, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x10, 0x82,
	0xdb, 0x03, 0x12, 0x15, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x10, 0x83, 0xdb, 0x03, 0x12, 0x18, 0x0a, 0x13, 0x50, 0x6f, 0x73,
	0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x10, 0xb0, 0x54, 0x12, 0x1f, 0x0a, 0x1a, 0x50, 0x6f, 0x73, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70,
	0x65, 0x10, 0xb1, 0x54, 0x2a, 0xa8, 0x04, 0x0a, 0x08, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x08, 0x0a, 0x04, 0x5a, 0x45, 0x52, 0x30, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x04, 0x55,
	0x55, 0x49, 0x44, 0x10, 0x80, 0x01, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x6e, 0x49, 0x64,
	0x10, 0xe8, 0x07, 0x12, 0x08, 0x0a, 0x03, 0x53, 0x65, 0x71, 0x10, 0xe9, 0x07, 0x12, 0x11, 0x0a,
	0x0c, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x10, 0xea, 0x07,
	0x12, 0x0e, 0x0a, 0x09, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x10, 0xeb, 0x07,
	0x12, 0x09, 0x0a, 0x04, 0x43, 0x6f, 0x73, 0x74, 0x10, 0xec, 0x07, 0x12, 0x0f, 0x0a, 0x0a, 0x50,
	0x72, 0x65, 0x63, 0x65, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x10, 0xed, 0x07, 0x12, 0x17, 0x0a, 0x12,
	0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x10, 0xee, 0x07, 0x12, 0x1d, 0x0a, 0x18, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61,
	0x74, 0x6f, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x10, 0xef, 0x07, 0x12, 0x0d, 0x0a, 0x08, 0x43, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64,
	0x10, 0xf0, 0x07, 0x12, 0x11, 0x0a, 0x0c, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x10, 0xf1, 0x07, 0x12, 0x0a, 0x0a, 0x05, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x10,
	0xf2, 0x07, 0x12, 0x0c, 0x0a, 0x07, 0x41, 0x70, 0x70, 0x44, 0x61, 0x74, 0x61, 0x10, 0xf3, 0x07,
	0x12, 0x19, 0x0a, 0x14, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x64, 0x43, 0x6f, 0x6e, 0x6e, 0x49, 0x64, 0x10, 0xf4, 0x07, 0x12, 0x11, 0x0a, 0x0c, 0x48,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x10, 0xf5, 0x07, 0x12, 0x0e,
	0x0a, 0x09, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x10, 0xf6, 0x07, 0x12, 0x0e,
	0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x10, 0xf7, 0x07, 0x12, 0x12,
	0x0a, 0x0d, 0x54, 0x72, 0x61, 0x63, 0x65, 0x48, 0x6f, 0x70, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x10,
	0xf8, 0x07, 0x12, 0x11, 0x0a, 0x0c, 0x54, 0x72, 0x61, 0x63, 0x65, 0x48, 0x6f, 0x70, 0x54, 0x79,
	0x70, 0x65, 0x10, 0xf9, 0x07, 0x12, 0x0f, 0x0a, 0x0a, 0x54, 0x72, 0x61, 0x63, 0x65, 0x48, 0x6f,
	0x70, 0x49, 0x64, 0x10, 0xfa, 0x07, 0x12, 0x19, 0x0a, 0x14, 0x54, 0x72, 0x61, 0x63, 0x65, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x10, 0xfb,
	0x07, 0x12, 0x0f, 0x0a, 0x0a, 0x54, 0x72, 0x61, 0x63, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10,
	0xfc, 0x07, 0x12, 0x0f, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x49, 0x64,
	0x10, 0xfd, 0x07, 0x12, 0x0d, 0x0a, 0x08, 0x43, 0x6f, 0x6e, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x10,
	0xfe, 0x07, 0x12, 0x14, 0x0a, 0x0f, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x49, 0x6e,
	0x73, 0x70, 0x65, 0x63, 0x74, 0x10, 0xff, 0x07, 0x12, 0x18, 0x0a, 0x13, 0x53, 0x75, 0x70, 0x70,
	0x6f, 0x72, 0x74, 0x73, 0x42, 0x69, 0x6e, 0x64, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10,
	0x80, 0x08, 0x12, 0x15, 0x0a, 0x10, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x61, 0x72, 0x6b, 0x65, 0x72, 0x10, 0x81, 0x08, 0x12, 0x0e, 0x0a, 0x09, 0x43, 0x69, 0x72,
	0x63, 0x75, 0x69, 0x74, 0x49, 0x64, 0x10, 0x82, 0x08, 0x12, 0x14, 0x0a, 0x0f, 0x53, 0x74, 0x69,
	0x63, 0x6b, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x10, 0x83, 0x08, 0x2a,
	0x86, 0x02, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10,
	0x00, 0x12, 0x0c, 0x0a, 0x08, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x10, 0x01, 0x12,
	0x15, 0x0a, 0x11, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x41, 0x70, 0x69, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x10, 0x03, 0x12, 0x14, 0x0a, 0x10, 0x57, 0x72,
	0x6f, 0x6e, 0x67, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x10, 0x04,
	0x12, 0x1f, 0x0a, 0x1b, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x45, 0x64, 0x67, 0x65, 0x52,
	0x6f, 0x75, 0x74, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x10,
	0x05, 0x12, 0x12, 0x0a, 0x0e, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x10, 0x06, 0x12, 0x17, 0x0a, 0x13, 0x54, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x69,
	0x6e, 0x67, 0x4e, 0x6f, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x10, 0x07, 0x12, 0x15,
	0x0a, 0x11, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61,
	0x74, 0x6f, 0x72, 0x10, 0x08, 0x12, 0x15, 0x0a, 0x11, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x50, 0x72, 0x65, 0x63, 0x65, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x10, 0x09, 0x12, 0x0f, 0x0a, 0x0b,
	0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x43, 0x6f, 0x73, 0x74, 0x10, 0x0a, 0x12, 0x19, 0x0a,
	0x15, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x4d,
	0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x10, 0x0b, 0x2a, 0x38, 0x0a, 0x0f, 0x50, 0x72, 0x65, 0x63,
	0x65, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x44,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x64, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64,
	0x10, 0x02, 0x2a, 0x57, 0x0a, 0x04, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x08, 0x0a, 0x04, 0x5a, 0x45,
	0x52, 0x4f, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x46, 0x49, 0x4e, 0x10, 0x01, 0x12, 0x0e, 0x0a,
	0x0a, 0x54, 0x52, 0x41, 0x43, 0x45, 0x5f, 0x55, 0x55, 0x49, 0x44, 0x10, 0x02, 0x12, 0x0d, 0x0a,
	0x09, 0x4d, 0x55, 0x4c, 0x54, 0x49, 0x50, 0x41, 0x52, 0x54, 0x10, 0x04, 0x12, 0x0a, 0x0a, 0x06,
	0x53, 0x54, 0x52, 0x45, 0x41, 0x4d, 0x10, 0x08, 0x12, 0x11, 0x0a, 0x0d, 0x4d, 0x55, 0x4c, 0x54,
	0x49, 0x50, 0x41, 0x52, 0x54, 0x5f, 0x4d, 0x53, 0x47, 0x10, 0x10, 0x42, 0x4b, 0x0a, 0x17, 0x6f,
	0x72, 0x67, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5a, 0x30, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x7a, 0x69, 0x74, 0x69, 0x2f, 0x73, 0x64, 0x6b, 0x2d,
	0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x70, 0x62, 0x2f, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_edge_client_proto_rawDescOnce sync.Once
	file_edge_client_proto_rawDescData = file_edge_client_proto_rawDesc
)

func file_edge_client_proto_rawDescGZIP() []byte {
	file_edge_client_proto_rawDescOnce.Do(func() {
		file_edge_client_proto_rawDescData = protoimpl.X.CompressGZIP(file_edge_client_proto_rawDescData)
	})
	return file_edge_client_proto_rawDescData
}

var file_edge_client_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_edge_client_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_edge_client_proto_goTypes = []interface{}{
	(ContentType)(0),                        // 0: ziti.edge_client.pb.ContentType
	(HeaderId)(0),                           // 1: ziti.edge_client.pb.HeaderId
	(Error)(0),                              // 2: ziti.edge_client.pb.Error
	(PrecedenceValue)(0),                    // 3: ziti.edge_client.pb.PrecedenceValue
	(Flag)(0),                               // 4: ziti.edge_client.pb.Flag
	(*PostureResponses)(nil),                // 5: ziti.edge_client.pb.PostureResponses
	(*PostureResponse)(nil),                 // 6: ziti.edge_client.pb.PostureResponse
	(*PostureResponse_Macs)(nil),            // 7: ziti.edge_client.pb.PostureResponse.Macs
	(*PostureResponse_OperatingSystem)(nil), // 8: ziti.edge_client.pb.PostureResponse.OperatingSystem
	(*PostureResponse_Domain)(nil),          // 9: ziti.edge_client.pb.PostureResponse.Domain
	(*PostureResponse_Process)(nil),         // 10: ziti.edge_client.pb.PostureResponse.Process
	(*PostureResponse_ProcessList)(nil),     // 11: ziti.edge_client.pb.PostureResponse.ProcessList
	(*PostureResponse_Woken)(nil),           // 12: ziti.edge_client.pb.PostureResponse.Woken
	(*PostureResponse_Unlocked)(nil),        // 13: ziti.edge_client.pb.PostureResponse.Unlocked
	(*PostureResponse_SdkInfo)(nil),         // 14: ziti.edge_client.pb.PostureResponse.SdkInfo
	(*timestamppb.Timestamp)(nil),           // 15: google.protobuf.Timestamp
}
var file_edge_client_proto_depIdxs = []int32{
	6,  // 0: ziti.edge_client.pb.PostureResponses.responses:type_name -> ziti.edge_client.pb.PostureResponse
	7,  // 1: ziti.edge_client.pb.PostureResponse.macs:type_name -> ziti.edge_client.pb.PostureResponse.Macs
	8,  // 2: ziti.edge_client.pb.PostureResponse.os:type_name -> ziti.edge_client.pb.PostureResponse.OperatingSystem
	11, // 3: ziti.edge_client.pb.PostureResponse.processList:type_name -> ziti.edge_client.pb.PostureResponse.ProcessList
	9,  // 4: ziti.edge_client.pb.PostureResponse.domain:type_name -> ziti.edge_client.pb.PostureResponse.Domain
	12, // 5: ziti.edge_client.pb.PostureResponse.woken:type_name -> ziti.edge_client.pb.PostureResponse.Woken
	13, // 6: ziti.edge_client.pb.PostureResponse.unlocked:type_name -> ziti.edge_client.pb.PostureResponse.Unlocked
	14, // 7: ziti.edge_client.pb.PostureResponse.sdkInfo:type_name -> ziti.edge_client.pb.PostureResponse.SdkInfo
	10, // 8: ziti.edge_client.pb.PostureResponse.ProcessList.processes:type_name -> ziti.edge_client.pb.PostureResponse.Process
	15, // 9: ziti.edge_client.pb.PostureResponse.Woken.Time:type_name -> google.protobuf.Timestamp
	15, // 10: ziti.edge_client.pb.PostureResponse.Unlocked.Time:type_name -> google.protobuf.Timestamp
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_edge_client_proto_init() }
func file_edge_client_proto_init() {
	if File_edge_client_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_edge_client_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostureResponses); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_client_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostureResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_client_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostureResponse_Macs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_client_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostureResponse_OperatingSystem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_client_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostureResponse_Domain); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_client_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostureResponse_Process); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_client_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostureResponse_ProcessList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_client_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostureResponse_Woken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_client_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostureResponse_Unlocked); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_client_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostureResponse_SdkInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_edge_client_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*PostureResponse_Macs_)(nil),
		(*PostureResponse_Os)(nil),
		(*PostureResponse_ProcessList_)(nil),
		(*PostureResponse_Domain_)(nil),
		(*PostureResponse_Woken_)(nil),
		(*PostureResponse_Unlocked_)(nil),
		(*PostureResponse_SdkInfo_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_edge_client_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_edge_client_proto_goTypes,
		DependencyIndexes: file_edge_client_proto_depIdxs,
		EnumInfos:         file_edge_client_proto_enumTypes,
		MessageInfos:      file_edge_client_proto_msgTypes,
	}.Build()
	File_edge_client_proto = out.File
	file_edge_client_proto_rawDesc = nil
	file_edge_client_proto_goTypes = nil
	file_edge_client_proto_depIdxs = nil
}
