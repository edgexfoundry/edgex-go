// Code generated by mockery v2.45.0. DO NOT EDIT.

package mocks

import (
	http "net/http"

	mock "github.com/stretchr/testify/mock"
)

// AuthenticationInjector is an autogenerated mock type for the AuthenticationInjector type
type AuthenticationInjector struct {
	mock.Mock
}

// AddAuthenticationData provides a mock function with given fields: _a0
func (_m *AuthenticationInjector) AddAuthenticationData(_a0 *http.Request) error {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for AddAuthenticationData")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*http.Request) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// RoundTripper provides a mock function with given fields:
func (_m *AuthenticationInjector) RoundTripper() http.RoundTripper {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for RoundTripper")
	}

	var r0 http.RoundTripper
	if rf, ok := ret.Get(0).(func() http.RoundTripper); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(http.RoundTripper)
		}
	}

	return r0
}

// NewAuthenticationInjector creates a new instance of AuthenticationInjector. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewAuthenticationInjector(t interface {
	mock.TestingT
	Cleanup(func())
}) *AuthenticationInjector {
	mock := &AuthenticationInjector{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
